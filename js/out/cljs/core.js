// Compiled by ClojureScript 0.0-2816 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string');
goog.require('goog.object');
goog.require('goog.array');
goog.require('goog.string.StringBuffer');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2816";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__11833__delegate = function (args){
return console.log.apply(console,(function (){var G__11832 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__11832) : cljs.core.into_array.call(null,G__11832));
})());
};
var G__11833 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11834__i = 0, G__11834__a = new Array(arguments.length -  0);
while (G__11834__i < G__11834__a.length) {G__11834__a[G__11834__i] = arguments[G__11834__i + 0]; ++G__11834__i;}
  args = new cljs.core.IndexedSeq(G__11834__a,0);
} 
return G__11833__delegate.call(this,args);};
G__11833.cljs$lang$maxFixedArity = 0;
G__11833.cljs$lang$applyTo = (function (arglist__11835){
var args = cljs.core.seq(arglist__11835);
return G__11833__delegate(args);
});
G__11833.cljs$core$IFn$_invoke$arity$variadic = G__11833__delegate;
return G__11833;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__11837 = x;
return goog.isString(G__11837);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__11839 = x__$1;
return goog.typeOf(G__11839);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3753__auto__ = ty;
if(cljs.core.truth_(and__3753__auto__)){
return ty.cljs$lang$type;
} else {
return and__3753__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__11841 = obj;
return goog.typeOf(G__11841);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4421__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4421__auto__)){
var s = temp__4421__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__11843 = Symbol;
return goog.typeOf(G__11843);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4652__auto___11845 = len;
var i_11846 = (0);
while(true){
if((i_11846 < n__4652__auto___11845)){
(new_arr[i_11846] = (arr[i_11846]));

var G__11847 = (i_11846 + (1));
i_11846 = G__11847;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__11848 = (i + (1));
i = G__11848;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__11857__delegate = function (array,i,idxs){
var G__11854 = aget;
var G__11855 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__11856 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__11854,G__11855,G__11856) : cljs.core.apply.call(null,G__11854,G__11855,G__11856));
};
var G__11857 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__11858__i = 0, G__11858__a = new Array(arguments.length -  2);
while (G__11858__i < G__11858__a.length) {G__11858__a[G__11858__i] = arguments[G__11858__i + 2]; ++G__11858__i;}
  idxs = new cljs.core.IndexedSeq(G__11858__a,0);
} 
return G__11857__delegate.call(this,array,i,idxs);};
G__11857.cljs$lang$maxFixedArity = 2;
G__11857.cljs$lang$applyTo = (function (arglist__11859){
var array = cljs.core.first(arglist__11859);
arglist__11859 = cljs.core.next(arglist__11859);
var i = cljs.core.first(arglist__11859);
var idxs = cljs.core.rest(arglist__11859);
return G__11857__delegate(array,i,idxs);
});
G__11857.cljs$core$IFn$_invoke$arity$variadic = G__11857__delegate;
return G__11857;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__11860 = null;
if (arguments.length > 2) {
var G__11861__i = 0, G__11861__a = new Array(arguments.length -  2);
while (G__11861__i < G__11861__a.length) {G__11861__a[G__11861__i] = arguments[G__11861__i + 2]; ++G__11861__i;}
G__11860 = new cljs.core.IndexedSeq(G__11861__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__11860);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__11870__delegate = function (array,idx,idx2,idxv){
var G__11866 = aset;
var G__11867 = (array[idx]);
var G__11868 = idx2;
var G__11869 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__11866,G__11867,G__11868,G__11869) : cljs.core.apply.call(null,G__11866,G__11867,G__11868,G__11869));
};
var G__11870 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__11871__i = 0, G__11871__a = new Array(arguments.length -  3);
while (G__11871__i < G__11871__a.length) {G__11871__a[G__11871__i] = arguments[G__11871__i + 3]; ++G__11871__i;}
  idxv = new cljs.core.IndexedSeq(G__11871__a,0);
} 
return G__11870__delegate.call(this,array,idx,idx2,idxv);};
G__11870.cljs$lang$maxFixedArity = 3;
G__11870.cljs$lang$applyTo = (function (arglist__11872){
var array = cljs.core.first(arglist__11872);
arglist__11872 = cljs.core.next(arglist__11872);
var idx = cljs.core.first(arglist__11872);
arglist__11872 = cljs.core.next(arglist__11872);
var idx2 = cljs.core.first(arglist__11872);
var idxv = cljs.core.rest(arglist__11872);
return G__11870__delegate(array,idx,idx2,idxv);
});
G__11870.cljs$core$IFn$_invoke$arity$variadic = G__11870__delegate;
return G__11870;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__11873 = null;
if (arguments.length > 3) {
var G__11874__i = 0, G__11874__a = new Array(arguments.length -  3);
while (G__11874__i < G__11874__a.length) {G__11874__a[G__11874__i] = arguments[G__11874__i + 3]; ++G__11874__i;}
G__11873 = new cljs.core.IndexedSeq(G__11874__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__11873);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__11880 = (function (a,x){
a.push(x);

return a;
});
var G__11881 = [];
var G__11882 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11880,G__11881,G__11882) : cljs.core.reduce.call(null,G__11880,G__11881,G__11882));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__11883__i = 0, G__11883__a = new Array(arguments.length -  2);
while (G__11883__i < G__11883__a.length) {G__11883__a[G__11883__i] = arguments[G__11883__i + 2]; ++G__11883__i;}
  args = new cljs.core.IndexedSeq(G__11883__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__11884){
var obj = cljs.core.first(arglist__11884);
arglist__11884 = cljs.core.next(arglist__11884);
var s = cljs.core.first(arglist__11884);
var args = cljs.core.rest(arglist__11884);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj11886 = {};
return obj11886;
})();


cljs.core.IFn = (function (){var obj11888 = {};
return obj11888;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11934 = x__4409__auto__;
return goog.typeOf(G__11934);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11936 = x__4409__auto__;
return goog.typeOf(G__11936);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11938 = x__4409__auto__;
return goog.typeOf(G__11938);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11940 = x__4409__auto__;
return goog.typeOf(G__11940);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11942 = x__4409__auto__;
return goog.typeOf(G__11942);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11944 = x__4409__auto__;
return goog.typeOf(G__11944);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11946 = x__4409__auto__;
return goog.typeOf(G__11946);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11948 = x__4409__auto__;
return goog.typeOf(G__11948);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11950 = x__4409__auto__;
return goog.typeOf(G__11950);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11952 = x__4409__auto__;
return goog.typeOf(G__11952);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11954 = x__4409__auto__;
return goog.typeOf(G__11954);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11956 = x__4409__auto__;
return goog.typeOf(G__11956);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11958 = x__4409__auto__;
return goog.typeOf(G__11958);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11960 = x__4409__auto__;
return goog.typeOf(G__11960);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11962 = x__4409__auto__;
return goog.typeOf(G__11962);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11964 = x__4409__auto__;
return goog.typeOf(G__11964);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11966 = x__4409__auto__;
return goog.typeOf(G__11966);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11968 = x__4409__auto__;
return goog.typeOf(G__11968);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11970 = x__4409__auto__;
return goog.typeOf(G__11970);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11972 = x__4409__auto__;
return goog.typeOf(G__11972);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11974 = x__4409__auto__;
return goog.typeOf(G__11974);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._invoke[(function (){var G__11976 = x__4409__auto__;
return goog.typeOf(G__11976);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._invoke["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj11978 = {};
return obj11978;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3753__auto__ = value;
if(and__3753__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3753__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4409__auto__ = (((value == null))?null:value);
return (function (){var or__3765__auto__ = (cljs.core._clone[(function (){var G__11982 = x__4409__auto__;
return goog.typeOf(G__11982);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._clone["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj11984 = {};
return obj11984;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._count[(function (){var G__11988 = x__4409__auto__;
return goog.typeOf(G__11988);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._count["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj11990 = {};
return obj11990;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._empty[(function (){var G__11994 = x__4409__auto__;
return goog.typeOf(G__11994);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._empty["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj11996 = {};
return obj11996;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._conj[(function (){var G__12000 = x__4409__auto__;
return goog.typeOf(G__12000);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._conj["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj12002 = {};
return obj12002;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._nth[(function (){var G__12008 = x__4409__auto__;
return goog.typeOf(G__12008);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._nth["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._nth[(function (){var G__12010 = x__4409__auto__;
return goog.typeOf(G__12010);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._nth["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj12012 = {};
return obj12012;
})();


cljs.core.ISeq = (function (){var obj12014 = {};
return obj12014;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._first[(function (){var G__12018 = x__4409__auto__;
return goog.typeOf(G__12018);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._first["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._rest[(function (){var G__12022 = x__4409__auto__;
return goog.typeOf(G__12022);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._rest["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj12024 = {};
return obj12024;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._next[(function (){var G__12028 = x__4409__auto__;
return goog.typeOf(G__12028);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._next["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj12030 = {};
return obj12030;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._lookup[(function (){var G__12036 = x__4409__auto__;
return goog.typeOf(G__12036);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._lookup["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._lookup[(function (){var G__12038 = x__4409__auto__;
return goog.typeOf(G__12038);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._lookup["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj12040 = {};
return obj12040;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__12044 = x__4409__auto__;
return goog.typeOf(G__12044);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._assoc[(function (){var G__12048 = x__4409__auto__;
return goog.typeOf(G__12048);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._assoc["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj12050 = {};
return obj12050;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._dissoc[(function (){var G__12054 = x__4409__auto__;
return goog.typeOf(G__12054);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj12056 = {};
return obj12056;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._key[(function (){var G__12060 = x__4409__auto__;
return goog.typeOf(G__12060);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._key["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._val[(function (){var G__12064 = x__4409__auto__;
return goog.typeOf(G__12064);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._val["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj12066 = {};
return obj12066;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._disjoin[(function (){var G__12070 = x__4409__auto__;
return goog.typeOf(G__12070);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj12072 = {};
return obj12072;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._peek[(function (){var G__12076 = x__4409__auto__;
return goog.typeOf(G__12076);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._peek["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._pop[(function (){var G__12080 = x__4409__auto__;
return goog.typeOf(G__12080);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._pop["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj12082 = {};
return obj12082;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._assoc_n[(function (){var G__12086 = x__4409__auto__;
return goog.typeOf(G__12086);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj12088 = {};
return obj12088;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._deref[(function (){var G__12092 = x__4409__auto__;
return goog.typeOf(G__12092);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._deref["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj12094 = {};
return obj12094;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._deref_with_timeout[(function (){var G__12098 = x__4409__auto__;
return goog.typeOf(G__12098);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj12100 = {};
return obj12100;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._meta[(function (){var G__12104 = x__4409__auto__;
return goog.typeOf(G__12104);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._meta["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj12106 = {};
return obj12106;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._with_meta[(function (){var G__12110 = x__4409__auto__;
return goog.typeOf(G__12110);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj12112 = {};
return obj12112;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._reduce[(function (){var G__12118 = x__4409__auto__;
return goog.typeOf(G__12118);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._reduce["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._reduce[(function (){var G__12120 = x__4409__auto__;
return goog.typeOf(G__12120);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._reduce["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj12122 = {};
return obj12122;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._kv_reduce[(function (){var G__12126 = x__4409__auto__;
return goog.typeOf(G__12126);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj12128 = {};
return obj12128;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._equiv[(function (){var G__12132 = x__4409__auto__;
return goog.typeOf(G__12132);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._equiv["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj12134 = {};
return obj12134;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._hash[(function (){var G__12138 = x__4409__auto__;
return goog.typeOf(G__12138);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._hash["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj12140 = {};
return obj12140;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._seq[(function (){var G__12144 = x__4409__auto__;
return goog.typeOf(G__12144);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._seq["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj12146 = {};
return obj12146;
})();


cljs.core.IList = (function (){var obj12148 = {};
return obj12148;
})();


cljs.core.IRecord = (function (){var obj12150 = {};
return obj12150;
})();


cljs.core.IReversible = (function (){var obj12152 = {};
return obj12152;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._rseq[(function (){var G__12156 = x__4409__auto__;
return goog.typeOf(G__12156);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._rseq["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj12158 = {};
return obj12158;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._sorted_seq[(function (){var G__12162 = x__4409__auto__;
return goog.typeOf(G__12162);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._sorted_seq_from[(function (){var G__12166 = x__4409__auto__;
return goog.typeOf(G__12166);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._entry_key[(function (){var G__12170 = x__4409__auto__;
return goog.typeOf(G__12170);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._comparator[(function (){var G__12174 = x__4409__auto__;
return goog.typeOf(G__12174);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._comparator["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj12176 = {};
return obj12176;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3753__auto__ = writer;
if(and__3753__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3753__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4409__auto__ = (((writer == null))?null:writer);
return (function (){var or__3765__auto__ = (cljs.core._write[(function (){var G__12180 = x__4409__auto__;
return goog.typeOf(G__12180);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._write["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3753__auto__ = writer;
if(and__3753__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3753__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4409__auto__ = (((writer == null))?null:writer);
return (function (){var or__3765__auto__ = (cljs.core._flush[(function (){var G__12184 = x__4409__auto__;
return goog.typeOf(G__12184);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._flush["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj12186 = {};
return obj12186;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._pr_writer[(function (){var G__12190 = x__4409__auto__;
return goog.typeOf(G__12190);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj12192 = {};
return obj12192;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3753__auto__ = d;
if(and__3753__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3753__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4409__auto__ = (((d == null))?null:d);
return (function (){var or__3765__auto__ = (cljs.core._realized_QMARK_[(function (){var G__12196 = x__4409__auto__;
return goog.typeOf(G__12196);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj12198 = {};
return obj12198;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._notify_watches[(function (){var G__12202 = x__4409__auto__;
return goog.typeOf(G__12202);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._add_watch[(function (){var G__12206 = x__4409__auto__;
return goog.typeOf(G__12206);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3753__auto__ = this$;
if(and__3753__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3753__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4409__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3765__auto__ = (cljs.core._remove_watch[(function (){var G__12210 = x__4409__auto__;
return goog.typeOf(G__12210);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj12212 = {};
return obj12212;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._as_transient[(function (){var G__12216 = x__4409__auto__;
return goog.typeOf(G__12216);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj12218 = {};
return obj12218;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3753__auto__ = tcoll;
if(and__3753__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3753__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4409__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3765__auto__ = (cljs.core._conj_BANG_[(function (){var G__12222 = x__4409__auto__;
return goog.typeOf(G__12222);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3753__auto__ = tcoll;
if(and__3753__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3753__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4409__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3765__auto__ = (cljs.core._persistent_BANG_[(function (){var G__12226 = x__4409__auto__;
return goog.typeOf(G__12226);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj12228 = {};
return obj12228;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3753__auto__ = tcoll;
if(and__3753__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3753__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4409__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3765__auto__ = (cljs.core._assoc_BANG_[(function (){var G__12232 = x__4409__auto__;
return goog.typeOf(G__12232);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj12234 = {};
return obj12234;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3753__auto__ = tcoll;
if(and__3753__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3753__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4409__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3765__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__12238 = x__4409__auto__;
return goog.typeOf(G__12238);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj12240 = {};
return obj12240;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3753__auto__ = tcoll;
if(and__3753__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3753__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4409__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3765__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__12244 = x__4409__auto__;
return goog.typeOf(G__12244);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3753__auto__ = tcoll;
if(and__3753__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3753__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4409__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3765__auto__ = (cljs.core._pop_BANG_[(function (){var G__12248 = x__4409__auto__;
return goog.typeOf(G__12248);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj12250 = {};
return obj12250;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3753__auto__ = tcoll;
if(and__3753__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3753__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4409__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3765__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__12254 = x__4409__auto__;
return goog.typeOf(G__12254);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj12256 = {};
return obj12256;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3753__auto__ = x;
if(and__3753__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3753__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4409__auto__ = (((x == null))?null:x);
return (function (){var or__3765__auto__ = (cljs.core._compare[(function (){var G__12260 = x__4409__auto__;
return goog.typeOf(G__12260);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._compare["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj12262 = {};
return obj12262;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._drop_first[(function (){var G__12266 = x__4409__auto__;
return goog.typeOf(G__12266);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj12268 = {};
return obj12268;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._chunked_first[(function (){var G__12272 = x__4409__auto__;
return goog.typeOf(G__12272);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._chunked_rest[(function (){var G__12276 = x__4409__auto__;
return goog.typeOf(G__12276);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj12278 = {};
return obj12278;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._chunked_next[(function (){var G__12282 = x__4409__auto__;
return goog.typeOf(G__12282);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj12284 = {};
return obj12284;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3753__auto__ = x;
if(and__3753__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3753__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4409__auto__ = (((x == null))?null:x);
return (function (){var or__3765__auto__ = (cljs.core._name[(function (){var G__12288 = x__4409__auto__;
return goog.typeOf(G__12288);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._name["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3753__auto__ = x;
if(and__3753__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3753__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4409__auto__ = (((x == null))?null:x);
return (function (){var or__3765__auto__ = (cljs.core._namespace[(function (){var G__12292 = x__4409__auto__;
return goog.typeOf(G__12292);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._namespace["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj12294 = {};
return obj12294;
})();


cljs.core.IReset = (function (){var obj12296 = {};
return obj12296;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._reset_BANG_[(function (){var G__12300 = x__4409__auto__;
return goog.typeOf(G__12300);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj12302 = {};
return obj12302;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._swap_BANG_[(function (){var G__12312 = x__4409__auto__;
return goog.typeOf(G__12312);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._swap_BANG_[(function (){var G__12314 = x__4409__auto__;
return goog.typeOf(G__12314);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._swap_BANG_[(function (){var G__12316 = x__4409__auto__;
return goog.typeOf(G__12316);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._swap_BANG_[(function (){var G__12318 = x__4409__auto__;
return goog.typeOf(G__12318);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj12320 = {};
return obj12320;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3753__auto__ = o;
if(and__3753__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3753__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4409__auto__ = (((o == null))?null:o);
return (function (){var or__3765__auto__ = (cljs.core._vreset_BANG_[(function (){var G__12324 = x__4409__auto__;
return goog.typeOf(G__12324);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj12326 = {};
return obj12326;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3753__auto__ = coll;
if(and__3753__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3753__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4409__auto__ = (((coll == null))?null:coll);
return (function (){var or__3765__auto__ = (cljs.core._iterator[(function (){var G__12330 = x__4409__auto__;
return goog.typeOf(G__12330);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._iterator["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__12333 = (4294967295);
var G__12334 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__12333,G__12334) : Math.imul.call(null,G__12333,G__12334));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__12337 = a;
var G__12338 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__12337,G__12338) : Math.imul.call(null,G__12337,G__12338));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__12339 = (i + (2));
var G__12340 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__12339;
h1 = G__12340;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj12342 = {};
return obj12342;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__12343 = (i + (1));
var G__12344 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__12343;
hash = G__12344;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj12348 = {};
return obj12348;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__12351 = o;
if(G__12351){
var bit__4439__auto__ = (G__12351.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4439__auto__) || (G__12351.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__12352 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12352) : Math.floor.call(null,G__12352));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3753__auto__ = cljs.core.not(a.ns);
if(and__3753__auto__){
return b.ns;
} else {
return and__3753__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__12359 = a.ns;
var G__12360 = b.ns;
return goog.array.defaultCompare(G__12359,G__12360);
})();
if(((0) === nsc)){
var G__12361 = a.name;
var G__12362 = b.name;
return goog.array.defaultCompare(G__12361,G__12362);
} else {
return nsc;
}
}
} else {
var G__12363 = a.name;
var G__12364 = b.name;
return goog.array.defaultCompare(G__12363,G__12364);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.call = (function() {
var G__12366 = null;
var G__12366__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__12366__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__12366 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__12366__2.call(this,self__,coll);
case 3:
return G__12366__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12366.cljs$core$IFn$_invoke$arity$2 = G__12366__2;
G__12366.cljs$core$IFn$_invoke$arity$3 = G__12366__3;
return G__12366;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args12365){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12365)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4186__auto__ = self__._hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 163841;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.call = (function() {
var G__12414 = null;
var G__12414__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__12414__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__12414__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__12414__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__12414__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__12414__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__12414__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__12414__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__12414__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__12414__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__12414__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__12414__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__12414__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__12414__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__12414__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__12414__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__12414__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__12414__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__12414__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__12414__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__12414__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__12414__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12370 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__12371 = a;
var G__12372 = b;
var G__12373 = c;
var G__12374 = d;
var G__12375 = e;
var G__12376 = f;
var G__12377 = g;
var G__12378 = h;
var G__12379 = i;
var G__12380 = j;
var G__12381 = k;
var G__12382 = l;
var G__12383 = m;
var G__12384 = n;
var G__12385 = o;
var G__12386 = p;
var G__12387 = q;
var G__12388 = r;
var G__12389 = s;
var G__12390 = t;
var G__12391 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12370,G__12371,G__12372,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378,G__12379,G__12380,G__12381,G__12382,G__12383,G__12384,G__12385,G__12386,G__12387,G__12388,G__12389,G__12390,G__12391) : cljs.core.apply.call(null,G__12370,G__12371,G__12372,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378,G__12379,G__12380,G__12381,G__12382,G__12383,G__12384,G__12385,G__12386,G__12387,G__12388,G__12389,G__12390,G__12391));
});
G__12414 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12414__1.call(this,self__);
case 2:
return G__12414__2.call(this,self__,a);
case 3:
return G__12414__3.call(this,self__,a,b);
case 4:
return G__12414__4.call(this,self__,a,b,c);
case 5:
return G__12414__5.call(this,self__,a,b,c,d);
case 6:
return G__12414__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12414__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12414__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12414__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12414__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12414__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12414__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12414__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12414__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12414__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12414__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12414__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12414__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12414__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12414__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12414__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12414__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12414.cljs$core$IFn$_invoke$arity$1 = G__12414__1;
G__12414.cljs$core$IFn$_invoke$arity$2 = G__12414__2;
G__12414.cljs$core$IFn$_invoke$arity$3 = G__12414__3;
G__12414.cljs$core$IFn$_invoke$arity$4 = G__12414__4;
G__12414.cljs$core$IFn$_invoke$arity$5 = G__12414__5;
G__12414.cljs$core$IFn$_invoke$arity$6 = G__12414__6;
G__12414.cljs$core$IFn$_invoke$arity$7 = G__12414__7;
G__12414.cljs$core$IFn$_invoke$arity$8 = G__12414__8;
G__12414.cljs$core$IFn$_invoke$arity$9 = G__12414__9;
G__12414.cljs$core$IFn$_invoke$arity$10 = G__12414__10;
G__12414.cljs$core$IFn$_invoke$arity$11 = G__12414__11;
G__12414.cljs$core$IFn$_invoke$arity$12 = G__12414__12;
G__12414.cljs$core$IFn$_invoke$arity$13 = G__12414__13;
G__12414.cljs$core$IFn$_invoke$arity$14 = G__12414__14;
G__12414.cljs$core$IFn$_invoke$arity$15 = G__12414__15;
G__12414.cljs$core$IFn$_invoke$arity$16 = G__12414__16;
G__12414.cljs$core$IFn$_invoke$arity$17 = G__12414__17;
G__12414.cljs$core$IFn$_invoke$arity$18 = G__12414__18;
G__12414.cljs$core$IFn$_invoke$arity$19 = G__12414__19;
G__12414.cljs$core$IFn$_invoke$arity$20 = G__12414__20;
G__12414.cljs$core$IFn$_invoke$arity$21 = G__12414__21;
G__12414.cljs$core$IFn$_invoke$arity$22 = G__12414__22;
return G__12414;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args12369){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12369)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__12392 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__12393 = a;
var G__12394 = b;
var G__12395 = c;
var G__12396 = d;
var G__12397 = e;
var G__12398 = f;
var G__12399 = g;
var G__12400 = h;
var G__12401 = i;
var G__12402 = j;
var G__12403 = k;
var G__12404 = l;
var G__12405 = m;
var G__12406 = n;
var G__12407 = o;
var G__12408 = p;
var G__12409 = q;
var G__12410 = r;
var G__12411 = s;
var G__12412 = t;
var G__12413 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12392,G__12393,G__12394,G__12395,G__12396,G__12397,G__12398,G__12399,G__12400,G__12401,G__12402,G__12403,G__12404,G__12405,G__12406,G__12407,G__12408,G__12409,G__12410,G__12411,G__12412,G__12413) : cljs.core.apply.call(null,G__12392,G__12393,G__12394,G__12395,G__12396,G__12397,G__12398,G__12399,G__12400,G__12401,G__12402,G__12403,G__12404,G__12405,G__12406,G__12407,G__12408,G__12409,G__12410,G__12411,G__12412,G__12413));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__12416 = x;
if(G__12416){
var bit__4446__auto__ = null;
if(cljs.core.truth_((function (){var or__3765__auto__ = bit__4446__auto__;
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return G__12416.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__12416.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__12416);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__12416);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__12418 = value;
if(G__12418){
var bit__4446__auto__ = (G__12418.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4446__auto__) || (G__12418.cljs$core$ICloneable$)){
return true;
} else {
if((!G__12418.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__12418);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__12418);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12420 = coll;
if(G__12420){
var bit__4439__auto__ = (G__12420.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4439__auto__) || (G__12420.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12422 = coll;
if(G__12422){
var bit__4439__auto__ = (G__12422.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4439__auto__) || (G__12422.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__12424 = coll;
if(G__12424){
var bit__4439__auto__ = (G__12424.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4439__auto__) || (G__12424.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12426 = coll;
if(G__12426){
var bit__4439__auto__ = (G__12426.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4439__auto__) || (G__12426.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__12431__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__12432 = y;
var G__12433 = cljs.core.first(more);
var G__12434 = cljs.core.next(more);
x = G__12432;
y = G__12433;
more = G__12434;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12431 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12435__i = 0, G__12435__a = new Array(arguments.length -  2);
while (G__12435__i < G__12435__a.length) {G__12435__a[G__12435__i] = arguments[G__12435__i + 2]; ++G__12435__i;}
  more = new cljs.core.IndexedSeq(G__12435__a,0);
} 
return G__12431__delegate.call(this,x,y,more);};
G__12431.cljs$lang$maxFixedArity = 2;
G__12431.cljs$lang$applyTo = (function (arglist__12436){
var x = cljs.core.first(arglist__12436);
arglist__12436 = cljs.core.next(arglist__12436);
var y = cljs.core.first(arglist__12436);
var more = cljs.core.rest(arglist__12436);
return G__12431__delegate(x,y,more);
});
G__12431.cljs$core$IFn$_invoke$arity$variadic = G__12431__delegate;
return G__12431;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__12437 = null;
if (arguments.length > 2) {
var G__12438__i = 0, G__12438__a = new Array(arguments.length -  2);
while (G__12438__i < G__12438__a.length) {G__12438__a[G__12438__i] = arguments[G__12438__i + 2]; ++G__12438__i;}
G__12437 = new cljs.core.IndexedSeq(G__12438__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12437);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"value": x, "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__12439 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__12439) : cljs.core.es6_iterator_seq.call(null,G__12439));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__12440 = (n + (1));
var G__12441 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__12442 = cljs.core.next(coll__$1);
n = G__12440;
hash_code = G__12441;
coll__$1 = G__12442;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__12443 = (n + (1));
var G__12444 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__12445 = cljs.core.next(coll__$1);
n = G__12443;
hash_code = G__12444;
coll__$1 = G__12445;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.Fn["function"] = true);

(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__12446 = o;
return goog.getUid(G__12446);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__12448 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12448) : cljs.core.deref.call(null,G__12448));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__12455 = val;
var G__12456 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12455,G__12456) : f.call(null,G__12455,G__12456));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12461 = nval;
var G__12462 = (n + (1));
val = G__12461;
n = G__12462;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__12457 = val__$1;
var G__12458 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12457,G__12458) : f.call(null,G__12457,G__12458));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12463 = nval;
var G__12464 = (n + (1));
val__$1 = G__12463;
n = G__12464;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__12459 = val__$1;
var G__12460 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12459,G__12460) : f.call(null,G__12459,G__12460));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12465 = nval;
var G__12466 = (n + (1));
val__$1 = G__12465;
n = G__12466;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__12473 = val;
var G__12474 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12473,G__12474) : f.call(null,G__12473,G__12474));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12479 = nval;
var G__12480 = (n + (1));
val = G__12479;
n = G__12480;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__12475 = val__$1;
var G__12476 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12475,G__12476) : f.call(null,G__12475,G__12476));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12481 = nval;
var G__12482 = (n + (1));
val__$1 = G__12481;
n = G__12482;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__12477 = val__$1;
var G__12478 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12477,G__12478) : f.call(null,G__12477,G__12478));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12483 = nval;
var G__12484 = (n + (1));
val__$1 = G__12483;
n = G__12484;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__12486 = x;
if(G__12486){
var bit__4446__auto__ = (G__12486.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4446__auto__) || (G__12486.cljs$core$ICounted$)){
return true;
} else {
if((!G__12486.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__12486);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__12486);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__12488 = x;
if(G__12488){
var bit__4446__auto__ = (G__12488.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4446__auto__) || (G__12488.cljs$core$IIndexed$)){
return true;
} else {
if((!G__12488.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__12488);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__12488);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__12489 = coll__$1;
var G__12490 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__12489,G__12490) : cljs.core.equiv_sequential.call(null,G__12489,G__12490));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__12491 = o;
var G__12492 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__12491,G__12492) : cljs.core.cons.call(null,G__12491,G__12492));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__12495 = coll__$1;
var G__12496 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__12495,G__12496) : cljs.core.equiv_sequential.call(null,G__12495,G__12496));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__12497 = cljs.core.List.EMPTY;
var G__12498 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__12497,G__12498) : cljs.core.with_meta.call(null,G__12497,G__12498));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__12499 = f;
var G__12500 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__12499,G__12500) : cljs.core.seq_reduce.call(null,G__12499,G__12500));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__12501 = f;
var G__12502 = start;
var G__12503 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__12501,G__12502,G__12503) : cljs.core.seq_reduce.call(null,G__12501,G__12502,G__12503));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__12504 = o;
var G__12505 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__12504,G__12505) : cljs.core.cons.call(null,G__12504,G__12505));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__12506 = sn;
s = G__12506;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__12511__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__12512 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__12513 = cljs.core.first(xs);
var G__12514 = cljs.core.next(xs);
coll = G__12512;
x = G__12513;
xs = G__12514;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__12511 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__12515__i = 0, G__12515__a = new Array(arguments.length -  2);
while (G__12515__i < G__12515__a.length) {G__12515__a[G__12515__i] = arguments[G__12515__i + 2]; ++G__12515__i;}
  xs = new cljs.core.IndexedSeq(G__12515__a,0);
} 
return G__12511__delegate.call(this,coll,x,xs);};
G__12511.cljs$lang$maxFixedArity = 2;
G__12511.cljs$lang$applyTo = (function (arglist__12516){
var coll = cljs.core.first(arglist__12516);
arglist__12516 = cljs.core.next(arglist__12516);
var x = cljs.core.first(arglist__12516);
var xs = cljs.core.rest(arglist__12516);
return G__12511__delegate(coll,x,xs);
});
G__12511.cljs$core$IFn$_invoke$arity$variadic = G__12511__delegate;
return G__12511;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__12517 = null;
if (arguments.length > 2) {
var G__12518__i = 0, G__12518__a = new Array(arguments.length -  2);
while (G__12518__i < G__12518__a.length) {G__12518__a[G__12518__i] = arguments[G__12518__i + 2]; ++G__12518__i;}
G__12517 = new cljs.core.IndexedSeq(G__12518__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__12517);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__12519 = cljs.core.next(s);
var G__12520 = (acc + (1));
s = G__12519;
acc = G__12520;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__12522 = coll;
if(G__12522){
var bit__4439__auto__ = (G__12522.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4439__auto__) || (G__12522.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__12523 = cljs.core.next(coll);
var G__12524 = (n - (1));
coll = G__12523;
n = G__12524;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__12525 = cljs.core.next(coll);
var G__12526 = (n - (1));
var G__12527 = not_found;
coll = G__12525;
n = G__12526;
not_found = G__12527;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__12532 = coll;
if(G__12532){
var bit__4439__auto__ = (G__12532.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4439__auto__) || (G__12532.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__12533 = coll;
if(G__12533){
var bit__4446__auto__ = (G__12533.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4446__auto__) || (G__12533.cljs$core$ISeq$)){
return true;
} else {
if((!G__12533.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12533);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12533);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__12534 = coll;
if(G__12534){
var bit__4439__auto__ = (G__12534.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4439__auto__) || (G__12534.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__12535 = coll;
if(G__12535){
var bit__4446__auto__ = (G__12535.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4446__auto__) || (G__12535.cljs$core$ISeq$)){
return true;
} else {
if((!G__12535.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12535);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12535);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__12536 = (n__$1 - (1));
var G__12537 = cljs.core.rest(xs);
n__$1 = G__12536;
xs = G__12537;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__12540 = o;
if(G__12540){
var bit__4439__auto__ = (G__12540.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4439__auto__) || (G__12540.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__12541 = o;
if(G__12541){
var bit__4439__auto__ = (G__12541.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4439__auto__) || (G__12541.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__12545__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__12546 = ret;
var G__12547 = cljs.core.first(kvs);
var G__12548 = cljs.core.second(kvs);
var G__12549 = cljs.core.nnext(kvs);
coll = G__12546;
k = G__12547;
v = G__12548;
kvs = G__12549;
continue;
} else {
return ret;
}
break;
}
};
var G__12545 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__12550__i = 0, G__12550__a = new Array(arguments.length -  3);
while (G__12550__i < G__12550__a.length) {G__12550__a[G__12550__i] = arguments[G__12550__i + 3]; ++G__12550__i;}
  kvs = new cljs.core.IndexedSeq(G__12550__a,0);
} 
return G__12545__delegate.call(this,coll,k,v,kvs);};
G__12545.cljs$lang$maxFixedArity = 3;
G__12545.cljs$lang$applyTo = (function (arglist__12551){
var coll = cljs.core.first(arglist__12551);
arglist__12551 = cljs.core.next(arglist__12551);
var k = cljs.core.first(arglist__12551);
arglist__12551 = cljs.core.next(arglist__12551);
var v = cljs.core.first(arglist__12551);
var kvs = cljs.core.rest(arglist__12551);
return G__12545__delegate(coll,k,v,kvs);
});
G__12545.cljs$core$IFn$_invoke$arity$variadic = G__12545__delegate;
return G__12545;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__12552 = null;
if (arguments.length > 3) {
var G__12553__i = 0, G__12553__a = new Array(arguments.length -  3);
while (G__12553__i < G__12553__a.length) {G__12553__a[G__12553__i] = arguments[G__12553__i + 3]; ++G__12553__i;}
G__12552 = new cljs.core.IndexedSeq(G__12553__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__12552);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__12556__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__12557 = ret;
var G__12558 = cljs.core.first(ks);
var G__12559 = cljs.core.next(ks);
coll = G__12557;
k = G__12558;
ks = G__12559;
continue;
} else {
return ret;
}
}
break;
}
};
var G__12556 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12560__i = 0, G__12560__a = new Array(arguments.length -  2);
while (G__12560__i < G__12560__a.length) {G__12560__a[G__12560__i] = arguments[G__12560__i + 2]; ++G__12560__i;}
  ks = new cljs.core.IndexedSeq(G__12560__a,0);
} 
return G__12556__delegate.call(this,coll,k,ks);};
G__12556.cljs$lang$maxFixedArity = 2;
G__12556.cljs$lang$applyTo = (function (arglist__12561){
var coll = cljs.core.first(arglist__12561);
arglist__12561 = cljs.core.next(arglist__12561);
var k = cljs.core.first(arglist__12561);
var ks = cljs.core.rest(arglist__12561);
return G__12556__delegate(coll,k,ks);
});
G__12556.cljs$core$IFn$_invoke$arity$variadic = G__12556__delegate;
return G__12556;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__12562 = null;
if (arguments.length > 2) {
var G__12563__i = 0, G__12563__a = new Array(arguments.length -  2);
while (G__12563__i < G__12563__a.length) {G__12563__a[G__12563__i] = arguments[G__12563__i + 2]; ++G__12563__i;}
G__12562 = new cljs.core.IndexedSeq(G__12563__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__12562);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3765__auto__ = (function (){var G__12568 = f;
return goog.isFunction(G__12568);
})();
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
var G__12569 = f;
if(G__12569){
var bit__4446__auto__ = null;
if(cljs.core.truth_((function (){var or__3765__auto____$1 = bit__4446__auto__;
if(cljs.core.truth_(or__3765__auto____$1)){
return or__3765__auto____$1;
} else {
return G__12569.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__12569.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__12569);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__12569);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 393217;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.call = (function() {
var G__13035 = null;
var G__13035__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__13035__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12571 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12571) : self__.afn.call(null,G__12571));
});
var G__13035__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12572 = a;
var G__12573 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12572,G__12573) : self__.afn.call(null,G__12572,G__12573));
});
var G__13035__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12574 = a;
var G__12575 = b;
var G__12576 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12574,G__12575,G__12576) : self__.afn.call(null,G__12574,G__12575,G__12576));
});
var G__13035__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12577 = a;
var G__12578 = b;
var G__12579 = c;
var G__12580 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12577,G__12578,G__12579,G__12580) : self__.afn.call(null,G__12577,G__12578,G__12579,G__12580));
});
var G__13035__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12581 = a;
var G__12582 = b;
var G__12583 = c;
var G__12584 = d;
var G__12585 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12581,G__12582,G__12583,G__12584,G__12585) : self__.afn.call(null,G__12581,G__12582,G__12583,G__12584,G__12585));
});
var G__13035__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12586 = a;
var G__12587 = b;
var G__12588 = c;
var G__12589 = d;
var G__12590 = e;
var G__12591 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12586,G__12587,G__12588,G__12589,G__12590,G__12591) : self__.afn.call(null,G__12586,G__12587,G__12588,G__12589,G__12590,G__12591));
});
var G__13035__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12592 = a;
var G__12593 = b;
var G__12594 = c;
var G__12595 = d;
var G__12596 = e;
var G__12597 = f;
var G__12598 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12592,G__12593,G__12594,G__12595,G__12596,G__12597,G__12598) : self__.afn.call(null,G__12592,G__12593,G__12594,G__12595,G__12596,G__12597,G__12598));
});
var G__13035__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12599 = a;
var G__12600 = b;
var G__12601 = c;
var G__12602 = d;
var G__12603 = e;
var G__12604 = f;
var G__12605 = g;
var G__12606 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12599,G__12600,G__12601,G__12602,G__12603,G__12604,G__12605,G__12606) : self__.afn.call(null,G__12599,G__12600,G__12601,G__12602,G__12603,G__12604,G__12605,G__12606));
});
var G__13035__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12607 = a;
var G__12608 = b;
var G__12609 = c;
var G__12610 = d;
var G__12611 = e;
var G__12612 = f;
var G__12613 = g;
var G__12614 = h;
var G__12615 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12607,G__12608,G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615) : self__.afn.call(null,G__12607,G__12608,G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615));
});
var G__13035__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12616 = a;
var G__12617 = b;
var G__12618 = c;
var G__12619 = d;
var G__12620 = e;
var G__12621 = f;
var G__12622 = g;
var G__12623 = h;
var G__12624 = i;
var G__12625 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12616,G__12617,G__12618,G__12619,G__12620,G__12621,G__12622,G__12623,G__12624,G__12625) : self__.afn.call(null,G__12616,G__12617,G__12618,G__12619,G__12620,G__12621,G__12622,G__12623,G__12624,G__12625));
});
var G__13035__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12626 = a;
var G__12627 = b;
var G__12628 = c;
var G__12629 = d;
var G__12630 = e;
var G__12631 = f;
var G__12632 = g;
var G__12633 = h;
var G__12634 = i;
var G__12635 = j;
var G__12636 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12626,G__12627,G__12628,G__12629,G__12630,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636) : self__.afn.call(null,G__12626,G__12627,G__12628,G__12629,G__12630,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636));
});
var G__13035__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12637 = a;
var G__12638 = b;
var G__12639 = c;
var G__12640 = d;
var G__12641 = e;
var G__12642 = f;
var G__12643 = g;
var G__12644 = h;
var G__12645 = i;
var G__12646 = j;
var G__12647 = k;
var G__12648 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12637,G__12638,G__12639,G__12640,G__12641,G__12642,G__12643,G__12644,G__12645,G__12646,G__12647,G__12648) : self__.afn.call(null,G__12637,G__12638,G__12639,G__12640,G__12641,G__12642,G__12643,G__12644,G__12645,G__12646,G__12647,G__12648));
});
var G__13035__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12649 = a;
var G__12650 = b;
var G__12651 = c;
var G__12652 = d;
var G__12653 = e;
var G__12654 = f;
var G__12655 = g;
var G__12656 = h;
var G__12657 = i;
var G__12658 = j;
var G__12659 = k;
var G__12660 = l;
var G__12661 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12649,G__12650,G__12651,G__12652,G__12653,G__12654,G__12655,G__12656,G__12657,G__12658,G__12659,G__12660,G__12661) : self__.afn.call(null,G__12649,G__12650,G__12651,G__12652,G__12653,G__12654,G__12655,G__12656,G__12657,G__12658,G__12659,G__12660,G__12661));
});
var G__13035__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12662 = a;
var G__12663 = b;
var G__12664 = c;
var G__12665 = d;
var G__12666 = e;
var G__12667 = f;
var G__12668 = g;
var G__12669 = h;
var G__12670 = i;
var G__12671 = j;
var G__12672 = k;
var G__12673 = l;
var G__12674 = m;
var G__12675 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670,G__12671,G__12672,G__12673,G__12674,G__12675) : self__.afn.call(null,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670,G__12671,G__12672,G__12673,G__12674,G__12675));
});
var G__13035__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12676 = a;
var G__12677 = b;
var G__12678 = c;
var G__12679 = d;
var G__12680 = e;
var G__12681 = f;
var G__12682 = g;
var G__12683 = h;
var G__12684 = i;
var G__12685 = j;
var G__12686 = k;
var G__12687 = l;
var G__12688 = m;
var G__12689 = n;
var G__12690 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12676,G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687,G__12688,G__12689,G__12690) : self__.afn.call(null,G__12676,G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687,G__12688,G__12689,G__12690));
});
var G__13035__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12691 = a;
var G__12692 = b;
var G__12693 = c;
var G__12694 = d;
var G__12695 = e;
var G__12696 = f;
var G__12697 = g;
var G__12698 = h;
var G__12699 = i;
var G__12700 = j;
var G__12701 = k;
var G__12702 = l;
var G__12703 = m;
var G__12704 = n;
var G__12705 = o;
var G__12706 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12691,G__12692,G__12693,G__12694,G__12695,G__12696,G__12697,G__12698,G__12699,G__12700,G__12701,G__12702,G__12703,G__12704,G__12705,G__12706) : self__.afn.call(null,G__12691,G__12692,G__12693,G__12694,G__12695,G__12696,G__12697,G__12698,G__12699,G__12700,G__12701,G__12702,G__12703,G__12704,G__12705,G__12706));
});
var G__13035__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12707 = a;
var G__12708 = b;
var G__12709 = c;
var G__12710 = d;
var G__12711 = e;
var G__12712 = f;
var G__12713 = g;
var G__12714 = h;
var G__12715 = i;
var G__12716 = j;
var G__12717 = k;
var G__12718 = l;
var G__12719 = m;
var G__12720 = n;
var G__12721 = o;
var G__12722 = p;
var G__12723 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12707,G__12708,G__12709,G__12710,G__12711,G__12712,G__12713,G__12714,G__12715,G__12716,G__12717,G__12718,G__12719,G__12720,G__12721,G__12722,G__12723) : self__.afn.call(null,G__12707,G__12708,G__12709,G__12710,G__12711,G__12712,G__12713,G__12714,G__12715,G__12716,G__12717,G__12718,G__12719,G__12720,G__12721,G__12722,G__12723));
});
var G__13035__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12724 = a;
var G__12725 = b;
var G__12726 = c;
var G__12727 = d;
var G__12728 = e;
var G__12729 = f;
var G__12730 = g;
var G__12731 = h;
var G__12732 = i;
var G__12733 = j;
var G__12734 = k;
var G__12735 = l;
var G__12736 = m;
var G__12737 = n;
var G__12738 = o;
var G__12739 = p;
var G__12740 = q;
var G__12741 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732,G__12733,G__12734,G__12735,G__12736,G__12737,G__12738,G__12739,G__12740,G__12741) : self__.afn.call(null,G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732,G__12733,G__12734,G__12735,G__12736,G__12737,G__12738,G__12739,G__12740,G__12741));
});
var G__13035__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12742 = a;
var G__12743 = b;
var G__12744 = c;
var G__12745 = d;
var G__12746 = e;
var G__12747 = f;
var G__12748 = g;
var G__12749 = h;
var G__12750 = i;
var G__12751 = j;
var G__12752 = k;
var G__12753 = l;
var G__12754 = m;
var G__12755 = n;
var G__12756 = o;
var G__12757 = p;
var G__12758 = q;
var G__12759 = r;
var G__12760 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12742,G__12743,G__12744,G__12745,G__12746,G__12747,G__12748,G__12749,G__12750,G__12751,G__12752,G__12753,G__12754,G__12755,G__12756,G__12757,G__12758,G__12759,G__12760) : self__.afn.call(null,G__12742,G__12743,G__12744,G__12745,G__12746,G__12747,G__12748,G__12749,G__12750,G__12751,G__12752,G__12753,G__12754,G__12755,G__12756,G__12757,G__12758,G__12759,G__12760));
});
var G__13035__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12761 = a;
var G__12762 = b;
var G__12763 = c;
var G__12764 = d;
var G__12765 = e;
var G__12766 = f;
var G__12767 = g;
var G__12768 = h;
var G__12769 = i;
var G__12770 = j;
var G__12771 = k;
var G__12772 = l;
var G__12773 = m;
var G__12774 = n;
var G__12775 = o;
var G__12776 = p;
var G__12777 = q;
var G__12778 = r;
var G__12779 = s;
var G__12780 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12761,G__12762,G__12763,G__12764,G__12765,G__12766,G__12767,G__12768,G__12769,G__12770,G__12771,G__12772,G__12773,G__12774,G__12775,G__12776,G__12777,G__12778,G__12779,G__12780) : self__.afn.call(null,G__12761,G__12762,G__12763,G__12764,G__12765,G__12766,G__12767,G__12768,G__12769,G__12770,G__12771,G__12772,G__12773,G__12774,G__12775,G__12776,G__12777,G__12778,G__12779,G__12780));
});
var G__13035__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12781 = self__.afn;
var G__12782 = a;
var G__12783 = b;
var G__12784 = c;
var G__12785 = d;
var G__12786 = e;
var G__12787 = f;
var G__12788 = g;
var G__12789 = h;
var G__12790 = i;
var G__12791 = j;
var G__12792 = k;
var G__12793 = l;
var G__12794 = m;
var G__12795 = n;
var G__12796 = o;
var G__12797 = p;
var G__12798 = q;
var G__12799 = r;
var G__12800 = s;
var G__12801 = t;
var G__12802 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12781,G__12782,G__12783,G__12784,G__12785,G__12786,G__12787,G__12788,G__12789,G__12790,G__12791,G__12792,G__12793,G__12794,G__12795,G__12796,G__12797,G__12798,G__12799,G__12800,G__12801,G__12802) : cljs.core.apply.call(null,G__12781,G__12782,G__12783,G__12784,G__12785,G__12786,G__12787,G__12788,G__12789,G__12790,G__12791,G__12792,G__12793,G__12794,G__12795,G__12796,G__12797,G__12798,G__12799,G__12800,G__12801,G__12802));
});
G__13035 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__13035__1.call(this,self__);
case 2:
return G__13035__2.call(this,self__,a);
case 3:
return G__13035__3.call(this,self__,a,b);
case 4:
return G__13035__4.call(this,self__,a,b,c);
case 5:
return G__13035__5.call(this,self__,a,b,c,d);
case 6:
return G__13035__6.call(this,self__,a,b,c,d,e);
case 7:
return G__13035__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__13035__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__13035__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__13035__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__13035__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__13035__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__13035__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__13035__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__13035__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__13035__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__13035__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__13035__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__13035__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__13035__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__13035__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__13035__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13035.cljs$core$IFn$_invoke$arity$1 = G__13035__1;
G__13035.cljs$core$IFn$_invoke$arity$2 = G__13035__2;
G__13035.cljs$core$IFn$_invoke$arity$3 = G__13035__3;
G__13035.cljs$core$IFn$_invoke$arity$4 = G__13035__4;
G__13035.cljs$core$IFn$_invoke$arity$5 = G__13035__5;
G__13035.cljs$core$IFn$_invoke$arity$6 = G__13035__6;
G__13035.cljs$core$IFn$_invoke$arity$7 = G__13035__7;
G__13035.cljs$core$IFn$_invoke$arity$8 = G__13035__8;
G__13035.cljs$core$IFn$_invoke$arity$9 = G__13035__9;
G__13035.cljs$core$IFn$_invoke$arity$10 = G__13035__10;
G__13035.cljs$core$IFn$_invoke$arity$11 = G__13035__11;
G__13035.cljs$core$IFn$_invoke$arity$12 = G__13035__12;
G__13035.cljs$core$IFn$_invoke$arity$13 = G__13035__13;
G__13035.cljs$core$IFn$_invoke$arity$14 = G__13035__14;
G__13035.cljs$core$IFn$_invoke$arity$15 = G__13035__15;
G__13035.cljs$core$IFn$_invoke$arity$16 = G__13035__16;
G__13035.cljs$core$IFn$_invoke$arity$17 = G__13035__17;
G__13035.cljs$core$IFn$_invoke$arity$18 = G__13035__18;
G__13035.cljs$core$IFn$_invoke$arity$19 = G__13035__19;
G__13035.cljs$core$IFn$_invoke$arity$20 = G__13035__20;
G__13035.cljs$core$IFn$_invoke$arity$21 = G__13035__21;
G__13035.cljs$core$IFn$_invoke$arity$22 = G__13035__22;
return G__13035;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args12570){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12570)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__12803 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12803) : self__.afn.call(null,G__12803));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__12804 = a;
var G__12805 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12804,G__12805) : self__.afn.call(null,G__12804,G__12805));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__12806 = a;
var G__12807 = b;
var G__12808 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12806,G__12807,G__12808) : self__.afn.call(null,G__12806,G__12807,G__12808));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__12809 = a;
var G__12810 = b;
var G__12811 = c;
var G__12812 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12809,G__12810,G__12811,G__12812) : self__.afn.call(null,G__12809,G__12810,G__12811,G__12812));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__12813 = a;
var G__12814 = b;
var G__12815 = c;
var G__12816 = d;
var G__12817 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12813,G__12814,G__12815,G__12816,G__12817) : self__.afn.call(null,G__12813,G__12814,G__12815,G__12816,G__12817));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__12818 = a;
var G__12819 = b;
var G__12820 = c;
var G__12821 = d;
var G__12822 = e;
var G__12823 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12818,G__12819,G__12820,G__12821,G__12822,G__12823) : self__.afn.call(null,G__12818,G__12819,G__12820,G__12821,G__12822,G__12823));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__12824 = a;
var G__12825 = b;
var G__12826 = c;
var G__12827 = d;
var G__12828 = e;
var G__12829 = f;
var G__12830 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12824,G__12825,G__12826,G__12827,G__12828,G__12829,G__12830) : self__.afn.call(null,G__12824,G__12825,G__12826,G__12827,G__12828,G__12829,G__12830));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__12831 = a;
var G__12832 = b;
var G__12833 = c;
var G__12834 = d;
var G__12835 = e;
var G__12836 = f;
var G__12837 = g;
var G__12838 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12831,G__12832,G__12833,G__12834,G__12835,G__12836,G__12837,G__12838) : self__.afn.call(null,G__12831,G__12832,G__12833,G__12834,G__12835,G__12836,G__12837,G__12838));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__12839 = a;
var G__12840 = b;
var G__12841 = c;
var G__12842 = d;
var G__12843 = e;
var G__12844 = f;
var G__12845 = g;
var G__12846 = h;
var G__12847 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12839,G__12840,G__12841,G__12842,G__12843,G__12844,G__12845,G__12846,G__12847) : self__.afn.call(null,G__12839,G__12840,G__12841,G__12842,G__12843,G__12844,G__12845,G__12846,G__12847));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__12848 = a;
var G__12849 = b;
var G__12850 = c;
var G__12851 = d;
var G__12852 = e;
var G__12853 = f;
var G__12854 = g;
var G__12855 = h;
var G__12856 = i;
var G__12857 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12848,G__12849,G__12850,G__12851,G__12852,G__12853,G__12854,G__12855,G__12856,G__12857) : self__.afn.call(null,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853,G__12854,G__12855,G__12856,G__12857));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__12858 = a;
var G__12859 = b;
var G__12860 = c;
var G__12861 = d;
var G__12862 = e;
var G__12863 = f;
var G__12864 = g;
var G__12865 = h;
var G__12866 = i;
var G__12867 = j;
var G__12868 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864,G__12865,G__12866,G__12867,G__12868) : self__.afn.call(null,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864,G__12865,G__12866,G__12867,G__12868));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__12869 = a;
var G__12870 = b;
var G__12871 = c;
var G__12872 = d;
var G__12873 = e;
var G__12874 = f;
var G__12875 = g;
var G__12876 = h;
var G__12877 = i;
var G__12878 = j;
var G__12879 = k;
var G__12880 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12869,G__12870,G__12871,G__12872,G__12873,G__12874,G__12875,G__12876,G__12877,G__12878,G__12879,G__12880) : self__.afn.call(null,G__12869,G__12870,G__12871,G__12872,G__12873,G__12874,G__12875,G__12876,G__12877,G__12878,G__12879,G__12880));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__12881 = a;
var G__12882 = b;
var G__12883 = c;
var G__12884 = d;
var G__12885 = e;
var G__12886 = f;
var G__12887 = g;
var G__12888 = h;
var G__12889 = i;
var G__12890 = j;
var G__12891 = k;
var G__12892 = l;
var G__12893 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888,G__12889,G__12890,G__12891,G__12892,G__12893) : self__.afn.call(null,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888,G__12889,G__12890,G__12891,G__12892,G__12893));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__12894 = a;
var G__12895 = b;
var G__12896 = c;
var G__12897 = d;
var G__12898 = e;
var G__12899 = f;
var G__12900 = g;
var G__12901 = h;
var G__12902 = i;
var G__12903 = j;
var G__12904 = k;
var G__12905 = l;
var G__12906 = m;
var G__12907 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907) : self__.afn.call(null,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__12908 = a;
var G__12909 = b;
var G__12910 = c;
var G__12911 = d;
var G__12912 = e;
var G__12913 = f;
var G__12914 = g;
var G__12915 = h;
var G__12916 = i;
var G__12917 = j;
var G__12918 = k;
var G__12919 = l;
var G__12920 = m;
var G__12921 = n;
var G__12922 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922) : self__.afn.call(null,G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__12923 = a;
var G__12924 = b;
var G__12925 = c;
var G__12926 = d;
var G__12927 = e;
var G__12928 = f;
var G__12929 = g;
var G__12930 = h;
var G__12931 = i;
var G__12932 = j;
var G__12933 = k;
var G__12934 = l;
var G__12935 = m;
var G__12936 = n;
var G__12937 = o;
var G__12938 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12923,G__12924,G__12925,G__12926,G__12927,G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938) : self__.afn.call(null,G__12923,G__12924,G__12925,G__12926,G__12927,G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__12939 = a;
var G__12940 = b;
var G__12941 = c;
var G__12942 = d;
var G__12943 = e;
var G__12944 = f;
var G__12945 = g;
var G__12946 = h;
var G__12947 = i;
var G__12948 = j;
var G__12949 = k;
var G__12950 = l;
var G__12951 = m;
var G__12952 = n;
var G__12953 = o;
var G__12954 = p;
var G__12955 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12939,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955) : self__.afn.call(null,G__12939,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__12956 = a;
var G__12957 = b;
var G__12958 = c;
var G__12959 = d;
var G__12960 = e;
var G__12961 = f;
var G__12962 = g;
var G__12963 = h;
var G__12964 = i;
var G__12965 = j;
var G__12966 = k;
var G__12967 = l;
var G__12968 = m;
var G__12969 = n;
var G__12970 = o;
var G__12971 = p;
var G__12972 = q;
var G__12973 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12956,G__12957,G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972,G__12973) : self__.afn.call(null,G__12956,G__12957,G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972,G__12973));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__12974 = a;
var G__12975 = b;
var G__12976 = c;
var G__12977 = d;
var G__12978 = e;
var G__12979 = f;
var G__12980 = g;
var G__12981 = h;
var G__12982 = i;
var G__12983 = j;
var G__12984 = k;
var G__12985 = l;
var G__12986 = m;
var G__12987 = n;
var G__12988 = o;
var G__12989 = p;
var G__12990 = q;
var G__12991 = r;
var G__12992 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12974,G__12975,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986,G__12987,G__12988,G__12989,G__12990,G__12991,G__12992) : self__.afn.call(null,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986,G__12987,G__12988,G__12989,G__12990,G__12991,G__12992));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__12993 = a;
var G__12994 = b;
var G__12995 = c;
var G__12996 = d;
var G__12997 = e;
var G__12998 = f;
var G__12999 = g;
var G__13000 = h;
var G__13001 = i;
var G__13002 = j;
var G__13003 = k;
var G__13004 = l;
var G__13005 = m;
var G__13006 = n;
var G__13007 = o;
var G__13008 = p;
var G__13009 = q;
var G__13010 = r;
var G__13011 = s;
var G__13012 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003,G__13004,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012) : self__.afn.call(null,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003,G__13004,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__13013 = self__.afn;
var G__13014 = a;
var G__13015 = b;
var G__13016 = c;
var G__13017 = d;
var G__13018 = e;
var G__13019 = f;
var G__13020 = g;
var G__13021 = h;
var G__13022 = i;
var G__13023 = j;
var G__13024 = k;
var G__13025 = l;
var G__13026 = m;
var G__13027 = n;
var G__13028 = o;
var G__13029 = p;
var G__13030 = q;
var G__13031 = r;
var G__13032 = s;
var G__13033 = t;
var G__13034 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021,G__13022,G__13023,G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034) : cljs.core.apply.call(null,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021,G__13022,G__13023,G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034));
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__13039 = o;
if(G__13039){
var bit__4446__auto__ = (G__13039.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4446__auto__) || (G__13039.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__13039.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__13039);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__13039);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3753__auto__ = !((o == null));
if(and__3753__auto__){
var G__13043 = o;
if(G__13043){
var bit__4446__auto__ = (G__13043.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4446__auto__) || (G__13043.cljs$core$IMeta$)){
return true;
} else {
if((!G__13043.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__13043);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__13043);
}
} else {
return and__3753__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__13046__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__13047 = ret;
var G__13048 = cljs.core.first(ks);
var G__13049 = cljs.core.next(ks);
coll = G__13047;
k = G__13048;
ks = G__13049;
continue;
} else {
return ret;
}
}
break;
}
};
var G__13046 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13050__i = 0, G__13050__a = new Array(arguments.length -  2);
while (G__13050__i < G__13050__a.length) {G__13050__a[G__13050__i] = arguments[G__13050__i + 2]; ++G__13050__i;}
  ks = new cljs.core.IndexedSeq(G__13050__a,0);
} 
return G__13046__delegate.call(this,coll,k,ks);};
G__13046.cljs$lang$maxFixedArity = 2;
G__13046.cljs$lang$applyTo = (function (arglist__13051){
var coll = cljs.core.first(arglist__13051);
arglist__13051 = cljs.core.next(arglist__13051);
var k = cljs.core.first(arglist__13051);
var ks = cljs.core.rest(arglist__13051);
return G__13046__delegate(coll,k,ks);
});
G__13046.cljs$core$IFn$_invoke$arity$variadic = G__13046__delegate;
return G__13046;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__13052 = null;
if (arguments.length > 2) {
var G__13053__i = 0, G__13053__a = new Array(arguments.length -  2);
while (G__13053__i < G__13053__a.length) {G__13053__a[G__13053__i] = arguments[G__13053__i + 2]; ++G__13053__i;}
G__13052 = new cljs.core.IndexedSeq(G__13053__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__13052);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13055 = x;
if(G__13055){
var bit__4446__auto__ = (G__13055.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4446__auto__) || (G__13055.cljs$core$ICollection$)){
return true;
} else {
if((!G__13055.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__13055);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__13055);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13057 = x;
if(G__13057){
var bit__4446__auto__ = (G__13057.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4446__auto__) || (G__13057.cljs$core$ISet$)){
return true;
} else {
if((!G__13057.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__13057);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__13057);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__13059 = x;
if(G__13059){
var bit__4446__auto__ = (G__13059.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4446__auto__) || (G__13059.cljs$core$IAssociative$)){
return true;
} else {
if((!G__13059.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__13059);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__13059);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__13061 = x;
if(G__13061){
var bit__4446__auto__ = (G__13061.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4446__auto__) || (G__13061.cljs$core$ISequential$)){
return true;
} else {
if((!G__13061.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__13061);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__13061);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__13063 = x;
if(G__13063){
var bit__4446__auto__ = (G__13063.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4446__auto__) || (G__13063.cljs$core$ISorted$)){
return true;
} else {
if((!G__13063.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__13063);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__13063);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__13065 = x;
if(G__13065){
var bit__4446__auto__ = (G__13065.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4446__auto__) || (G__13065.cljs$core$IReduce$)){
return true;
} else {
if((!G__13065.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__13065);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__13065);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13067 = x;
if(G__13067){
var bit__4446__auto__ = (G__13067.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4446__auto__) || (G__13067.cljs$core$IMap$)){
return true;
} else {
if((!G__13067.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__13067);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__13067);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__13069 = x;
if(G__13069){
var bit__4446__auto__ = (G__13069.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4446__auto__) || (G__13069.cljs$core$IVector$)){
return true;
} else {
if((!G__13069.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__13069);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__13069);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__13071 = x;
if(G__13071){
var bit__4439__auto__ = (G__13071.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4439__auto__) || (G__13071.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj13077 = {};
return obj13077;
});
var js_obj__1 = (function() { 
var G__13080__delegate = function (keyvals){
var G__13078 = goog.object.create;
var G__13079 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__13078,G__13079) : cljs.core.apply.call(null,G__13078,G__13079));
};
var G__13080 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__13081__i = 0, G__13081__a = new Array(arguments.length -  0);
while (G__13081__i < G__13081__a.length) {G__13081__a[G__13081__i] = arguments[G__13081__i + 0]; ++G__13081__i;}
  keyvals = new cljs.core.IndexedSeq(G__13081__a,0);
} 
return G__13080__delegate.call(this,keyvals);};
G__13080.cljs$lang$maxFixedArity = 0;
G__13080.cljs$lang$applyTo = (function (arglist__13082){
var keyvals = cljs.core.seq(arglist__13082);
return G__13080__delegate(keyvals);
});
G__13080.cljs$core$IFn$_invoke$arity$variadic = G__13080__delegate;
return G__13080;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__13083 = null;
if (arguments.length > 0) {
var G__13084__i = 0, G__13084__a = new Array(arguments.length -  0);
while (G__13084__i < G__13084__a.length) {G__13084__a[G__13084__i] = arguments[G__13084__i + 0]; ++G__13084__i;}
G__13083 = new cljs.core.IndexedSeq(G__13084__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__13083);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__13087_13089 = obj;
var G__13088_13090 = ((function (G__13087_13089,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__13087_13089,keys))
;
goog.object.forEach(G__13087_13089,G__13088_13090);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__13091 = (i__$1 + (1));
var G__13092 = (j__$1 + (1));
var G__13093 = (len__$1 - (1));
i__$1 = G__13091;
j__$1 = G__13092;
len__$1 = G__13093;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__13094 = (i__$1 - (1));
var G__13095 = (j__$1 - (1));
var G__13096 = (len__$1 - (1));
i__$1 = G__13094;
j__$1 = G__13095;
len__$1 = G__13096;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj13098 = {};
return obj13098;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__13100 = s;
if(G__13100){
var bit__4446__auto__ = (G__13100.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4446__auto__) || (G__13100.cljs$core$ISeq$)){
return true;
} else {
if((!G__13100.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13100);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13100);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__13102 = s;
if(G__13102){
var bit__4446__auto__ = (G__13102.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4446__auto__) || (G__13102.cljs$core$ISeqable$)){
return true;
} else {
if((!G__13102.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__13102);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__13102);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3765__auto__ = cljs.core.fn_QMARK_(f);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var G__13106 = f;
if(G__13106){
var bit__4446__auto__ = (G__13106.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4446__auto__) || (G__13106.cljs$core$IFn$)){
return true;
} else {
if((!G__13106.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__13106);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__13106);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__13119 = n;
return isNaN(G__13119);
})())) && (!((n === Infinity))) && (((function (){var G__13120 = n;
return parseFloat(G__13120);
})() === (function (){var G__13121 = n;
var G__13122 = (10);
return parseInt(G__13121,G__13122);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__13123__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__13124 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__13125 = etc;
s = G__13124;
xs = G__13125;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__13123 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13126__i = 0, G__13126__a = new Array(arguments.length -  2);
while (G__13126__i < G__13126__a.length) {G__13126__a[G__13126__i] = arguments[G__13126__i + 2]; ++G__13126__i;}
  more = new cljs.core.IndexedSeq(G__13126__a,0);
} 
return G__13123__delegate.call(this,x,y,more);};
G__13123.cljs$lang$maxFixedArity = 2;
G__13123.cljs$lang$applyTo = (function (arglist__13127){
var x = cljs.core.first(arglist__13127);
arglist__13127 = cljs.core.next(arglist__13127);
var y = cljs.core.first(arglist__13127);
var more = cljs.core.rest(arglist__13127);
return G__13123__delegate(x,y,more);
});
G__13123.cljs$core$IFn$_invoke$arity$variadic = G__13123__delegate;
return G__13123;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__13128 = null;
if (arguments.length > 2) {
var G__13129__i = 0, G__13129__a = new Array(arguments.length -  2);
while (G__13129__i < G__13129__a.length) {G__13129__a[G__13129__i] = arguments[G__13129__i + 2]; ++G__13129__i;}
G__13128 = new cljs.core.IndexedSeq(G__13129__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13128);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__13133 = x;
if(G__13133){
var bit__4439__auto__ = (G__13133.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4439__auto__) || (G__13133.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__13134 = x;
var G__13135 = y;
return goog.array.defaultCompare(G__13134,G__13135);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__13140 = xs;
var G__13141 = ys;
var G__13142 = len;
var G__13143 = (n + (1));
xs = G__13140;
ys = G__13141;
len = G__13142;
n = G__13143;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__13148 = x;
var G__13149 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13148,G__13149) : f.call(null,G__13148,G__13149));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__13150 = y;
var G__13151 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13150,G__13151) : f.call(null,G__13150,G__13151));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__13157 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__13157) : cljs.core.to_array.call(null,G__13157));
})();
var G__13158_13160 = a;
var G__13159_13161 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__13158_13160,G__13159_13161);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__13167 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__13167) : keyfn.call(null,G__13167));
})(),(function (){var G__13168 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__13168) : keyfn.call(null,G__13168));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4421__auto__ = cljs.core.seq(coll);
if(temp__4421__auto__){
var s = temp__4421__auto__;
var G__13174 = f;
var G__13175 = cljs.core.first(s);
var G__13176 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__13174,G__13175,G__13176) : cljs.core.reduce.call(null,G__13174,G__13175,G__13176));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__13177 = val__$1;
var G__13178 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13177,G__13178) : f.call(null,G__13177,G__13178));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13179 = nval;
var G__13180 = cljs.core.next(coll__$1);
val__$1 = G__13179;
coll__$1 = G__13180;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__13184 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__13184) : cljs.core.to_array.call(null,G__13184));
})();
var G__13185_13187 = a;
goog.array.shuffle(G__13185_13187);

var G__13186 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__13186) : cljs.core.vec.call(null,G__13186));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__13190 = coll;
if(G__13190){
var bit__4439__auto__ = (G__13190.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4439__auto__) || (G__13190.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__13191 = coll;
if(G__13191){
var bit__4439__auto__ = (G__13191.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4439__auto__) || (G__13191.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__13200 = null;
var G__13200__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__13200__1 = (function (x){
var G__13197 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__13197) : cf.call(null,G__13197));
});
var G__13200__2 = (function (x,y){
var G__13198 = x;
var G__13199 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13198,G__13199) : f.call(null,G__13198,G__13199));
});
G__13200 = function(x,y){
switch(arguments.length){
case 0:
return G__13200__0.call(this);
case 1:
return G__13200__1.call(this,x);
case 2:
return G__13200__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13200.cljs$core$IFn$_invoke$arity$0 = G__13200__0;
G__13200.cljs$core$IFn$_invoke$arity$1 = G__13200__1;
G__13200.cljs$core$IFn$_invoke$arity$2 = G__13200__2;
return G__13200;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__13207 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13207) : xform.call(null,G__13207));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__13208 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__13208) : f__$1.call(null,G__13208));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__13209__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__13209 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13210__i = 0, G__13210__a = new Array(arguments.length -  2);
while (G__13210__i < G__13210__a.length) {G__13210__a[G__13210__i] = arguments[G__13210__i + 2]; ++G__13210__i;}
  more = new cljs.core.IndexedSeq(G__13210__a,0);
} 
return G__13209__delegate.call(this,x,y,more);};
G__13209.cljs$lang$maxFixedArity = 2;
G__13209.cljs$lang$applyTo = (function (arglist__13211){
var x = cljs.core.first(arglist__13211);
arglist__13211 = cljs.core.next(arglist__13211);
var y = cljs.core.first(arglist__13211);
var more = cljs.core.rest(arglist__13211);
return G__13209__delegate(x,y,more);
});
G__13209.cljs$core$IFn$_invoke$arity$variadic = G__13209__delegate;
return G__13209;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__13212 = null;
if (arguments.length > 2) {
var G__13213__i = 0, G__13213__a = new Array(arguments.length -  2);
while (G__13213__i < G__13213__a.length) {G__13213__a[G__13213__i] = arguments[G__13213__i + 2]; ++G__13213__i;}
G__13212 = new cljs.core.IndexedSeq(G__13213__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13212);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__13214__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__13214 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13215__i = 0, G__13215__a = new Array(arguments.length -  2);
while (G__13215__i < G__13215__a.length) {G__13215__a[G__13215__i] = arguments[G__13215__i + 2]; ++G__13215__i;}
  more = new cljs.core.IndexedSeq(G__13215__a,0);
} 
return G__13214__delegate.call(this,x,y,more);};
G__13214.cljs$lang$maxFixedArity = 2;
G__13214.cljs$lang$applyTo = (function (arglist__13216){
var x = cljs.core.first(arglist__13216);
arglist__13216 = cljs.core.next(arglist__13216);
var y = cljs.core.first(arglist__13216);
var more = cljs.core.rest(arglist__13216);
return G__13214__delegate(x,y,more);
});
G__13214.cljs$core$IFn$_invoke$arity$variadic = G__13214__delegate;
return G__13214;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__13217 = null;
if (arguments.length > 2) {
var G__13218__i = 0, G__13218__a = new Array(arguments.length -  2);
while (G__13218__i < G__13218__a.length) {G__13218__a[G__13218__i] = arguments[G__13218__i + 2]; ++G__13218__i;}
G__13217 = new cljs.core.IndexedSeq(G__13218__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13217);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__13219__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__13219 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13220__i = 0, G__13220__a = new Array(arguments.length -  2);
while (G__13220__i < G__13220__a.length) {G__13220__a[G__13220__i] = arguments[G__13220__i + 2]; ++G__13220__i;}
  more = new cljs.core.IndexedSeq(G__13220__a,0);
} 
return G__13219__delegate.call(this,x,y,more);};
G__13219.cljs$lang$maxFixedArity = 2;
G__13219.cljs$lang$applyTo = (function (arglist__13221){
var x = cljs.core.first(arglist__13221);
arglist__13221 = cljs.core.next(arglist__13221);
var y = cljs.core.first(arglist__13221);
var more = cljs.core.rest(arglist__13221);
return G__13219__delegate(x,y,more);
});
G__13219.cljs$core$IFn$_invoke$arity$variadic = G__13219__delegate;
return G__13219;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__13222 = null;
if (arguments.length > 2) {
var G__13223__i = 0, G__13223__a = new Array(arguments.length -  2);
while (G__13223__i < G__13223__a.length) {G__13223__a[G__13223__i] = arguments[G__13223__i + 2]; ++G__13223__i;}
G__13222 = new cljs.core.IndexedSeq(G__13223__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13222);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__13228__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__13228 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13229__i = 0, G__13229__a = new Array(arguments.length -  2);
while (G__13229__i < G__13229__a.length) {G__13229__a[G__13229__i] = arguments[G__13229__i + 2]; ++G__13229__i;}
  more = new cljs.core.IndexedSeq(G__13229__a,0);
} 
return G__13228__delegate.call(this,x,y,more);};
G__13228.cljs$lang$maxFixedArity = 2;
G__13228.cljs$lang$applyTo = (function (arglist__13230){
var x = cljs.core.first(arglist__13230);
arglist__13230 = cljs.core.next(arglist__13230);
var y = cljs.core.first(arglist__13230);
var more = cljs.core.rest(arglist__13230);
return G__13228__delegate(x,y,more);
});
G__13228.cljs$core$IFn$_invoke$arity$variadic = G__13228__delegate;
return G__13228;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__13231 = null;
if (arguments.length > 2) {
var G__13232__i = 0, G__13232__a = new Array(arguments.length -  2);
while (G__13232__i < G__13232__a.length) {G__13232__a[G__13232__i] = arguments[G__13232__i + 2]; ++G__13232__i;}
G__13231 = new cljs.core.IndexedSeq(G__13232__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13231);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__13233__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__13234 = y;
var G__13235 = cljs.core.first(more);
var G__13236 = cljs.core.next(more);
x = G__13234;
y = G__13235;
more = G__13236;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13233 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13237__i = 0, G__13237__a = new Array(arguments.length -  2);
while (G__13237__i < G__13237__a.length) {G__13237__a[G__13237__i] = arguments[G__13237__i + 2]; ++G__13237__i;}
  more = new cljs.core.IndexedSeq(G__13237__a,0);
} 
return G__13233__delegate.call(this,x,y,more);};
G__13233.cljs$lang$maxFixedArity = 2;
G__13233.cljs$lang$applyTo = (function (arglist__13238){
var x = cljs.core.first(arglist__13238);
arglist__13238 = cljs.core.next(arglist__13238);
var y = cljs.core.first(arglist__13238);
var more = cljs.core.rest(arglist__13238);
return G__13233__delegate(x,y,more);
});
G__13233.cljs$core$IFn$_invoke$arity$variadic = G__13233__delegate;
return G__13233;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__13239 = null;
if (arguments.length > 2) {
var G__13240__i = 0, G__13240__a = new Array(arguments.length -  2);
while (G__13240__i < G__13240__a.length) {G__13240__a[G__13240__i] = arguments[G__13240__i + 2]; ++G__13240__i;}
G__13239 = new cljs.core.IndexedSeq(G__13240__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13239);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__13241__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__13242 = y;
var G__13243 = cljs.core.first(more);
var G__13244 = cljs.core.next(more);
x = G__13242;
y = G__13243;
more = G__13244;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13241 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13245__i = 0, G__13245__a = new Array(arguments.length -  2);
while (G__13245__i < G__13245__a.length) {G__13245__a[G__13245__i] = arguments[G__13245__i + 2]; ++G__13245__i;}
  more = new cljs.core.IndexedSeq(G__13245__a,0);
} 
return G__13241__delegate.call(this,x,y,more);};
G__13241.cljs$lang$maxFixedArity = 2;
G__13241.cljs$lang$applyTo = (function (arglist__13246){
var x = cljs.core.first(arglist__13246);
arglist__13246 = cljs.core.next(arglist__13246);
var y = cljs.core.first(arglist__13246);
var more = cljs.core.rest(arglist__13246);
return G__13241__delegate(x,y,more);
});
G__13241.cljs$core$IFn$_invoke$arity$variadic = G__13241__delegate;
return G__13241;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__13247 = null;
if (arguments.length > 2) {
var G__13248__i = 0, G__13248__a = new Array(arguments.length -  2);
while (G__13248__i < G__13248__a.length) {G__13248__a[G__13248__i] = arguments[G__13248__i + 2]; ++G__13248__i;}
G__13247 = new cljs.core.IndexedSeq(G__13248__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13247);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__13249__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__13250 = y;
var G__13251 = cljs.core.first(more);
var G__13252 = cljs.core.next(more);
x = G__13250;
y = G__13251;
more = G__13252;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13249 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13253__i = 0, G__13253__a = new Array(arguments.length -  2);
while (G__13253__i < G__13253__a.length) {G__13253__a[G__13253__i] = arguments[G__13253__i + 2]; ++G__13253__i;}
  more = new cljs.core.IndexedSeq(G__13253__a,0);
} 
return G__13249__delegate.call(this,x,y,more);};
G__13249.cljs$lang$maxFixedArity = 2;
G__13249.cljs$lang$applyTo = (function (arglist__13254){
var x = cljs.core.first(arglist__13254);
arglist__13254 = cljs.core.next(arglist__13254);
var y = cljs.core.first(arglist__13254);
var more = cljs.core.rest(arglist__13254);
return G__13249__delegate(x,y,more);
});
G__13249.cljs$core$IFn$_invoke$arity$variadic = G__13249__delegate;
return G__13249;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__13255 = null;
if (arguments.length > 2) {
var G__13256__i = 0, G__13256__a = new Array(arguments.length -  2);
while (G__13256__i < G__13256__a.length) {G__13256__a[G__13256__i] = arguments[G__13256__i + 2]; ++G__13256__i;}
G__13255 = new cljs.core.IndexedSeq(G__13256__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13255);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__13257__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__13258 = y;
var G__13259 = cljs.core.first(more);
var G__13260 = cljs.core.next(more);
x = G__13258;
y = G__13259;
more = G__13260;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13257 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13261__i = 0, G__13261__a = new Array(arguments.length -  2);
while (G__13261__i < G__13261__a.length) {G__13261__a[G__13261__i] = arguments[G__13261__i + 2]; ++G__13261__i;}
  more = new cljs.core.IndexedSeq(G__13261__a,0);
} 
return G__13257__delegate.call(this,x,y,more);};
G__13257.cljs$lang$maxFixedArity = 2;
G__13257.cljs$lang$applyTo = (function (arglist__13262){
var x = cljs.core.first(arglist__13262);
arglist__13262 = cljs.core.next(arglist__13262);
var y = cljs.core.first(arglist__13262);
var more = cljs.core.rest(arglist__13262);
return G__13257__delegate(x,y,more);
});
G__13257.cljs$core$IFn$_invoke$arity$variadic = G__13257__delegate;
return G__13257;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__13263 = null;
if (arguments.length > 2) {
var G__13264__i = 0, G__13264__a = new Array(arguments.length -  2);
while (G__13264__i < G__13264__a.length) {G__13264__a[G__13264__i] = arguments[G__13264__i + 2]; ++G__13264__i;}
G__13263 = new cljs.core.IndexedSeq(G__13264__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13263);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4082__auto__ = x;
var y__4083__auto__ = y;
return ((x__4082__auto__ > y__4083__auto__) ? x__4082__auto__ : y__4083__auto__);
});
var max__3 = (function() { 
var G__13265__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4082__auto__ = x;
var y__4083__auto__ = y;
return ((x__4082__auto__ > y__4083__auto__) ? x__4082__auto__ : y__4083__auto__);
})(),more);
};
var G__13265 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13266__i = 0, G__13266__a = new Array(arguments.length -  2);
while (G__13266__i < G__13266__a.length) {G__13266__a[G__13266__i] = arguments[G__13266__i + 2]; ++G__13266__i;}
  more = new cljs.core.IndexedSeq(G__13266__a,0);
} 
return G__13265__delegate.call(this,x,y,more);};
G__13265.cljs$lang$maxFixedArity = 2;
G__13265.cljs$lang$applyTo = (function (arglist__13267){
var x = cljs.core.first(arglist__13267);
arglist__13267 = cljs.core.next(arglist__13267);
var y = cljs.core.first(arglist__13267);
var more = cljs.core.rest(arglist__13267);
return G__13265__delegate(x,y,more);
});
G__13265.cljs$core$IFn$_invoke$arity$variadic = G__13265__delegate;
return G__13265;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__13268 = null;
if (arguments.length > 2) {
var G__13269__i = 0, G__13269__a = new Array(arguments.length -  2);
while (G__13269__i < G__13269__a.length) {G__13269__a[G__13269__i] = arguments[G__13269__i + 2]; ++G__13269__i;}
G__13268 = new cljs.core.IndexedSeq(G__13269__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13268);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4089__auto__ = x;
var y__4090__auto__ = y;
return ((x__4089__auto__ < y__4090__auto__) ? x__4089__auto__ : y__4090__auto__);
});
var min__3 = (function() { 
var G__13270__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4089__auto__ = x;
var y__4090__auto__ = y;
return ((x__4089__auto__ < y__4090__auto__) ? x__4089__auto__ : y__4090__auto__);
})(),more);
};
var G__13270 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13271__i = 0, G__13271__a = new Array(arguments.length -  2);
while (G__13271__i < G__13271__a.length) {G__13271__a[G__13271__i] = arguments[G__13271__i + 2]; ++G__13271__i;}
  more = new cljs.core.IndexedSeq(G__13271__a,0);
} 
return G__13270__delegate.call(this,x,y,more);};
G__13270.cljs$lang$maxFixedArity = 2;
G__13270.cljs$lang$applyTo = (function (arglist__13272){
var x = cljs.core.first(arglist__13272);
arglist__13272 = cljs.core.next(arglist__13272);
var y = cljs.core.first(arglist__13272);
var more = cljs.core.rest(arglist__13272);
return G__13270__delegate(x,y,more);
});
G__13270.cljs$core$IFn$_invoke$arity$variadic = G__13270__delegate;
return G__13270;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__13273 = null;
if (arguments.length > 2) {
var G__13274__i = 0, G__13274__a = new Array(arguments.length -  2);
while (G__13274__i < G__13274__a.length) {G__13274__a[G__13274__i] = arguments[G__13274__i + 2]; ++G__13274__i;}
G__13273 = new cljs.core.IndexedSeq(G__13274__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13273);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__13275__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__13275 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13276__i = 0, G__13276__a = new Array(arguments.length -  2);
while (G__13276__i < G__13276__a.length) {G__13276__a[G__13276__i] = arguments[G__13276__i + 2]; ++G__13276__i;}
  more = new cljs.core.IndexedSeq(G__13276__a,0);
} 
return G__13275__delegate.call(this,x,y,more);};
G__13275.cljs$lang$maxFixedArity = 2;
G__13275.cljs$lang$applyTo = (function (arglist__13277){
var x = cljs.core.first(arglist__13277);
arglist__13277 = cljs.core.next(arglist__13277);
var y = cljs.core.first(arglist__13277);
var more = cljs.core.rest(arglist__13277);
return G__13275__delegate(x,y,more);
});
G__13275.cljs$core$IFn$_invoke$arity$variadic = G__13275__delegate;
return G__13275;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__13278 = null;
if (arguments.length > 2) {
var G__13279__i = 0, G__13279__a = new Array(arguments.length -  2);
while (G__13279__i < G__13279__a.length) {G__13279__a[G__13279__i] = arguments[G__13279__i + 2]; ++G__13279__i;}
G__13278 = new cljs.core.IndexedSeq(G__13279__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13278);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__13280__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__13280 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13281__i = 0, G__13281__a = new Array(arguments.length -  2);
while (G__13281__i < G__13281__a.length) {G__13281__a[G__13281__i] = arguments[G__13281__i + 2]; ++G__13281__i;}
  more = new cljs.core.IndexedSeq(G__13281__a,0);
} 
return G__13280__delegate.call(this,x,y,more);};
G__13280.cljs$lang$maxFixedArity = 2;
G__13280.cljs$lang$applyTo = (function (arglist__13282){
var x = cljs.core.first(arglist__13282);
arglist__13282 = cljs.core.next(arglist__13282);
var y = cljs.core.first(arglist__13282);
var more = cljs.core.rest(arglist__13282);
return G__13280__delegate(x,y,more);
});
G__13280.cljs$core$IFn$_invoke$arity$variadic = G__13280__delegate;
return G__13280;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__13283 = null;
if (arguments.length > 2) {
var G__13284__i = 0, G__13284__a = new Array(arguments.length -  2);
while (G__13284__i < G__13284__a.length) {G__13284__a[G__13284__i] = arguments[G__13284__i + 2]; ++G__13284__i;}
G__13283 = new cljs.core.IndexedSeq(G__13284__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__13289__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__13289 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13290__i = 0, G__13290__a = new Array(arguments.length -  2);
while (G__13290__i < G__13290__a.length) {G__13290__a[G__13290__i] = arguments[G__13290__i + 2]; ++G__13290__i;}
  more = new cljs.core.IndexedSeq(G__13290__a,0);
} 
return G__13289__delegate.call(this,x,y,more);};
G__13289.cljs$lang$maxFixedArity = 2;
G__13289.cljs$lang$applyTo = (function (arglist__13291){
var x = cljs.core.first(arglist__13291);
arglist__13291 = cljs.core.next(arglist__13291);
var y = cljs.core.first(arglist__13291);
var more = cljs.core.rest(arglist__13291);
return G__13289__delegate(x,y,more);
});
G__13289.cljs$core$IFn$_invoke$arity$variadic = G__13289__delegate;
return G__13289;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__13292 = null;
if (arguments.length > 2) {
var G__13293__i = 0, G__13293__a = new Array(arguments.length -  2);
while (G__13293__i < G__13293__a.length) {G__13293__a[G__13293__i] = arguments[G__13293__i + 2]; ++G__13293__i;}
G__13292 = new cljs.core.IndexedSeq(G__13293__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13292);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__13294__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__13294 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13295__i = 0, G__13295__a = new Array(arguments.length -  2);
while (G__13295__i < G__13295__a.length) {G__13295__a[G__13295__i] = arguments[G__13295__i + 2]; ++G__13295__i;}
  more = new cljs.core.IndexedSeq(G__13295__a,0);
} 
return G__13294__delegate.call(this,x,y,more);};
G__13294.cljs$lang$maxFixedArity = 2;
G__13294.cljs$lang$applyTo = (function (arglist__13296){
var x = cljs.core.first(arglist__13296);
arglist__13296 = cljs.core.next(arglist__13296);
var y = cljs.core.first(arglist__13296);
var more = cljs.core.rest(arglist__13296);
return G__13294__delegate(x,y,more);
});
G__13294.cljs$core$IFn$_invoke$arity$variadic = G__13294__delegate;
return G__13294;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__13297 = null;
if (arguments.length > 2) {
var G__13298__i = 0, G__13298__a = new Array(arguments.length -  2);
while (G__13298__i < G__13298__a.length) {G__13298__a[G__13298__i] = arguments[G__13298__i + 2]; ++G__13298__i;}
G__13297 = new cljs.core.IndexedSeq(G__13298__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13297);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__13299__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__13299 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13300__i = 0, G__13300__a = new Array(arguments.length -  2);
while (G__13300__i < G__13300__a.length) {G__13300__a[G__13300__i] = arguments[G__13300__i + 2]; ++G__13300__i;}
  more = new cljs.core.IndexedSeq(G__13300__a,0);
} 
return G__13299__delegate.call(this,x,y,more);};
G__13299.cljs$lang$maxFixedArity = 2;
G__13299.cljs$lang$applyTo = (function (arglist__13301){
var x = cljs.core.first(arglist__13301);
arglist__13301 = cljs.core.next(arglist__13301);
var y = cljs.core.first(arglist__13301);
var more = cljs.core.rest(arglist__13301);
return G__13299__delegate(x,y,more);
});
G__13299.cljs$core$IFn$_invoke$arity$variadic = G__13299__delegate;
return G__13299;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__13302 = null;
if (arguments.length > 2) {
var G__13303__i = 0, G__13303__a = new Array(arguments.length -  2);
while (G__13303__i < G__13303__a.length) {G__13303__a[G__13303__i] = arguments[G__13303__i + 2]; ++G__13303__i;}
G__13302 = new cljs.core.IndexedSeq(G__13303__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13302);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__13306 = x;
var G__13307 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__13306,G__13307) : cljs.core.mod.call(null,G__13306,G__13307));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__13308__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__13308 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13309__i = 0, G__13309__a = new Array(arguments.length -  2);
while (G__13309__i < G__13309__a.length) {G__13309__a[G__13309__i] = arguments[G__13309__i + 2]; ++G__13309__i;}
  more = new cljs.core.IndexedSeq(G__13309__a,0);
} 
return G__13308__delegate.call(this,x,y,more);};
G__13308.cljs$lang$maxFixedArity = 2;
G__13308.cljs$lang$applyTo = (function (arglist__13310){
var x = cljs.core.first(arglist__13310);
arglist__13310 = cljs.core.next(arglist__13310);
var y = cljs.core.first(arglist__13310);
var more = cljs.core.rest(arglist__13310);
return G__13308__delegate(x,y,more);
});
G__13308.cljs$core$IFn$_invoke$arity$variadic = G__13308__delegate;
return G__13308;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__13311 = null;
if (arguments.length > 2) {
var G__13312__i = 0, G__13312__a = new Array(arguments.length -  2);
while (G__13312__i < G__13312__a.length) {G__13312__a[G__13312__i] = arguments[G__13312__i + 2]; ++G__13312__i;}
G__13311 = new cljs.core.IndexedSeq(G__13312__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13311);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__13313__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__13313 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13314__i = 0, G__13314__a = new Array(arguments.length -  2);
while (G__13314__i < G__13314__a.length) {G__13314__a[G__13314__i] = arguments[G__13314__i + 2]; ++G__13314__i;}
  more = new cljs.core.IndexedSeq(G__13314__a,0);
} 
return G__13313__delegate.call(this,x,y,more);};
G__13313.cljs$lang$maxFixedArity = 2;
G__13313.cljs$lang$applyTo = (function (arglist__13315){
var x = cljs.core.first(arglist__13315);
arglist__13315 = cljs.core.next(arglist__13315);
var y = cljs.core.first(arglist__13315);
var more = cljs.core.rest(arglist__13315);
return G__13313__delegate(x,y,more);
});
G__13313.cljs$core$IFn$_invoke$arity$variadic = G__13313__delegate;
return G__13313;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__13316 = null;
if (arguments.length > 2) {
var G__13317__i = 0, G__13317__a = new Array(arguments.length -  2);
while (G__13317__i < G__13317__a.length) {G__13317__a[G__13317__i] = arguments[G__13317__i + 2]; ++G__13317__i;}
G__13316 = new cljs.core.IndexedSeq(G__13317__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13316);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__13320 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__13320) : Math.floor.call(null,G__13320));
} else {
var G__13321 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__13321) : Math.ceil.call(null,G__13321));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__13322__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__13322 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13323__i = 0, G__13323__a = new Array(arguments.length -  2);
while (G__13323__i < G__13323__a.length) {G__13323__a[G__13323__i] = arguments[G__13323__i + 2]; ++G__13323__i;}
  more = new cljs.core.IndexedSeq(G__13323__a,0);
} 
return G__13322__delegate.call(this,x,y,more);};
G__13322.cljs$lang$maxFixedArity = 2;
G__13322.cljs$lang$applyTo = (function (arglist__13324){
var x = cljs.core.first(arglist__13324);
arglist__13324 = cljs.core.next(arglist__13324);
var y = cljs.core.first(arglist__13324);
var more = cljs.core.rest(arglist__13324);
return G__13322__delegate(x,y,more);
});
G__13322.cljs$core$IFn$_invoke$arity$variadic = G__13322__delegate;
return G__13322;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__13325 = null;
if (arguments.length > 2) {
var G__13326__i = 0, G__13326__a = new Array(arguments.length -  2);
while (G__13326__i < G__13326__a.length) {G__13326__a[G__13326__i] = arguments[G__13326__i + 2]; ++G__13326__i;}
G__13325 = new cljs.core.IndexedSeq(G__13326__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13325);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__13327__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__13327 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13328__i = 0, G__13328__a = new Array(arguments.length -  2);
while (G__13328__i < G__13328__a.length) {G__13328__a[G__13328__i] = arguments[G__13328__i + 2]; ++G__13328__i;}
  more = new cljs.core.IndexedSeq(G__13328__a,0);
} 
return G__13327__delegate.call(this,x,y,more);};
G__13327.cljs$lang$maxFixedArity = 2;
G__13327.cljs$lang$applyTo = (function (arglist__13329){
var x = cljs.core.first(arglist__13329);
arglist__13329 = cljs.core.next(arglist__13329);
var y = cljs.core.first(arglist__13329);
var more = cljs.core.rest(arglist__13329);
return G__13327__delegate(x,y,more);
});
G__13327.cljs$core$IFn$_invoke$arity$variadic = G__13327__delegate;
return G__13327;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__13330 = null;
if (arguments.length > 2) {
var G__13331__i = 0, G__13331__a = new Array(arguments.length -  2);
while (G__13331__i < G__13331__a.length) {G__13331__a[G__13331__i] = arguments[G__13331__i + 2]; ++G__13331__i;}
G__13330 = new cljs.core.IndexedSeq(G__13331__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__13332__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__13332 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13333__i = 0, G__13333__a = new Array(arguments.length -  2);
while (G__13333__i < G__13333__a.length) {G__13333__a[G__13333__i] = arguments[G__13333__i + 2]; ++G__13333__i;}
  more = new cljs.core.IndexedSeq(G__13333__a,0);
} 
return G__13332__delegate.call(this,x,y,more);};
G__13332.cljs$lang$maxFixedArity = 2;
G__13332.cljs$lang$applyTo = (function (arglist__13334){
var x = cljs.core.first(arglist__13334);
arglist__13334 = cljs.core.next(arglist__13334);
var y = cljs.core.first(arglist__13334);
var more = cljs.core.rest(arglist__13334);
return G__13332__delegate(x,y,more);
});
G__13332.cljs$core$IFn$_invoke$arity$variadic = G__13332__delegate;
return G__13332;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__13335 = null;
if (arguments.length > 2) {
var G__13336__i = 0, G__13336__a = new Array(arguments.length -  2);
while (G__13336__i < G__13336__a.length) {G__13336__a[G__13336__i] = arguments[G__13336__i + 2]; ++G__13336__i;}
G__13335 = new cljs.core.IndexedSeq(G__13336__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__13337__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__13337 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13338__i = 0, G__13338__a = new Array(arguments.length -  2);
while (G__13338__i < G__13338__a.length) {G__13338__a[G__13338__i] = arguments[G__13338__i + 2]; ++G__13338__i;}
  more = new cljs.core.IndexedSeq(G__13338__a,0);
} 
return G__13337__delegate.call(this,x,y,more);};
G__13337.cljs$lang$maxFixedArity = 2;
G__13337.cljs$lang$applyTo = (function (arglist__13339){
var x = cljs.core.first(arglist__13339);
arglist__13339 = cljs.core.next(arglist__13339);
var y = cljs.core.first(arglist__13339);
var more = cljs.core.rest(arglist__13339);
return G__13337__delegate(x,y,more);
});
G__13337.cljs$core$IFn$_invoke$arity$variadic = G__13337__delegate;
return G__13337;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__13340 = null;
if (arguments.length > 2) {
var G__13341__i = 0, G__13341__a = new Array(arguments.length -  2);
while (G__13341__i < G__13341__a.length) {G__13341__a[G__13341__i] = arguments[G__13341__i + 2]; ++G__13341__i;}
G__13340 = new cljs.core.IndexedSeq(G__13341__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13340);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__13346__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__13347 = y;
var G__13348 = cljs.core.first(more);
var G__13349 = cljs.core.next(more);
x = G__13347;
y = G__13348;
more = G__13349;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13346 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13350__i = 0, G__13350__a = new Array(arguments.length -  2);
while (G__13350__i < G__13350__a.length) {G__13350__a[G__13350__i] = arguments[G__13350__i + 2]; ++G__13350__i;}
  more = new cljs.core.IndexedSeq(G__13350__a,0);
} 
return G__13346__delegate.call(this,x,y,more);};
G__13346.cljs$lang$maxFixedArity = 2;
G__13346.cljs$lang$applyTo = (function (arglist__13351){
var x = cljs.core.first(arglist__13351);
arglist__13351 = cljs.core.next(arglist__13351);
var y = cljs.core.first(arglist__13351);
var more = cljs.core.rest(arglist__13351);
return G__13346__delegate(x,y,more);
});
G__13346.cljs$core$IFn$_invoke$arity$variadic = G__13346__delegate;
return G__13346;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__13352 = null;
if (arguments.length > 2) {
var G__13353__i = 0, G__13353__a = new Array(arguments.length -  2);
while (G__13353__i < G__13353__a.length) {G__13353__a[G__13353__i] = arguments[G__13353__i + 2]; ++G__13353__i;}
G__13352 = new cljs.core.IndexedSeq(G__13353__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13352);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__13354 = (n__$1 - (1));
var G__13355 = cljs.core.next(xs);
n__$1 = G__13354;
xs = G__13355;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__13359 = x;
return goog.string.buildString(G__13359);
}
});
var str__2 = (function() { 
var G__13360__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__13361 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__13362 = cljs.core.next(more);
sb = G__13361;
more = G__13362;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__13360 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__13363__i = 0, G__13363__a = new Array(arguments.length -  1);
while (G__13363__i < G__13363__a.length) {G__13363__a[G__13363__i] = arguments[G__13363__i + 1]; ++G__13363__i;}
  ys = new cljs.core.IndexedSeq(G__13363__a,0);
} 
return G__13360__delegate.call(this,x,ys);};
G__13360.cljs$lang$maxFixedArity = 1;
G__13360.cljs$lang$applyTo = (function (arglist__13364){
var x = cljs.core.first(arglist__13364);
var ys = cljs.core.rest(arglist__13364);
return G__13360__delegate(x,ys);
});
G__13360.cljs$core$IFn$_invoke$arity$variadic = G__13360__delegate;
return G__13360;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__13365 = null;
if (arguments.length > 1) {
var G__13366__i = 0, G__13366__a = new Array(arguments.length -  1);
while (G__13366__i < G__13366__a.length) {G__13366__a[G__13366__i] = arguments[G__13366__i + 1]; ++G__13366__i;}
G__13365 = new cljs.core.IndexedSeq(G__13366__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13365);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__13367 = cljs.core.next(xs);
var G__13368 = cljs.core.next(ys);
xs = G__13367;
ys = G__13368;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__13369 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__13370 = cljs.core.next(s);
res = G__13369;
s = G__13370;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__13375 = ((h + (cljs.core.hash((function (){var G__13373 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13373) : cljs.core.key.call(null,G__13373));
})()) ^ cljs.core.hash((function (){var G__13374 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13374) : cljs.core.val.call(null,G__13374));
})()))) % (4503599627370496));
var G__13376 = cljs.core.next(s);
h = G__13375;
s = G__13376;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__13377 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__13378 = cljs.core.next(s__$1);
h = G__13377;
s__$1 = G__13378;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__13389_13399 = cljs.core.seq(fn_map);
var chunk__13390_13400 = null;
var count__13391_13401 = (0);
var i__13392_13402 = (0);
while(true){
if((i__13392_13402 < count__13391_13401)){
var vec__13393_13403 = chunk__13390_13400.cljs$core$IIndexed$_nth$arity$2(null,i__13392_13402);
var key_name_13404 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13393_13403,(0),null);
var f_13405 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13393_13403,(1),null);
var str_name_13406 = (function (){var G__13394 = key_name_13404;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13394) : cljs.core.name.call(null,G__13394));
})();
(obj[str_name_13406] = f_13405);

var G__13407 = seq__13389_13399;
var G__13408 = chunk__13390_13400;
var G__13409 = count__13391_13401;
var G__13410 = (i__13392_13402 + (1));
seq__13389_13399 = G__13407;
chunk__13390_13400 = G__13408;
count__13391_13401 = G__13409;
i__13392_13402 = G__13410;
continue;
} else {
var temp__4423__auto___13411 = cljs.core.seq(seq__13389_13399);
if(temp__4423__auto___13411){
var seq__13389_13412__$1 = temp__4423__auto___13411;
if(cljs.core.chunked_seq_QMARK_(seq__13389_13412__$1)){
var c__4552__auto___13413 = (function (){var G__13395 = seq__13389_13412__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__13395) : cljs.core.chunk_first.call(null,G__13395));
})();
var G__13414 = (function (){var G__13396 = seq__13389_13412__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__13396) : cljs.core.chunk_rest.call(null,G__13396));
})();
var G__13415 = c__4552__auto___13413;
var G__13416 = cljs.core.count(c__4552__auto___13413);
var G__13417 = (0);
seq__13389_13399 = G__13414;
chunk__13390_13400 = G__13415;
count__13391_13401 = G__13416;
i__13392_13402 = G__13417;
continue;
} else {
var vec__13397_13418 = cljs.core.first(seq__13389_13412__$1);
var key_name_13419 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13397_13418,(0),null);
var f_13420 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13397_13418,(1),null);
var str_name_13421 = (function (){var G__13398 = key_name_13419;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13398) : cljs.core.name.call(null,G__13398));
})();
(obj[str_name_13421] = f_13420);

var G__13422 = cljs.core.next(seq__13389_13412__$1);
var G__13423 = null;
var G__13424 = (0);
var G__13425 = (0);
seq__13389_13399 = G__13422;
chunk__13390_13400 = G__13423;
count__13391_13401 = G__13424;
i__13392_13402 = G__13425;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__13427 = coll;
if(G__13427){
var bit__4446__auto__ = (G__13427.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4446__auto__) || (G__13427.cljs$core$IReversible$)){
return true;
} else {
if((!G__13427.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__13427);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__13427);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__13428 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__13428;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__13429 = (i - (1));
var G__13430 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__13429;
r = G__13430;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__13431__i = 0, G__13431__a = new Array(arguments.length -  0);
while (G__13431__i < G__13431__a.length) {G__13431__a[G__13431__i] = arguments[G__13431__i + 0]; ++G__13431__i;}
  xs = new cljs.core.IndexedSeq(G__13431__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__13432){
var xs = cljs.core.seq(arglist__13432);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3765__auto__ = (coll == null);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var G__13436 = coll;
if(G__13436){
var bit__4439__auto__ = (G__13436.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4439__auto__) || (G__13436.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__13438 = x;
if(G__13438){
var bit__4446__auto__ = (G__13438.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4446__auto__) || (G__13438.cljs$core$IList$)){
return true;
} else {
if((!G__13438.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__13438);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__13438);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3753__auto__ = cljs.core.not(a.ns);
if(and__3753__auto__){
return b.ns;
} else {
return and__3753__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__13445 = a.ns;
var G__13446 = b.ns;
return goog.array.defaultCompare(G__13445,G__13446);
})();
if(((0) === nsc)){
var G__13447 = a.name;
var G__13448 = b.name;
return goog.array.defaultCompare(G__13447,G__13448);
} else {
return nsc;
}
}
} else {
var G__13449 = a.name;
var G__13450 = b.name;
return goog.array.defaultCompare(G__13449,G__13450);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__13452 = null;
var G__13452__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__13452__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__13452 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__13452__2.call(this,self__,coll);
case 3:
return G__13452__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13452.cljs$core$IFn$_invoke$arity$2 = G__13452__2;
G__13452.cljs$core$IFn$_invoke$arity$3 = G__13452__3;
return G__13452;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args13451){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13451)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4186__auto__ = self__._hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__13454 = x;
if(G__13454){
var bit__4439__auto__ = (G__13454.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4439__auto__) || (G__13454.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__13456 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13456) : cljs.core.name.call(null,G__13456));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__13457 = ls.sval();
ls = G__13457;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition0$ = 2;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition0$ = 524306;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__13459 = s;
if(G__13459){
var bit__4439__auto__ = (G__13459.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4439__auto__) || (G__13459.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__13460 = cljs.core.next(s__$1);
s__$1 = G__13460;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_13461 = (0);
var xs_13462 = cljs.core.seq(coll);
while(true){
if(xs_13462){
(ret[i_13461] = cljs.core.to_array(cljs.core.first(xs_13462)));

var G__13463 = (i_13461 + (1));
var G__13464 = cljs.core.next(xs_13462);
i_13461 = G__13463;
xs_13462 = G__13464;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13467 = (i + (1));
var G__13468 = cljs.core.next(s__$1);
i = G__13467;
s__$1 = G__13468;
continue;
} else {
return a;
}
break;
}
} else {
var n__4652__auto___13469 = size;
var i_13470 = (0);
while(true){
if((i_13470 < n__4652__auto___13469)){
(a[i_13470] = init_val_or_seq);

var G__13471 = (i_13470 + (1));
i_13470 = G__13471;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13474 = (i + (1));
var G__13475 = cljs.core.next(s__$1);
i = G__13474;
s__$1 = G__13475;
continue;
} else {
return a;
}
break;
}
} else {
var n__4652__auto___13476 = size;
var i_13477 = (0);
while(true){
if((i_13477 < n__4652__auto___13476)){
(a[i_13477] = init_val_or_seq);

var G__13478 = (i_13477 + (1));
i_13477 = G__13478;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13481 = (i + (1));
var G__13482 = cljs.core.next(s__$1);
i = G__13481;
s__$1 = G__13482;
continue;
} else {
return a;
}
break;
}
} else {
var n__4652__auto___13483 = size;
var i_13484 = (0);
while(true){
if((i_13484 < n__4652__auto___13483)){
(a[i_13484] = init_val_or_seq);

var G__13485 = (i_13484 + (1));
i_13484 = G__13485;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13488 = (i + (1));
var G__13489 = cljs.core.next(s__$1);
i = G__13488;
s__$1 = G__13489;
continue;
} else {
return a;
}
break;
}
} else {
var n__4652__auto___13490 = size;
var i_13491 = (0);
while(true){
if((i_13491 < n__4652__auto___13490)){
(a[i_13491] = init_val_or_seq);

var G__13492 = (i_13491 + (1));
i_13491 = G__13492;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__13493 = cljs.core.next(s__$1);
var G__13494 = (i - (1));
var G__13495 = (sum + (1));
s__$1 = G__13493;
i = G__13494;
sum = G__13495;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__13515__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__13515 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__13516__i = 0, G__13516__a = new Array(arguments.length -  2);
while (G__13516__i < G__13516__a.length) {G__13516__a[G__13516__i] = arguments[G__13516__i + 2]; ++G__13516__i;}
  zs = new cljs.core.IndexedSeq(G__13516__a,0);
} 
return G__13515__delegate.call(this,x,y,zs);};
G__13515.cljs$lang$maxFixedArity = 2;
G__13515.cljs$lang$applyTo = (function (arglist__13517){
var x = cljs.core.first(arglist__13517);
arglist__13517 = cljs.core.next(arglist__13517);
var y = cljs.core.first(arglist__13517);
var zs = cljs.core.rest(arglist__13517);
return G__13515__delegate(x,y,zs);
});
G__13515.cljs$core$IFn$_invoke$arity$variadic = G__13515__delegate;
return G__13515;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__13518 = null;
if (arguments.length > 2) {
var G__13519__i = 0, G__13519__a = new Array(arguments.length -  2);
while (G__13519__i < G__13519__a.length) {G__13519__a[G__13519__i] = arguments[G__13519__i + 2]; ++G__13519__i;}
G__13518 = new cljs.core.IndexedSeq(G__13519__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13518);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__13520__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__13520 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__13521__i = 0, G__13521__a = new Array(arguments.length -  4);
while (G__13521__i < G__13521__a.length) {G__13521__a[G__13521__i] = arguments[G__13521__i + 4]; ++G__13521__i;}
  more = new cljs.core.IndexedSeq(G__13521__a,0);
} 
return G__13520__delegate.call(this,a,b,c,d,more);};
G__13520.cljs$lang$maxFixedArity = 4;
G__13520.cljs$lang$applyTo = (function (arglist__13522){
var a = cljs.core.first(arglist__13522);
arglist__13522 = cljs.core.next(arglist__13522);
var b = cljs.core.first(arglist__13522);
arglist__13522 = cljs.core.next(arglist__13522);
var c = cljs.core.first(arglist__13522);
arglist__13522 = cljs.core.next(arglist__13522);
var d = cljs.core.first(arglist__13522);
var more = cljs.core.rest(arglist__13522);
return G__13520__delegate(a,b,c,d,more);
});
G__13520.cljs$core$IFn$_invoke$arity$variadic = G__13520__delegate;
return G__13520;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__13523 = null;
if (arguments.length > 4) {
var G__13524__i = 0, G__13524__a = new Array(arguments.length -  4);
while (G__13524__i < G__13524__a.length) {G__13524__a[G__13524__i] = arguments[G__13524__i + 4]; ++G__13524__i;}
G__13523 = new cljs.core.IndexedSeq(G__13524__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__13523);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__13525__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__13526 = ntcoll;
var G__13527 = cljs.core.first(vals);
var G__13528 = cljs.core.next(vals);
tcoll = G__13526;
val = G__13527;
vals = G__13528;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13525 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__13529__i = 0, G__13529__a = new Array(arguments.length -  2);
while (G__13529__i < G__13529__a.length) {G__13529__a[G__13529__i] = arguments[G__13529__i + 2]; ++G__13529__i;}
  vals = new cljs.core.IndexedSeq(G__13529__a,0);
} 
return G__13525__delegate.call(this,tcoll,val,vals);};
G__13525.cljs$lang$maxFixedArity = 2;
G__13525.cljs$lang$applyTo = (function (arglist__13530){
var tcoll = cljs.core.first(arglist__13530);
arglist__13530 = cljs.core.next(arglist__13530);
var val = cljs.core.first(arglist__13530);
var vals = cljs.core.rest(arglist__13530);
return G__13525__delegate(tcoll,val,vals);
});
G__13525.cljs$core$IFn$_invoke$arity$variadic = G__13525__delegate;
return G__13525;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__13531 = null;
if (arguments.length > 2) {
var G__13532__i = 0, G__13532__a = new Array(arguments.length -  2);
while (G__13532__i < G__13532__a.length) {G__13532__a[G__13532__i] = arguments[G__13532__i + 2]; ++G__13532__i;}
G__13531 = new cljs.core.IndexedSeq(G__13532__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__13531);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__13533__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__13534 = ntcoll;
var G__13535 = cljs.core.first(kvs);
var G__13536 = cljs.core.second(kvs);
var G__13537 = cljs.core.nnext(kvs);
tcoll = G__13534;
key = G__13535;
val = G__13536;
kvs = G__13537;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13533 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__13538__i = 0, G__13538__a = new Array(arguments.length -  3);
while (G__13538__i < G__13538__a.length) {G__13538__a[G__13538__i] = arguments[G__13538__i + 3]; ++G__13538__i;}
  kvs = new cljs.core.IndexedSeq(G__13538__a,0);
} 
return G__13533__delegate.call(this,tcoll,key,val,kvs);};
G__13533.cljs$lang$maxFixedArity = 3;
G__13533.cljs$lang$applyTo = (function (arglist__13539){
var tcoll = cljs.core.first(arglist__13539);
arglist__13539 = cljs.core.next(arglist__13539);
var key = cljs.core.first(arglist__13539);
arglist__13539 = cljs.core.next(arglist__13539);
var val = cljs.core.first(arglist__13539);
var kvs = cljs.core.rest(arglist__13539);
return G__13533__delegate(tcoll,key,val,kvs);
});
G__13533.cljs$core$IFn$_invoke$arity$variadic = G__13533__delegate;
return G__13533;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__13540 = null;
if (arguments.length > 3) {
var G__13541__i = 0, G__13541__a = new Array(arguments.length -  3);
while (G__13541__i < G__13541__a.length) {G__13541__a[G__13541__i] = arguments[G__13541__i + 3]; ++G__13541__i;}
G__13540 = new cljs.core.IndexedSeq(G__13541__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__13540);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__13542__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__13543 = ntcoll;
var G__13544 = cljs.core.first(ks);
var G__13545 = cljs.core.next(ks);
tcoll = G__13543;
key = G__13544;
ks = G__13545;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13542 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13546__i = 0, G__13546__a = new Array(arguments.length -  2);
while (G__13546__i < G__13546__a.length) {G__13546__a[G__13546__i] = arguments[G__13546__i + 2]; ++G__13546__i;}
  ks = new cljs.core.IndexedSeq(G__13546__a,0);
} 
return G__13542__delegate.call(this,tcoll,key,ks);};
G__13542.cljs$lang$maxFixedArity = 2;
G__13542.cljs$lang$applyTo = (function (arglist__13547){
var tcoll = cljs.core.first(arglist__13547);
arglist__13547 = cljs.core.next(arglist__13547);
var key = cljs.core.first(arglist__13547);
var ks = cljs.core.rest(arglist__13547);
return G__13542__delegate(tcoll,key,ks);
});
G__13542.cljs$core$IFn$_invoke$arity$variadic = G__13542__delegate;
return G__13542;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__13548 = null;
if (arguments.length > 2) {
var G__13549__i = 0, G__13549__a = new Array(arguments.length -  2);
while (G__13549__i < G__13549__a.length) {G__13549__a[G__13549__i] = arguments[G__13549__i + 2]; ++G__13549__i;}
G__13548 = new cljs.core.IndexedSeq(G__13549__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__13548);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__13550__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__13551 = ntcoll;
var G__13552 = cljs.core.first(vals);
var G__13553 = cljs.core.next(vals);
tcoll = G__13551;
val = G__13552;
vals = G__13553;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13550 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__13554__i = 0, G__13554__a = new Array(arguments.length -  2);
while (G__13554__i < G__13554__a.length) {G__13554__a[G__13554__i] = arguments[G__13554__i + 2]; ++G__13554__i;}
  vals = new cljs.core.IndexedSeq(G__13554__a,0);
} 
return G__13550__delegate.call(this,tcoll,val,vals);};
G__13550.cljs$lang$maxFixedArity = 2;
G__13550.cljs$lang$applyTo = (function (arglist__13555){
var tcoll = cljs.core.first(arglist__13555);
arglist__13555 = cljs.core.next(arglist__13555);
var val = cljs.core.first(arglist__13555);
var vals = cljs.core.rest(arglist__13555);
return G__13550__delegate(tcoll,val,vals);
});
G__13550.cljs$core$IFn$_invoke$arity$variadic = G__13550__delegate;
return G__13550;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__13556 = null;
if (arguments.length > 2) {
var G__13557__i = 0, G__13557__a = new Array(arguments.length -  2);
while (G__13557__i < G__13557__a.length) {G__13557__a[G__13557__i] = arguments[G__13557__i + 2]; ++G__13557__i;}
G__13556 = new cljs.core.IndexedSeq(G__13557__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__13556);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4696 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4696);
} else {
var G__13768 = a4696;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13768) : f.call(null,G__13768));
}
} else {
var b4697 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4696,b4697);
} else {
var G__13769 = a4696;
var G__13770 = b4697;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13769,G__13770) : f.call(null,G__13769,G__13770));
}
} else {
var c4698 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4696,b4697,c4698);
} else {
var G__13771 = a4696;
var G__13772 = b4697;
var G__13773 = c4698;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13771,G__13772,G__13773) : f.call(null,G__13771,G__13772,G__13773));
}
} else {
var d4699 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4696,b4697,c4698,d4699);
} else {
var G__13774 = a4696;
var G__13775 = b4697;
var G__13776 = c4698;
var G__13777 = d4699;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13774,G__13775,G__13776,G__13777) : f.call(null,G__13774,G__13775,G__13776,G__13777));
}
} else {
var e4700 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4696,b4697,c4698,d4699,e4700);
} else {
var G__13778 = a4696;
var G__13779 = b4697;
var G__13780 = c4698;
var G__13781 = d4699;
var G__13782 = e4700;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13778,G__13779,G__13780,G__13781,G__13782) : f.call(null,G__13778,G__13779,G__13780,G__13781,G__13782));
}
} else {
var f4701 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4696,b4697,c4698,d4699,e4700,f4701);
} else {
var G__13783 = a4696;
var G__13784 = b4697;
var G__13785 = c4698;
var G__13786 = d4699;
var G__13787 = e4700;
var G__13788 = f4701;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13783,G__13784,G__13785,G__13786,G__13787,G__13788) : f.call(null,G__13783,G__13784,G__13785,G__13786,G__13787,G__13788));
}
} else {
var g4702 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4696,b4697,c4698,d4699,e4700,f4701,g4702);
} else {
var G__13789 = a4696;
var G__13790 = b4697;
var G__13791 = c4698;
var G__13792 = d4699;
var G__13793 = e4700;
var G__13794 = f4701;
var G__13795 = g4702;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__13789,G__13790,G__13791,G__13792,G__13793,G__13794,G__13795) : f.call(null,G__13789,G__13790,G__13791,G__13792,G__13793,G__13794,G__13795));
}
} else {
var h4703 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703);
} else {
var G__13796 = a4696;
var G__13797 = b4697;
var G__13798 = c4698;
var G__13799 = d4699;
var G__13800 = e4700;
var G__13801 = f4701;
var G__13802 = g4702;
var G__13803 = h4703;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__13796,G__13797,G__13798,G__13799,G__13800,G__13801,G__13802,G__13803) : f.call(null,G__13796,G__13797,G__13798,G__13799,G__13800,G__13801,G__13802,G__13803));
}
} else {
var i4704 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704);
} else {
var G__13804 = a4696;
var G__13805 = b4697;
var G__13806 = c4698;
var G__13807 = d4699;
var G__13808 = e4700;
var G__13809 = f4701;
var G__13810 = g4702;
var G__13811 = h4703;
var G__13812 = i4704;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__13804,G__13805,G__13806,G__13807,G__13808,G__13809,G__13810,G__13811,G__13812) : f.call(null,G__13804,G__13805,G__13806,G__13807,G__13808,G__13809,G__13810,G__13811,G__13812));
}
} else {
var j4705 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705);
} else {
var G__13813 = a4696;
var G__13814 = b4697;
var G__13815 = c4698;
var G__13816 = d4699;
var G__13817 = e4700;
var G__13818 = f4701;
var G__13819 = g4702;
var G__13820 = h4703;
var G__13821 = i4704;
var G__13822 = j4705;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__13813,G__13814,G__13815,G__13816,G__13817,G__13818,G__13819,G__13820,G__13821,G__13822) : f.call(null,G__13813,G__13814,G__13815,G__13816,G__13817,G__13818,G__13819,G__13820,G__13821,G__13822));
}
} else {
var k4706 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706);
} else {
var G__13823 = a4696;
var G__13824 = b4697;
var G__13825 = c4698;
var G__13826 = d4699;
var G__13827 = e4700;
var G__13828 = f4701;
var G__13829 = g4702;
var G__13830 = h4703;
var G__13831 = i4704;
var G__13832 = j4705;
var G__13833 = k4706;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__13823,G__13824,G__13825,G__13826,G__13827,G__13828,G__13829,G__13830,G__13831,G__13832,G__13833) : f.call(null,G__13823,G__13824,G__13825,G__13826,G__13827,G__13828,G__13829,G__13830,G__13831,G__13832,G__13833));
}
} else {
var l4707 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707);
} else {
var G__13834 = a4696;
var G__13835 = b4697;
var G__13836 = c4698;
var G__13837 = d4699;
var G__13838 = e4700;
var G__13839 = f4701;
var G__13840 = g4702;
var G__13841 = h4703;
var G__13842 = i4704;
var G__13843 = j4705;
var G__13844 = k4706;
var G__13845 = l4707;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__13834,G__13835,G__13836,G__13837,G__13838,G__13839,G__13840,G__13841,G__13842,G__13843,G__13844,G__13845) : f.call(null,G__13834,G__13835,G__13836,G__13837,G__13838,G__13839,G__13840,G__13841,G__13842,G__13843,G__13844,G__13845));
}
} else {
var m4708 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708);
} else {
var G__13846 = a4696;
var G__13847 = b4697;
var G__13848 = c4698;
var G__13849 = d4699;
var G__13850 = e4700;
var G__13851 = f4701;
var G__13852 = g4702;
var G__13853 = h4703;
var G__13854 = i4704;
var G__13855 = j4705;
var G__13856 = k4706;
var G__13857 = l4707;
var G__13858 = m4708;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__13846,G__13847,G__13848,G__13849,G__13850,G__13851,G__13852,G__13853,G__13854,G__13855,G__13856,G__13857,G__13858) : f.call(null,G__13846,G__13847,G__13848,G__13849,G__13850,G__13851,G__13852,G__13853,G__13854,G__13855,G__13856,G__13857,G__13858));
}
} else {
var n4709 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708,n4709);
} else {
var G__13859 = a4696;
var G__13860 = b4697;
var G__13861 = c4698;
var G__13862 = d4699;
var G__13863 = e4700;
var G__13864 = f4701;
var G__13865 = g4702;
var G__13866 = h4703;
var G__13867 = i4704;
var G__13868 = j4705;
var G__13869 = k4706;
var G__13870 = l4707;
var G__13871 = m4708;
var G__13872 = n4709;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__13859,G__13860,G__13861,G__13862,G__13863,G__13864,G__13865,G__13866,G__13867,G__13868,G__13869,G__13870,G__13871,G__13872) : f.call(null,G__13859,G__13860,G__13861,G__13862,G__13863,G__13864,G__13865,G__13866,G__13867,G__13868,G__13869,G__13870,G__13871,G__13872));
}
} else {
var o4710 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708,n4709,o4710);
} else {
var G__13873 = a4696;
var G__13874 = b4697;
var G__13875 = c4698;
var G__13876 = d4699;
var G__13877 = e4700;
var G__13878 = f4701;
var G__13879 = g4702;
var G__13880 = h4703;
var G__13881 = i4704;
var G__13882 = j4705;
var G__13883 = k4706;
var G__13884 = l4707;
var G__13885 = m4708;
var G__13886 = n4709;
var G__13887 = o4710;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__13873,G__13874,G__13875,G__13876,G__13877,G__13878,G__13879,G__13880,G__13881,G__13882,G__13883,G__13884,G__13885,G__13886,G__13887) : f.call(null,G__13873,G__13874,G__13875,G__13876,G__13877,G__13878,G__13879,G__13880,G__13881,G__13882,G__13883,G__13884,G__13885,G__13886,G__13887));
}
} else {
var p4711 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708,n4709,o4710,p4711);
} else {
var G__13888 = a4696;
var G__13889 = b4697;
var G__13890 = c4698;
var G__13891 = d4699;
var G__13892 = e4700;
var G__13893 = f4701;
var G__13894 = g4702;
var G__13895 = h4703;
var G__13896 = i4704;
var G__13897 = j4705;
var G__13898 = k4706;
var G__13899 = l4707;
var G__13900 = m4708;
var G__13901 = n4709;
var G__13902 = o4710;
var G__13903 = p4711;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__13888,G__13889,G__13890,G__13891,G__13892,G__13893,G__13894,G__13895,G__13896,G__13897,G__13898,G__13899,G__13900,G__13901,G__13902,G__13903) : f.call(null,G__13888,G__13889,G__13890,G__13891,G__13892,G__13893,G__13894,G__13895,G__13896,G__13897,G__13898,G__13899,G__13900,G__13901,G__13902,G__13903));
}
} else {
var q4712 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708,n4709,o4710,p4711,q4712);
} else {
var G__13904 = a4696;
var G__13905 = b4697;
var G__13906 = c4698;
var G__13907 = d4699;
var G__13908 = e4700;
var G__13909 = f4701;
var G__13910 = g4702;
var G__13911 = h4703;
var G__13912 = i4704;
var G__13913 = j4705;
var G__13914 = k4706;
var G__13915 = l4707;
var G__13916 = m4708;
var G__13917 = n4709;
var G__13918 = o4710;
var G__13919 = p4711;
var G__13920 = q4712;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__13904,G__13905,G__13906,G__13907,G__13908,G__13909,G__13910,G__13911,G__13912,G__13913,G__13914,G__13915,G__13916,G__13917,G__13918,G__13919,G__13920) : f.call(null,G__13904,G__13905,G__13906,G__13907,G__13908,G__13909,G__13910,G__13911,G__13912,G__13913,G__13914,G__13915,G__13916,G__13917,G__13918,G__13919,G__13920));
}
} else {
var r4713 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708,n4709,o4710,p4711,q4712,r4713);
} else {
var G__13921 = a4696;
var G__13922 = b4697;
var G__13923 = c4698;
var G__13924 = d4699;
var G__13925 = e4700;
var G__13926 = f4701;
var G__13927 = g4702;
var G__13928 = h4703;
var G__13929 = i4704;
var G__13930 = j4705;
var G__13931 = k4706;
var G__13932 = l4707;
var G__13933 = m4708;
var G__13934 = n4709;
var G__13935 = o4710;
var G__13936 = p4711;
var G__13937 = q4712;
var G__13938 = r4713;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__13921,G__13922,G__13923,G__13924,G__13925,G__13926,G__13927,G__13928,G__13929,G__13930,G__13931,G__13932,G__13933,G__13934,G__13935,G__13936,G__13937,G__13938) : f.call(null,G__13921,G__13922,G__13923,G__13924,G__13925,G__13926,G__13927,G__13928,G__13929,G__13930,G__13931,G__13932,G__13933,G__13934,G__13935,G__13936,G__13937,G__13938));
}
} else {
var s4714 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708,n4709,o4710,p4711,q4712,r4713,s4714);
} else {
var G__13939 = a4696;
var G__13940 = b4697;
var G__13941 = c4698;
var G__13942 = d4699;
var G__13943 = e4700;
var G__13944 = f4701;
var G__13945 = g4702;
var G__13946 = h4703;
var G__13947 = i4704;
var G__13948 = j4705;
var G__13949 = k4706;
var G__13950 = l4707;
var G__13951 = m4708;
var G__13952 = n4709;
var G__13953 = o4710;
var G__13954 = p4711;
var G__13955 = q4712;
var G__13956 = r4713;
var G__13957 = s4714;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__13939,G__13940,G__13941,G__13942,G__13943,G__13944,G__13945,G__13946,G__13947,G__13948,G__13949,G__13950,G__13951,G__13952,G__13953,G__13954,G__13955,G__13956,G__13957) : f.call(null,G__13939,G__13940,G__13941,G__13942,G__13943,G__13944,G__13945,G__13946,G__13947,G__13948,G__13949,G__13950,G__13951,G__13952,G__13953,G__13954,G__13955,G__13956,G__13957));
}
} else {
var t4715 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4696,b4697,c4698,d4699,e4700,f4701,g4702,h4703,i4704,j4705,k4706,l4707,m4708,n4709,o4710,p4711,q4712,r4713,s4714,t4715);
} else {
var G__13958 = a4696;
var G__13959 = b4697;
var G__13960 = c4698;
var G__13961 = d4699;
var G__13962 = e4700;
var G__13963 = f4701;
var G__13964 = g4702;
var G__13965 = h4703;
var G__13966 = i4704;
var G__13967 = j4705;
var G__13968 = k4706;
var G__13969 = l4707;
var G__13970 = m4708;
var G__13971 = n4709;
var G__13972 = o4710;
var G__13973 = p4711;
var G__13974 = q4712;
var G__13975 = r4713;
var G__13976 = s4714;
var G__13977 = t4715;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__13958,G__13959,G__13960,G__13961,G__13962,G__13963,G__13964,G__13965,G__13966,G__13967,G__13968,G__13969,G__13970,G__13971,G__13972,G__13973,G__13974,G__13975,G__13976,G__13977) : f.call(null,G__13958,G__13959,G__13960,G__13961,G__13962,G__13963,G__13964,G__13965,G__13966,G__13967,G__13968,G__13969,G__13970,G__13971,G__13972,G__13973,G__13974,G__13975,G__13976,G__13977));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__13978__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__13978 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__13979__i = 0, G__13979__a = new Array(arguments.length -  5);
while (G__13979__i < G__13979__a.length) {G__13979__a[G__13979__i] = arguments[G__13979__i + 5]; ++G__13979__i;}
  args = new cljs.core.IndexedSeq(G__13979__a,0);
} 
return G__13978__delegate.call(this,f,a,b,c,d,args);};
G__13978.cljs$lang$maxFixedArity = 5;
G__13978.cljs$lang$applyTo = (function (arglist__13980){
var f = cljs.core.first(arglist__13980);
arglist__13980 = cljs.core.next(arglist__13980);
var a = cljs.core.first(arglist__13980);
arglist__13980 = cljs.core.next(arglist__13980);
var b = cljs.core.first(arglist__13980);
arglist__13980 = cljs.core.next(arglist__13980);
var c = cljs.core.first(arglist__13980);
arglist__13980 = cljs.core.next(arglist__13980);
var d = cljs.core.first(arglist__13980);
var args = cljs.core.rest(arglist__13980);
return G__13978__delegate(f,a,b,c,d,args);
});
G__13978.cljs$core$IFn$_invoke$arity$variadic = G__13978__delegate;
return G__13978;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__13981 = null;
if (arguments.length > 5) {
var G__13982__i = 0, G__13982__a = new Array(arguments.length -  5);
while (G__13982__i < G__13982__a.length) {G__13982__a[G__13982__i] = arguments[G__13982__i + 5]; ++G__13982__i;}
G__13981 = new cljs.core.IndexedSeq(G__13982__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__13981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__13998 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13998) : f.call(null,G__13998));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__13999 = cljs.core.meta(obj);
var G__14000 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13999,G__14000) : f.call(null,G__13999,G__14000));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__14001 = cljs.core.meta(obj);
var G__14002 = a;
var G__14003 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14001,G__14002,G__14003) : f.call(null,G__14001,G__14002,G__14003));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__14004 = cljs.core.meta(obj);
var G__14005 = a;
var G__14006 = b;
var G__14007 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14004,G__14005,G__14006,G__14007) : f.call(null,G__14004,G__14005,G__14006,G__14007));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__14008 = cljs.core.meta(obj);
var G__14009 = a;
var G__14010 = b;
var G__14011 = c;
var G__14012 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14008,G__14009,G__14010,G__14011,G__14012) : f.call(null,G__14008,G__14009,G__14010,G__14011,G__14012));
})());
});
var vary_meta__7 = (function() { 
var G__14013__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__14013 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__14014__i = 0, G__14014__a = new Array(arguments.length -  6);
while (G__14014__i < G__14014__a.length) {G__14014__a[G__14014__i] = arguments[G__14014__i + 6]; ++G__14014__i;}
  args = new cljs.core.IndexedSeq(G__14014__a,0);
} 
return G__14013__delegate.call(this,obj,f,a,b,c,d,args);};
G__14013.cljs$lang$maxFixedArity = 6;
G__14013.cljs$lang$applyTo = (function (arglist__14015){
var obj = cljs.core.first(arglist__14015);
arglist__14015 = cljs.core.next(arglist__14015);
var f = cljs.core.first(arglist__14015);
arglist__14015 = cljs.core.next(arglist__14015);
var a = cljs.core.first(arglist__14015);
arglist__14015 = cljs.core.next(arglist__14015);
var b = cljs.core.first(arglist__14015);
arglist__14015 = cljs.core.next(arglist__14015);
var c = cljs.core.first(arglist__14015);
arglist__14015 = cljs.core.next(arglist__14015);
var d = cljs.core.first(arglist__14015);
var args = cljs.core.rest(arglist__14015);
return G__14013__delegate(obj,f,a,b,c,d,args);
});
G__14013.cljs$core$IFn$_invoke$arity$variadic = G__14013__delegate;
return G__14013;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__14016 = null;
if (arguments.length > 6) {
var G__14017__i = 0, G__14017__a = new Array(arguments.length -  6);
while (G__14017__i < G__14017__a.length) {G__14017__a[G__14017__i] = arguments[G__14017__i + 6]; ++G__14017__i;}
G__14016 = new cljs.core.IndexedSeq(G__14017__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__14016);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__14018__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__14018 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14019__i = 0, G__14019__a = new Array(arguments.length -  2);
while (G__14019__i < G__14019__a.length) {G__14019__a[G__14019__i] = arguments[G__14019__i + 2]; ++G__14019__i;}
  more = new cljs.core.IndexedSeq(G__14019__a,0);
} 
return G__14018__delegate.call(this,x,y,more);};
G__14018.cljs$lang$maxFixedArity = 2;
G__14018.cljs$lang$applyTo = (function (arglist__14020){
var x = cljs.core.first(arglist__14020);
arglist__14020 = cljs.core.next(arglist__14020);
var y = cljs.core.first(arglist__14020);
var more = cljs.core.rest(arglist__14020);
return G__14018__delegate(x,y,more);
});
G__14018.cljs$core$IFn$_invoke$arity$variadic = G__14018__delegate;
return G__14018;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__14021 = null;
if (arguments.length > 2) {
var G__14022__i = 0, G__14022__a = new Array(arguments.length -  2);
while (G__14022__i < G__14022__a.length) {G__14022__a[G__14022__i] = arguments[G__14022__i + 2]; ++G__14022__i;}
G__14021 = new cljs.core.IndexedSeq(G__14022__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14021);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t14026 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t14026 = (function (nil_iter,meta14027){
this.nil_iter = nil_iter;
this.meta14027 = meta14027;
this.cljs$lang$protocol_mask$partition0$ = 393216;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.t14026.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_14028,meta14027__$1){
var self__ = this;
var _14028__$1 = this;
return (new cljs.core.t14026(self__.nil_iter,meta14027__$1));
});

cljs.core.t14026.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_14028){
var self__ = this;
var _14028__$1 = this;
return self__.meta14027;
});

cljs.core.t14026.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t14026.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t14026.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t14026.cljs$lang$type = true;

cljs.core.t14026.cljs$lang$ctorStr = "cljs.core/t14026";

cljs.core.t14026.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/t14026");
});

cljs.core.__GT_t14026 = (function __GT_t14026(nil_iter__$1,meta14027){
return (new cljs.core.t14026(nil_iter__$1,meta14027));
});

}

return (new cljs.core.t14026(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3753__auto__ = !((lt.stepper == null));
if(and__3753__auto__){
return self__.iter.hasNext();
} else {
return and__3753__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__14029 = lt;
var G__14030 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__14029,G__14030) : self__.xform.call(null,G__14029,G__14030));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__14031 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__14031) : self__.xform.call(null,G__14031));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__14033 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14033) : xform.call(null,G__14033));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__14035 = cljs.core.next(iters__$1);
iters__$1 = G__14035;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4652__auto___14036 = self__.iters.length;
var i_14037 = (0);
while(true){
if((i_14037 < n__4652__auto___14036)){
(self__.nexts[i_14037] = (self__.iters[i_14037]).next());

var G__14038 = (i_14037 + (1));
i_14037 = G__14038;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3753__auto__ = !((lt.stepper == null));
if(and__3753__auto__){
return this$.hasNext();
} else {
return and__3753__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__14034 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__14034) : self__.xform.call(null,G__14034));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__14043 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14043) : xform.call(null,G__14043));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__14044_14048 = cljs.core.seq(colls);
var chunk__14045_14049 = null;
var count__14046_14050 = (0);
var i__14047_14051 = (0);
while(true){
if((i__14047_14051 < count__14046_14050)){
var coll_14052 = chunk__14045_14049.cljs$core$IIndexed$_nth$arity$2(null,i__14047_14051);
iters.push(cljs.core.iter(coll_14052));

var G__14053 = seq__14044_14048;
var G__14054 = chunk__14045_14049;
var G__14055 = count__14046_14050;
var G__14056 = (i__14047_14051 + (1));
seq__14044_14048 = G__14053;
chunk__14045_14049 = G__14054;
count__14046_14050 = G__14055;
i__14047_14051 = G__14056;
continue;
} else {
var temp__4423__auto___14057 = cljs.core.seq(seq__14044_14048);
if(temp__4423__auto___14057){
var seq__14044_14058__$1 = temp__4423__auto___14057;
if(cljs.core.chunked_seq_QMARK_(seq__14044_14058__$1)){
var c__4552__auto___14059 = cljs.core.chunk_first(seq__14044_14058__$1);
var G__14060 = cljs.core.chunk_rest(seq__14044_14058__$1);
var G__14061 = c__4552__auto___14059;
var G__14062 = cljs.core.count(c__4552__auto___14059);
var G__14063 = (0);
seq__14044_14048 = G__14060;
chunk__14045_14049 = G__14061;
count__14046_14050 = G__14062;
i__14047_14051 = G__14063;
continue;
} else {
var coll_14064 = cljs.core.first(seq__14044_14058__$1);
iters.push(cljs.core.iter(coll_14064));

var G__14065 = cljs.core.next(seq__14044_14058__$1);
var G__14066 = null;
var G__14067 = (0);
var G__14068 = (0);
seq__14044_14048 = G__14065;
chunk__14045_14049 = G__14066;
count__14046_14050 = G__14067;
i__14047_14051 = G__14068;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3765__auto__ = cljs.core.seq(coll);
if(or__3765__auto__){
return or__3765__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__14069__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__14069 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__14070__i = 0, G__14070__a = new Array(arguments.length -  2);
while (G__14070__i < G__14070__a.length) {G__14070__a[G__14070__i] = arguments[G__14070__i + 2]; ++G__14070__i;}
  colls = new cljs.core.IndexedSeq(G__14070__a,0);
} 
return G__14069__delegate.call(this,xform,coll,colls);};
G__14069.cljs$lang$maxFixedArity = 2;
G__14069.cljs$lang$applyTo = (function (arglist__14071){
var xform = cljs.core.first(arglist__14071);
arglist__14071 = cljs.core.next(arglist__14071);
var coll = cljs.core.first(arglist__14071);
var colls = cljs.core.rest(arglist__14071);
return G__14069__delegate(xform,coll,colls);
});
G__14069.cljs$core$IFn$_invoke$arity$variadic = G__14069__delegate;
return G__14069;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__14072 = null;
if (arguments.length > 2) {
var G__14073__i = 0, G__14073__a = new Array(arguments.length -  2);
while (G__14073__i < G__14073__a.length) {G__14073__a[G__14073__i] = arguments[G__14073__i + 2]; ++G__14073__i;}
G__14072 = new cljs.core.IndexedSeq(G__14073__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__14072);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__14075 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14075) : pred.call(null,G__14075));
})())){
var G__14076 = pred;
var G__14077 = cljs.core.next(coll);
pred = G__14076;
coll = G__14077;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3765__auto__ = (function (){var G__14081 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14081) : pred.call(null,G__14081));
})();
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
var G__14082 = pred;
var G__14083 = cljs.core.next(coll);
pred = G__14082;
coll = G__14083;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__14090 = null;
var G__14090__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__14090__1 = (function (x){
return cljs.core.not((function (){var G__14087 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14087) : f.call(null,G__14087));
})());
});
var G__14090__2 = (function (x,y){
return cljs.core.not((function (){var G__14088 = x;
var G__14089 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14088,G__14089) : f.call(null,G__14088,G__14089));
})());
});
var G__14090__3 = (function() { 
var G__14091__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__14091 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__14092__i = 0, G__14092__a = new Array(arguments.length -  2);
while (G__14092__i < G__14092__a.length) {G__14092__a[G__14092__i] = arguments[G__14092__i + 2]; ++G__14092__i;}
  zs = new cljs.core.IndexedSeq(G__14092__a,0);
} 
return G__14091__delegate.call(this,x,y,zs);};
G__14091.cljs$lang$maxFixedArity = 2;
G__14091.cljs$lang$applyTo = (function (arglist__14093){
var x = cljs.core.first(arglist__14093);
arglist__14093 = cljs.core.next(arglist__14093);
var y = cljs.core.first(arglist__14093);
var zs = cljs.core.rest(arglist__14093);
return G__14091__delegate(x,y,zs);
});
G__14091.cljs$core$IFn$_invoke$arity$variadic = G__14091__delegate;
return G__14091;
})()
;
G__14090 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__14090__0.call(this);
case 1:
return G__14090__1.call(this,x);
case 2:
return G__14090__2.call(this,x,y);
default:
var G__14094 = null;
if (arguments.length > 2) {
var G__14095__i = 0, G__14095__a = new Array(arguments.length -  2);
while (G__14095__i < G__14095__a.length) {G__14095__a[G__14095__i] = arguments[G__14095__i + 2]; ++G__14095__i;}
G__14094 = new cljs.core.IndexedSeq(G__14095__a,0);
}
return G__14090__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14094);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14090.cljs$lang$maxFixedArity = 2;
G__14090.cljs$lang$applyTo = G__14090__3.cljs$lang$applyTo;
G__14090.cljs$core$IFn$_invoke$arity$0 = G__14090__0;
G__14090.cljs$core$IFn$_invoke$arity$1 = G__14090__1;
G__14090.cljs$core$IFn$_invoke$arity$2 = G__14090__2;
G__14090.cljs$core$IFn$_invoke$arity$variadic = G__14090__3.cljs$core$IFn$_invoke$arity$variadic;
return G__14090;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__14096__delegate = function (args){
return x;
};
var G__14096 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14097__i = 0, G__14097__a = new Array(arguments.length -  0);
while (G__14097__i < G__14097__a.length) {G__14097__a[G__14097__i] = arguments[G__14097__i + 0]; ++G__14097__i;}
  args = new cljs.core.IndexedSeq(G__14097__a,0);
} 
return G__14096__delegate.call(this,args);};
G__14096.cljs$lang$maxFixedArity = 0;
G__14096.cljs$lang$applyTo = (function (arglist__14098){
var args = cljs.core.seq(arglist__14098);
return G__14096__delegate(args);
});
G__14096.cljs$core$IFn$_invoke$arity$variadic = G__14096__delegate;
return G__14096;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__14153 = null;
var G__14153__0 = (function (){
var G__14126 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14126) : f.call(null,G__14126));
});
var G__14153__1 = (function (x){
var G__14127 = (function (){var G__14128 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14128) : g.call(null,G__14128));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14127) : f.call(null,G__14127));
});
var G__14153__2 = (function (x,y){
var G__14129 = (function (){var G__14130 = x;
var G__14131 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14130,G__14131) : g.call(null,G__14130,G__14131));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14129) : f.call(null,G__14129));
});
var G__14153__3 = (function (x,y,z){
var G__14132 = (function (){var G__14133 = x;
var G__14134 = y;
var G__14135 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14133,G__14134,G__14135) : g.call(null,G__14133,G__14134,G__14135));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14132) : f.call(null,G__14132));
});
var G__14153__4 = (function() { 
var G__14154__delegate = function (x,y,z,args){
var G__14136 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14136) : f.call(null,G__14136));
};
var G__14154 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14155__i = 0, G__14155__a = new Array(arguments.length -  3);
while (G__14155__i < G__14155__a.length) {G__14155__a[G__14155__i] = arguments[G__14155__i + 3]; ++G__14155__i;}
  args = new cljs.core.IndexedSeq(G__14155__a,0);
} 
return G__14154__delegate.call(this,x,y,z,args);};
G__14154.cljs$lang$maxFixedArity = 3;
G__14154.cljs$lang$applyTo = (function (arglist__14156){
var x = cljs.core.first(arglist__14156);
arglist__14156 = cljs.core.next(arglist__14156);
var y = cljs.core.first(arglist__14156);
arglist__14156 = cljs.core.next(arglist__14156);
var z = cljs.core.first(arglist__14156);
var args = cljs.core.rest(arglist__14156);
return G__14154__delegate(x,y,z,args);
});
G__14154.cljs$core$IFn$_invoke$arity$variadic = G__14154__delegate;
return G__14154;
})()
;
G__14153 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14153__0.call(this);
case 1:
return G__14153__1.call(this,x);
case 2:
return G__14153__2.call(this,x,y);
case 3:
return G__14153__3.call(this,x,y,z);
default:
var G__14157 = null;
if (arguments.length > 3) {
var G__14158__i = 0, G__14158__a = new Array(arguments.length -  3);
while (G__14158__i < G__14158__a.length) {G__14158__a[G__14158__i] = arguments[G__14158__i + 3]; ++G__14158__i;}
G__14157 = new cljs.core.IndexedSeq(G__14158__a,0);
}
return G__14153__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14157);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14153.cljs$lang$maxFixedArity = 3;
G__14153.cljs$lang$applyTo = G__14153__4.cljs$lang$applyTo;
G__14153.cljs$core$IFn$_invoke$arity$0 = G__14153__0;
G__14153.cljs$core$IFn$_invoke$arity$1 = G__14153__1;
G__14153.cljs$core$IFn$_invoke$arity$2 = G__14153__2;
G__14153.cljs$core$IFn$_invoke$arity$3 = G__14153__3;
G__14153.cljs$core$IFn$_invoke$arity$variadic = G__14153__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14153;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__14159 = null;
var G__14159__0 = (function (){
var G__14137 = (function (){var G__14138 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14138) : g.call(null,G__14138));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14137) : f.call(null,G__14137));
});
var G__14159__1 = (function (x){
var G__14139 = (function (){var G__14140 = (function (){var G__14141 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__14141) : h.call(null,G__14141));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14140) : g.call(null,G__14140));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14139) : f.call(null,G__14139));
});
var G__14159__2 = (function (x,y){
var G__14142 = (function (){var G__14143 = (function (){var G__14144 = x;
var G__14145 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__14144,G__14145) : h.call(null,G__14144,G__14145));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14143) : g.call(null,G__14143));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14142) : f.call(null,G__14142));
});
var G__14159__3 = (function (x,y,z){
var G__14146 = (function (){var G__14147 = (function (){var G__14148 = x;
var G__14149 = y;
var G__14150 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__14148,G__14149,G__14150) : h.call(null,G__14148,G__14149,G__14150));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14147) : g.call(null,G__14147));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14146) : f.call(null,G__14146));
});
var G__14159__4 = (function() { 
var G__14160__delegate = function (x,y,z,args){
var G__14151 = (function (){var G__14152 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14152) : g.call(null,G__14152));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14151) : f.call(null,G__14151));
};
var G__14160 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14161__i = 0, G__14161__a = new Array(arguments.length -  3);
while (G__14161__i < G__14161__a.length) {G__14161__a[G__14161__i] = arguments[G__14161__i + 3]; ++G__14161__i;}
  args = new cljs.core.IndexedSeq(G__14161__a,0);
} 
return G__14160__delegate.call(this,x,y,z,args);};
G__14160.cljs$lang$maxFixedArity = 3;
G__14160.cljs$lang$applyTo = (function (arglist__14162){
var x = cljs.core.first(arglist__14162);
arglist__14162 = cljs.core.next(arglist__14162);
var y = cljs.core.first(arglist__14162);
arglist__14162 = cljs.core.next(arglist__14162);
var z = cljs.core.first(arglist__14162);
var args = cljs.core.rest(arglist__14162);
return G__14160__delegate(x,y,z,args);
});
G__14160.cljs$core$IFn$_invoke$arity$variadic = G__14160__delegate;
return G__14160;
})()
;
G__14159 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14159__0.call(this);
case 1:
return G__14159__1.call(this,x);
case 2:
return G__14159__2.call(this,x,y);
case 3:
return G__14159__3.call(this,x,y,z);
default:
var G__14163 = null;
if (arguments.length > 3) {
var G__14164__i = 0, G__14164__a = new Array(arguments.length -  3);
while (G__14164__i < G__14164__a.length) {G__14164__a[G__14164__i] = arguments[G__14164__i + 3]; ++G__14164__i;}
G__14163 = new cljs.core.IndexedSeq(G__14164__a,0);
}
return G__14159__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14163);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14159.cljs$lang$maxFixedArity = 3;
G__14159.cljs$lang$applyTo = G__14159__4.cljs$lang$applyTo;
G__14159.cljs$core$IFn$_invoke$arity$0 = G__14159__0;
G__14159.cljs$core$IFn$_invoke$arity$1 = G__14159__1;
G__14159.cljs$core$IFn$_invoke$arity$2 = G__14159__2;
G__14159.cljs$core$IFn$_invoke$arity$3 = G__14159__3;
G__14159.cljs$core$IFn$_invoke$arity$variadic = G__14159__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14159;
})()
});
var comp__4 = (function() { 
var G__14165__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__14166__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__14167 = cljs.core.first(fs__$2).call(null,ret);
var G__14168 = cljs.core.next(fs__$2);
ret = G__14167;
fs__$2 = G__14168;
continue;
} else {
return ret;
}
break;
}
};
var G__14166 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14169__i = 0, G__14169__a = new Array(arguments.length -  0);
while (G__14169__i < G__14169__a.length) {G__14169__a[G__14169__i] = arguments[G__14169__i + 0]; ++G__14169__i;}
  args = new cljs.core.IndexedSeq(G__14169__a,0);
} 
return G__14166__delegate.call(this,args);};
G__14166.cljs$lang$maxFixedArity = 0;
G__14166.cljs$lang$applyTo = (function (arglist__14170){
var args = cljs.core.seq(arglist__14170);
return G__14166__delegate(args);
});
G__14166.cljs$core$IFn$_invoke$arity$variadic = G__14166__delegate;
return G__14166;
})()
;
;})(fs__$1))
};
var G__14165 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__14171__i = 0, G__14171__a = new Array(arguments.length -  3);
while (G__14171__i < G__14171__a.length) {G__14171__a[G__14171__i] = arguments[G__14171__i + 3]; ++G__14171__i;}
  fs = new cljs.core.IndexedSeq(G__14171__a,0);
} 
return G__14165__delegate.call(this,f1,f2,f3,fs);};
G__14165.cljs$lang$maxFixedArity = 3;
G__14165.cljs$lang$applyTo = (function (arglist__14172){
var f1 = cljs.core.first(arglist__14172);
arglist__14172 = cljs.core.next(arglist__14172);
var f2 = cljs.core.first(arglist__14172);
arglist__14172 = cljs.core.next(arglist__14172);
var f3 = cljs.core.first(arglist__14172);
var fs = cljs.core.rest(arglist__14172);
return G__14165__delegate(f1,f2,f3,fs);
});
G__14165.cljs$core$IFn$_invoke$arity$variadic = G__14165__delegate;
return G__14165;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__14173 = null;
if (arguments.length > 3) {
var G__14174__i = 0, G__14174__a = new Array(arguments.length -  3);
while (G__14174__i < G__14174__a.length) {G__14174__a[G__14174__i] = arguments[G__14174__i + 3]; ++G__14174__i;}
G__14173 = new cljs.core.IndexedSeq(G__14174__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__14173);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__14259 = null;
var G__14259__0 = (function (){
var G__14217 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14217) : f.call(null,G__14217));
});
var G__14259__1 = (function (x){
var G__14218 = arg1;
var G__14219 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14218,G__14219) : f.call(null,G__14218,G__14219));
});
var G__14259__2 = (function (x,y){
var G__14220 = arg1;
var G__14221 = x;
var G__14222 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14220,G__14221,G__14222) : f.call(null,G__14220,G__14221,G__14222));
});
var G__14259__3 = (function (x,y,z){
var G__14223 = arg1;
var G__14224 = x;
var G__14225 = y;
var G__14226 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14223,G__14224,G__14225,G__14226) : f.call(null,G__14223,G__14224,G__14225,G__14226));
});
var G__14259__4 = (function() { 
var G__14260__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__14260 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14261__i = 0, G__14261__a = new Array(arguments.length -  3);
while (G__14261__i < G__14261__a.length) {G__14261__a[G__14261__i] = arguments[G__14261__i + 3]; ++G__14261__i;}
  args = new cljs.core.IndexedSeq(G__14261__a,0);
} 
return G__14260__delegate.call(this,x,y,z,args);};
G__14260.cljs$lang$maxFixedArity = 3;
G__14260.cljs$lang$applyTo = (function (arglist__14262){
var x = cljs.core.first(arglist__14262);
arglist__14262 = cljs.core.next(arglist__14262);
var y = cljs.core.first(arglist__14262);
arglist__14262 = cljs.core.next(arglist__14262);
var z = cljs.core.first(arglist__14262);
var args = cljs.core.rest(arglist__14262);
return G__14260__delegate(x,y,z,args);
});
G__14260.cljs$core$IFn$_invoke$arity$variadic = G__14260__delegate;
return G__14260;
})()
;
G__14259 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14259__0.call(this);
case 1:
return G__14259__1.call(this,x);
case 2:
return G__14259__2.call(this,x,y);
case 3:
return G__14259__3.call(this,x,y,z);
default:
var G__14263 = null;
if (arguments.length > 3) {
var G__14264__i = 0, G__14264__a = new Array(arguments.length -  3);
while (G__14264__i < G__14264__a.length) {G__14264__a[G__14264__i] = arguments[G__14264__i + 3]; ++G__14264__i;}
G__14263 = new cljs.core.IndexedSeq(G__14264__a,0);
}
return G__14259__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14263);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14259.cljs$lang$maxFixedArity = 3;
G__14259.cljs$lang$applyTo = G__14259__4.cljs$lang$applyTo;
G__14259.cljs$core$IFn$_invoke$arity$0 = G__14259__0;
G__14259.cljs$core$IFn$_invoke$arity$1 = G__14259__1;
G__14259.cljs$core$IFn$_invoke$arity$2 = G__14259__2;
G__14259.cljs$core$IFn$_invoke$arity$3 = G__14259__3;
G__14259.cljs$core$IFn$_invoke$arity$variadic = G__14259__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14259;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__14265 = null;
var G__14265__0 = (function (){
var G__14227 = arg1;
var G__14228 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14227,G__14228) : f.call(null,G__14227,G__14228));
});
var G__14265__1 = (function (x){
var G__14229 = arg1;
var G__14230 = arg2;
var G__14231 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14229,G__14230,G__14231) : f.call(null,G__14229,G__14230,G__14231));
});
var G__14265__2 = (function (x,y){
var G__14232 = arg1;
var G__14233 = arg2;
var G__14234 = x;
var G__14235 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14232,G__14233,G__14234,G__14235) : f.call(null,G__14232,G__14233,G__14234,G__14235));
});
var G__14265__3 = (function (x,y,z){
var G__14236 = arg1;
var G__14237 = arg2;
var G__14238 = x;
var G__14239 = y;
var G__14240 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14236,G__14237,G__14238,G__14239,G__14240) : f.call(null,G__14236,G__14237,G__14238,G__14239,G__14240));
});
var G__14265__4 = (function() { 
var G__14266__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__14266 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14267__i = 0, G__14267__a = new Array(arguments.length -  3);
while (G__14267__i < G__14267__a.length) {G__14267__a[G__14267__i] = arguments[G__14267__i + 3]; ++G__14267__i;}
  args = new cljs.core.IndexedSeq(G__14267__a,0);
} 
return G__14266__delegate.call(this,x,y,z,args);};
G__14266.cljs$lang$maxFixedArity = 3;
G__14266.cljs$lang$applyTo = (function (arglist__14268){
var x = cljs.core.first(arglist__14268);
arglist__14268 = cljs.core.next(arglist__14268);
var y = cljs.core.first(arglist__14268);
arglist__14268 = cljs.core.next(arglist__14268);
var z = cljs.core.first(arglist__14268);
var args = cljs.core.rest(arglist__14268);
return G__14266__delegate(x,y,z,args);
});
G__14266.cljs$core$IFn$_invoke$arity$variadic = G__14266__delegate;
return G__14266;
})()
;
G__14265 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14265__0.call(this);
case 1:
return G__14265__1.call(this,x);
case 2:
return G__14265__2.call(this,x,y);
case 3:
return G__14265__3.call(this,x,y,z);
default:
var G__14269 = null;
if (arguments.length > 3) {
var G__14270__i = 0, G__14270__a = new Array(arguments.length -  3);
while (G__14270__i < G__14270__a.length) {G__14270__a[G__14270__i] = arguments[G__14270__i + 3]; ++G__14270__i;}
G__14269 = new cljs.core.IndexedSeq(G__14270__a,0);
}
return G__14265__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14269);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14265.cljs$lang$maxFixedArity = 3;
G__14265.cljs$lang$applyTo = G__14265__4.cljs$lang$applyTo;
G__14265.cljs$core$IFn$_invoke$arity$0 = G__14265__0;
G__14265.cljs$core$IFn$_invoke$arity$1 = G__14265__1;
G__14265.cljs$core$IFn$_invoke$arity$2 = G__14265__2;
G__14265.cljs$core$IFn$_invoke$arity$3 = G__14265__3;
G__14265.cljs$core$IFn$_invoke$arity$variadic = G__14265__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14265;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__14271 = null;
var G__14271__0 = (function (){
var G__14241 = arg1;
var G__14242 = arg2;
var G__14243 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14241,G__14242,G__14243) : f.call(null,G__14241,G__14242,G__14243));
});
var G__14271__1 = (function (x){
var G__14244 = arg1;
var G__14245 = arg2;
var G__14246 = arg3;
var G__14247 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14244,G__14245,G__14246,G__14247) : f.call(null,G__14244,G__14245,G__14246,G__14247));
});
var G__14271__2 = (function (x,y){
var G__14248 = arg1;
var G__14249 = arg2;
var G__14250 = arg3;
var G__14251 = x;
var G__14252 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14248,G__14249,G__14250,G__14251,G__14252) : f.call(null,G__14248,G__14249,G__14250,G__14251,G__14252));
});
var G__14271__3 = (function (x,y,z){
var G__14253 = arg1;
var G__14254 = arg2;
var G__14255 = arg3;
var G__14256 = x;
var G__14257 = y;
var G__14258 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__14253,G__14254,G__14255,G__14256,G__14257,G__14258) : f.call(null,G__14253,G__14254,G__14255,G__14256,G__14257,G__14258));
});
var G__14271__4 = (function() { 
var G__14272__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__14272 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14273__i = 0, G__14273__a = new Array(arguments.length -  3);
while (G__14273__i < G__14273__a.length) {G__14273__a[G__14273__i] = arguments[G__14273__i + 3]; ++G__14273__i;}
  args = new cljs.core.IndexedSeq(G__14273__a,0);
} 
return G__14272__delegate.call(this,x,y,z,args);};
G__14272.cljs$lang$maxFixedArity = 3;
G__14272.cljs$lang$applyTo = (function (arglist__14274){
var x = cljs.core.first(arglist__14274);
arglist__14274 = cljs.core.next(arglist__14274);
var y = cljs.core.first(arglist__14274);
arglist__14274 = cljs.core.next(arglist__14274);
var z = cljs.core.first(arglist__14274);
var args = cljs.core.rest(arglist__14274);
return G__14272__delegate(x,y,z,args);
});
G__14272.cljs$core$IFn$_invoke$arity$variadic = G__14272__delegate;
return G__14272;
})()
;
G__14271 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14271__0.call(this);
case 1:
return G__14271__1.call(this,x);
case 2:
return G__14271__2.call(this,x,y);
case 3:
return G__14271__3.call(this,x,y,z);
default:
var G__14275 = null;
if (arguments.length > 3) {
var G__14276__i = 0, G__14276__a = new Array(arguments.length -  3);
while (G__14276__i < G__14276__a.length) {G__14276__a[G__14276__i] = arguments[G__14276__i + 3]; ++G__14276__i;}
G__14275 = new cljs.core.IndexedSeq(G__14276__a,0);
}
return G__14271__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14275);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14271.cljs$lang$maxFixedArity = 3;
G__14271.cljs$lang$applyTo = G__14271__4.cljs$lang$applyTo;
G__14271.cljs$core$IFn$_invoke$arity$0 = G__14271__0;
G__14271.cljs$core$IFn$_invoke$arity$1 = G__14271__1;
G__14271.cljs$core$IFn$_invoke$arity$2 = G__14271__2;
G__14271.cljs$core$IFn$_invoke$arity$3 = G__14271__3;
G__14271.cljs$core$IFn$_invoke$arity$variadic = G__14271__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14271;
})()
});
var partial__5 = (function() { 
var G__14277__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__14278__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__14278 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14279__i = 0, G__14279__a = new Array(arguments.length -  0);
while (G__14279__i < G__14279__a.length) {G__14279__a[G__14279__i] = arguments[G__14279__i + 0]; ++G__14279__i;}
  args = new cljs.core.IndexedSeq(G__14279__a,0);
} 
return G__14278__delegate.call(this,args);};
G__14278.cljs$lang$maxFixedArity = 0;
G__14278.cljs$lang$applyTo = (function (arglist__14280){
var args = cljs.core.seq(arglist__14280);
return G__14278__delegate(args);
});
G__14278.cljs$core$IFn$_invoke$arity$variadic = G__14278__delegate;
return G__14278;
})()
;
};
var G__14277 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__14281__i = 0, G__14281__a = new Array(arguments.length -  4);
while (G__14281__i < G__14281__a.length) {G__14281__a[G__14281__i] = arguments[G__14281__i + 4]; ++G__14281__i;}
  more = new cljs.core.IndexedSeq(G__14281__a,0);
} 
return G__14277__delegate.call(this,f,arg1,arg2,arg3,more);};
G__14277.cljs$lang$maxFixedArity = 4;
G__14277.cljs$lang$applyTo = (function (arglist__14282){
var f = cljs.core.first(arglist__14282);
arglist__14282 = cljs.core.next(arglist__14282);
var arg1 = cljs.core.first(arglist__14282);
arglist__14282 = cljs.core.next(arglist__14282);
var arg2 = cljs.core.first(arglist__14282);
arglist__14282 = cljs.core.next(arglist__14282);
var arg3 = cljs.core.first(arglist__14282);
var more = cljs.core.rest(arglist__14282);
return G__14277__delegate(f,arg1,arg2,arg3,more);
});
G__14277.cljs$core$IFn$_invoke$arity$variadic = G__14277__delegate;
return G__14277;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__14283 = null;
if (arguments.length > 4) {
var G__14284__i = 0, G__14284__a = new Array(arguments.length -  4);
while (G__14284__i < G__14284__a.length) {G__14284__a[G__14284__i] = arguments[G__14284__i + 4]; ++G__14284__i;}
G__14283 = new cljs.core.IndexedSeq(G__14284__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__14283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__14317 = null;
var G__14317__1 = (function (a){
var G__14301 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14301) : f.call(null,G__14301));
});
var G__14317__2 = (function (a,b){
var G__14302 = (((a == null))?x:a);
var G__14303 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14302,G__14303) : f.call(null,G__14302,G__14303));
});
var G__14317__3 = (function (a,b,c){
var G__14304 = (((a == null))?x:a);
var G__14305 = b;
var G__14306 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14304,G__14305,G__14306) : f.call(null,G__14304,G__14305,G__14306));
});
var G__14317__4 = (function() { 
var G__14318__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__14318 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14319__i = 0, G__14319__a = new Array(arguments.length -  3);
while (G__14319__i < G__14319__a.length) {G__14319__a[G__14319__i] = arguments[G__14319__i + 3]; ++G__14319__i;}
  ds = new cljs.core.IndexedSeq(G__14319__a,0);
} 
return G__14318__delegate.call(this,a,b,c,ds);};
G__14318.cljs$lang$maxFixedArity = 3;
G__14318.cljs$lang$applyTo = (function (arglist__14320){
var a = cljs.core.first(arglist__14320);
arglist__14320 = cljs.core.next(arglist__14320);
var b = cljs.core.first(arglist__14320);
arglist__14320 = cljs.core.next(arglist__14320);
var c = cljs.core.first(arglist__14320);
var ds = cljs.core.rest(arglist__14320);
return G__14318__delegate(a,b,c,ds);
});
G__14318.cljs$core$IFn$_invoke$arity$variadic = G__14318__delegate;
return G__14318;
})()
;
G__14317 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__14317__1.call(this,a);
case 2:
return G__14317__2.call(this,a,b);
case 3:
return G__14317__3.call(this,a,b,c);
default:
var G__14321 = null;
if (arguments.length > 3) {
var G__14322__i = 0, G__14322__a = new Array(arguments.length -  3);
while (G__14322__i < G__14322__a.length) {G__14322__a[G__14322__i] = arguments[G__14322__i + 3]; ++G__14322__i;}
G__14321 = new cljs.core.IndexedSeq(G__14322__a,0);
}
return G__14317__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14321);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14317.cljs$lang$maxFixedArity = 3;
G__14317.cljs$lang$applyTo = G__14317__4.cljs$lang$applyTo;
G__14317.cljs$core$IFn$_invoke$arity$1 = G__14317__1;
G__14317.cljs$core$IFn$_invoke$arity$2 = G__14317__2;
G__14317.cljs$core$IFn$_invoke$arity$3 = G__14317__3;
G__14317.cljs$core$IFn$_invoke$arity$variadic = G__14317__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14317;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__14323 = null;
var G__14323__2 = (function (a,b){
var G__14307 = (((a == null))?x:a);
var G__14308 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14307,G__14308) : f.call(null,G__14307,G__14308));
});
var G__14323__3 = (function (a,b,c){
var G__14309 = (((a == null))?x:a);
var G__14310 = (((b == null))?y:b);
var G__14311 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14309,G__14310,G__14311) : f.call(null,G__14309,G__14310,G__14311));
});
var G__14323__4 = (function() { 
var G__14324__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__14324 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14325__i = 0, G__14325__a = new Array(arguments.length -  3);
while (G__14325__i < G__14325__a.length) {G__14325__a[G__14325__i] = arguments[G__14325__i + 3]; ++G__14325__i;}
  ds = new cljs.core.IndexedSeq(G__14325__a,0);
} 
return G__14324__delegate.call(this,a,b,c,ds);};
G__14324.cljs$lang$maxFixedArity = 3;
G__14324.cljs$lang$applyTo = (function (arglist__14326){
var a = cljs.core.first(arglist__14326);
arglist__14326 = cljs.core.next(arglist__14326);
var b = cljs.core.first(arglist__14326);
arglist__14326 = cljs.core.next(arglist__14326);
var c = cljs.core.first(arglist__14326);
var ds = cljs.core.rest(arglist__14326);
return G__14324__delegate(a,b,c,ds);
});
G__14324.cljs$core$IFn$_invoke$arity$variadic = G__14324__delegate;
return G__14324;
})()
;
G__14323 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__14323__2.call(this,a,b);
case 3:
return G__14323__3.call(this,a,b,c);
default:
var G__14327 = null;
if (arguments.length > 3) {
var G__14328__i = 0, G__14328__a = new Array(arguments.length -  3);
while (G__14328__i < G__14328__a.length) {G__14328__a[G__14328__i] = arguments[G__14328__i + 3]; ++G__14328__i;}
G__14327 = new cljs.core.IndexedSeq(G__14328__a,0);
}
return G__14323__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14327);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14323.cljs$lang$maxFixedArity = 3;
G__14323.cljs$lang$applyTo = G__14323__4.cljs$lang$applyTo;
G__14323.cljs$core$IFn$_invoke$arity$2 = G__14323__2;
G__14323.cljs$core$IFn$_invoke$arity$3 = G__14323__3;
G__14323.cljs$core$IFn$_invoke$arity$variadic = G__14323__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14323;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__14329 = null;
var G__14329__2 = (function (a,b){
var G__14312 = (((a == null))?x:a);
var G__14313 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14312,G__14313) : f.call(null,G__14312,G__14313));
});
var G__14329__3 = (function (a,b,c){
var G__14314 = (((a == null))?x:a);
var G__14315 = (((b == null))?y:b);
var G__14316 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14314,G__14315,G__14316) : f.call(null,G__14314,G__14315,G__14316));
});
var G__14329__4 = (function() { 
var G__14330__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__14330 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14331__i = 0, G__14331__a = new Array(arguments.length -  3);
while (G__14331__i < G__14331__a.length) {G__14331__a[G__14331__i] = arguments[G__14331__i + 3]; ++G__14331__i;}
  ds = new cljs.core.IndexedSeq(G__14331__a,0);
} 
return G__14330__delegate.call(this,a,b,c,ds);};
G__14330.cljs$lang$maxFixedArity = 3;
G__14330.cljs$lang$applyTo = (function (arglist__14332){
var a = cljs.core.first(arglist__14332);
arglist__14332 = cljs.core.next(arglist__14332);
var b = cljs.core.first(arglist__14332);
arglist__14332 = cljs.core.next(arglist__14332);
var c = cljs.core.first(arglist__14332);
var ds = cljs.core.rest(arglist__14332);
return G__14330__delegate(a,b,c,ds);
});
G__14330.cljs$core$IFn$_invoke$arity$variadic = G__14330__delegate;
return G__14330;
})()
;
G__14329 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__14329__2.call(this,a,b);
case 3:
return G__14329__3.call(this,a,b,c);
default:
var G__14333 = null;
if (arguments.length > 3) {
var G__14334__i = 0, G__14334__a = new Array(arguments.length -  3);
while (G__14334__i < G__14334__a.length) {G__14334__a[G__14334__i] = arguments[G__14334__i + 3]; ++G__14334__i;}
G__14333 = new cljs.core.IndexedSeq(G__14334__a,0);
}
return G__14329__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14333);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14329.cljs$lang$maxFixedArity = 3;
G__14329.cljs$lang$applyTo = G__14329__4.cljs$lang$applyTo;
G__14329.cljs$core$IFn$_invoke$arity$2 = G__14329__2;
G__14329.cljs$core$IFn$_invoke$arity$3 = G__14329__3;
G__14329.cljs$core$IFn$_invoke$arity$variadic = G__14329__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14329;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__14365 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__14365) : cljs.core.volatile_BANG_.call(null,G__14365));
})();
return ((function (i){
return (function() {
var G__14395 = null;
var G__14395__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14395__1 = (function (result){
var G__14366 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14366) : rf.call(null,G__14366));
});
var G__14395__2 = (function (result,input){
var G__14367 = result;
var G__14368 = (function (){var G__14369 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__14370 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14369,G__14370) : f.call(null,G__14369,G__14370));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14367,G__14368) : rf.call(null,G__14367,G__14368));
});
G__14395 = function(result,input){
switch(arguments.length){
case 0:
return G__14395__0.call(this);
case 1:
return G__14395__1.call(this,result);
case 2:
return G__14395__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14395.cljs$core$IFn$_invoke$arity$0 = G__14395__0;
G__14395.cljs$core$IFn$_invoke$arity$1 = G__14395__1;
G__14395.cljs$core$IFn$_invoke$arity$2 = G__14395__2;
return G__14395;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll__$1);
if(temp__4423__auto__){
var s = temp__4423__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4652__auto___14396 = size;
var i_14397 = (0);
while(true){
if((i_14397 < n__4652__auto___14396)){
cljs.core.chunk_append(b,(function (){var G__14391 = (idx + i_14397);
var G__14392 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14397);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14391,G__14392) : f.call(null,G__14391,G__14392));
})());

var G__14398 = (i_14397 + (1));
i_14397 = G__14398;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__14393 = idx;
var G__14394 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14393,G__14394) : f.call(null,G__14393,G__14394));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__14417 = null;
var G__14417__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14417__1 = (function (result){
var G__14411 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14411) : rf.call(null,G__14411));
});
var G__14417__2 = (function (result,input){
var v = (function (){var G__14412 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14412) : f.call(null,G__14412));
})();
if((v == null)){
return result;
} else {
var G__14413 = result;
var G__14414 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14413,G__14414) : rf.call(null,G__14413,G__14414));
}
});
G__14417 = function(result,input){
switch(arguments.length){
case 0:
return G__14417__0.call(this);
case 1:
return G__14417__1.call(this,result);
case 2:
return G__14417__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14417.cljs$core$IFn$_invoke$arity$0 = G__14417__0;
G__14417.cljs$core$IFn$_invoke$arity$1 = G__14417__1;
G__14417.cljs$core$IFn$_invoke$arity$2 = G__14417__2;
return G__14417;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4652__auto___14418 = size;
var i_14419 = (0);
while(true){
if((i_14419 < n__4652__auto___14418)){
var x_14420 = (function (){var G__14415 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14419);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14415) : f.call(null,G__14415));
})();
if((x_14420 == null)){
} else {
cljs.core.chunk_append(b,x_14420);
}

var G__14421 = (i_14419 + (1));
i_14419 = G__14421;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__14416 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14416) : f.call(null,G__14416));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition1$ = 16386;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
})
cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__14422 = cljs.core.seq(self__.watches);
var chunk__14423 = null;
var count__14424 = (0);
var i__14425 = (0);
while(true){
if((i__14425 < count__14424)){
var vec__14426 = chunk__14423.cljs$core$IIndexed$_nth$arity$2(null,i__14425);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14426,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14426,(1),null);
var G__14427_14437 = key;
var G__14428_14438 = this$__$1;
var G__14429_14439 = oldval;
var G__14430_14440 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14427_14437,G__14428_14438,G__14429_14439,G__14430_14440) : f.call(null,G__14427_14437,G__14428_14438,G__14429_14439,G__14430_14440));

var G__14441 = seq__14422;
var G__14442 = chunk__14423;
var G__14443 = count__14424;
var G__14444 = (i__14425 + (1));
seq__14422 = G__14441;
chunk__14423 = G__14442;
count__14424 = G__14443;
i__14425 = G__14444;
continue;
} else {
var temp__4423__auto__ = cljs.core.seq(seq__14422);
if(temp__4423__auto__){
var seq__14422__$1 = temp__4423__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14422__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__14422__$1);
var G__14445 = cljs.core.chunk_rest(seq__14422__$1);
var G__14446 = c__4552__auto__;
var G__14447 = cljs.core.count(c__4552__auto__);
var G__14448 = (0);
seq__14422 = G__14445;
chunk__14423 = G__14446;
count__14424 = G__14447;
i__14425 = G__14448;
continue;
} else {
var vec__14431 = cljs.core.first(seq__14422__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14431,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14431,(1),null);
var G__14432_14449 = key;
var G__14433_14450 = this$__$1;
var G__14434_14451 = oldval;
var G__14435_14452 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14432_14449,G__14433_14450,G__14434_14451,G__14435_14452) : f.call(null,G__14432_14449,G__14433_14450,G__14434_14451,G__14435_14452));

var G__14453 = cljs.core.next(seq__14422__$1);
var G__14454 = null;
var G__14455 = (0);
var G__14456 = (0);
seq__14422 = G__14453;
chunk__14423 = G__14454;
count__14424 = G__14455;
i__14425 = G__14456;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__14436 = this$__$1;
return goog.getUid(G__14436);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__14460__delegate = function (x,p__14457){
var map__14459 = p__14457;
var map__14459__$1 = ((cljs.core.seq_QMARK_(map__14459))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__14459):map__14459);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14459__$1,cljs.core.constant$keyword$3);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14459__$1,cljs.core.constant$keyword$8);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__14460 = function (x,var_args){
var p__14457 = null;
if (arguments.length > 1) {
var G__14461__i = 0, G__14461__a = new Array(arguments.length -  1);
while (G__14461__i < G__14461__a.length) {G__14461__a[G__14461__i] = arguments[G__14461__i + 1]; ++G__14461__i;}
  p__14457 = new cljs.core.IndexedSeq(G__14461__a,0);
} 
return G__14460__delegate.call(this,x,p__14457);};
G__14460.cljs$lang$maxFixedArity = 1;
G__14460.cljs$lang$applyTo = (function (arglist__14462){
var x = cljs.core.first(arglist__14462);
var p__14457 = cljs.core.rest(arglist__14462);
return G__14460__delegate(x,p__14457);
});
G__14460.cljs$core$IFn$_invoke$arity$variadic = G__14460__delegate;
return G__14460;
})()
;
atom = function(x,var_args){
var p__14457 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__14463 = null;
if (arguments.length > 1) {
var G__14464__i = 0, G__14464__a = new Array(arguments.length -  1);
while (G__14464__i < G__14464__a.length) {G__14464__a[G__14464__i] = arguments[G__14464__i + 1]; ++G__14464__i;}
G__14463 = new cljs.core.IndexedSeq(G__14464__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14463);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__14467 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__14467) : validate.call(null,G__14467));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__14468 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__14468) : cljs.core.pr_str.call(null,G__14468));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__14475 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14475) : f.call(null,G__14475));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__14476 = a.state;
var G__14477 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14476,G__14477) : f.call(null,G__14476,G__14477));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__14478 = a.state;
var G__14479 = x;
var G__14480 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14478,G__14479,G__14480) : f.call(null,G__14478,G__14479,G__14480));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__14481__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__14481 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__14482__i = 0, G__14482__a = new Array(arguments.length -  4);
while (G__14482__i < G__14482__a.length) {G__14482__a[G__14482__i] = arguments[G__14482__i + 4]; ++G__14482__i;}
  more = new cljs.core.IndexedSeq(G__14482__a,0);
} 
return G__14481__delegate.call(this,a,f,x,y,more);};
G__14481.cljs$lang$maxFixedArity = 4;
G__14481.cljs$lang$applyTo = (function (arglist__14483){
var a = cljs.core.first(arglist__14483);
arglist__14483 = cljs.core.next(arglist__14483);
var f = cljs.core.first(arglist__14483);
arglist__14483 = cljs.core.next(arglist__14483);
var x = cljs.core.first(arglist__14483);
arglist__14483 = cljs.core.next(arglist__14483);
var y = cljs.core.first(arglist__14483);
var more = cljs.core.rest(arglist__14483);
return G__14481__delegate(a,f,x,y,more);
});
G__14481.cljs$core$IFn$_invoke$arity$variadic = G__14481__delegate;
return G__14481;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__14484 = null;
if (arguments.length > 4) {
var G__14485__i = 0, G__14485__a = new Array(arguments.length -  4);
while (G__14485__i < G__14485__a.length) {G__14485__a[G__14485__i] = arguments[G__14485__i + 4]; ++G__14485__i;}
G__14484 = new cljs.core.IndexedSeq(G__14485__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__14484);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__14552 = null;
var G__14552__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14552__1 = (function (result){
var G__14519 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14519) : rf.call(null,G__14519));
});
var G__14552__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__14520 = i;
var G__14521 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14520,G__14521) : f.call(null,G__14520,G__14521));
})();
if((v == null)){
return result;
} else {
var G__14522 = result;
var G__14523 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14522,G__14523) : rf.call(null,G__14522,G__14523));
}
});
G__14552 = function(result,input){
switch(arguments.length){
case 0:
return G__14552__0.call(this);
case 1:
return G__14552__1.call(this,result);
case 2:
return G__14552__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14552.cljs$core$IFn$_invoke$arity$0 = G__14552__0;
G__14552.cljs$core$IFn$_invoke$arity$1 = G__14552__1;
G__14552.cljs$core$IFn$_invoke$arity$2 = G__14552__2;
return G__14552;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll__$1);
if(temp__4423__auto__){
var s = temp__4423__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4652__auto___14553 = size;
var i_14554 = (0);
while(true){
if((i_14554 < n__4652__auto___14553)){
var x_14555 = (function (){var G__14548 = (idx + i_14554);
var G__14549 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14554);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14548,G__14549) : f.call(null,G__14548,G__14549));
})();
if((x_14555 == null)){
} else {
cljs.core.chunk_append(b,x_14555);
}

var G__14556 = (i_14554 + (1));
i_14554 = G__14556;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__14550 = idx;
var G__14551 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14550,G__14551) : f.call(null,G__14550,G__14551));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__14770 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14770) : p.call(null,G__14770));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3753__auto__ = (function (){var G__14772 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14772) : p.call(null,G__14772));
})();
if(cljs.core.truth_(and__3753__auto__)){
var G__14773 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14773) : p.call(null,G__14773));
} else {
return and__3753__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3753__auto__ = (function (){var G__14775 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14775) : p.call(null,G__14775));
})();
if(cljs.core.truth_(and__3753__auto__)){
var and__3753__auto____$1 = (function (){var G__14777 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14777) : p.call(null,G__14777));
})();
if(cljs.core.truth_(and__3753__auto____$1)){
var G__14778 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14778) : p.call(null,G__14778));
} else {
return and__3753__auto____$1;
}
} else {
return and__3753__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__14947__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__14947 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14948__i = 0, G__14948__a = new Array(arguments.length -  3);
while (G__14948__i < G__14948__a.length) {G__14948__a[G__14948__i] = arguments[G__14948__i + 3]; ++G__14948__i;}
  args = new cljs.core.IndexedSeq(G__14948__a,0);
} 
return G__14947__delegate.call(this,x,y,z,args);};
G__14947.cljs$lang$maxFixedArity = 3;
G__14947.cljs$lang$applyTo = (function (arglist__14949){
var x = cljs.core.first(arglist__14949);
arglist__14949 = cljs.core.next(arglist__14949);
var y = cljs.core.first(arglist__14949);
arglist__14949 = cljs.core.next(arglist__14949);
var z = cljs.core.first(arglist__14949);
var args = cljs.core.rest(arglist__14949);
return G__14947__delegate(x,y,z,args);
});
G__14947.cljs$core$IFn$_invoke$arity$variadic = G__14947__delegate;
return G__14947;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__14950 = null;
if (arguments.length > 3) {
var G__14951__i = 0, G__14951__a = new Array(arguments.length -  3);
while (G__14951__i < G__14951__a.length) {G__14951__a[G__14951__i] = arguments[G__14951__i + 3]; ++G__14951__i;}
G__14950 = new cljs.core.IndexedSeq(G__14951__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14950);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3753__auto__ = (function (){var G__14810 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14810) : p1.call(null,G__14810));
})();
if(cljs.core.truth_(and__3753__auto__)){
var G__14811 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14811) : p2.call(null,G__14811));
} else {
return and__3753__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3753__auto__ = (function (){var G__14813 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14813) : p1.call(null,G__14813));
})();
if(cljs.core.truth_(and__3753__auto__)){
var and__3753__auto____$1 = (function (){var G__14815 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14815) : p1.call(null,G__14815));
})();
if(cljs.core.truth_(and__3753__auto____$1)){
var and__3753__auto____$2 = (function (){var G__14817 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14817) : p2.call(null,G__14817));
})();
if(cljs.core.truth_(and__3753__auto____$2)){
var G__14818 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14818) : p2.call(null,G__14818));
} else {
return and__3753__auto____$2;
}
} else {
return and__3753__auto____$1;
}
} else {
return and__3753__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3753__auto__ = (function (){var G__14820 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14820) : p1.call(null,G__14820));
})();
if(cljs.core.truth_(and__3753__auto__)){
var and__3753__auto____$1 = (function (){var G__14822 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14822) : p1.call(null,G__14822));
})();
if(cljs.core.truth_(and__3753__auto____$1)){
var and__3753__auto____$2 = (function (){var G__14824 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14824) : p1.call(null,G__14824));
})();
if(cljs.core.truth_(and__3753__auto____$2)){
var and__3753__auto____$3 = (function (){var G__14826 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14826) : p2.call(null,G__14826));
})();
if(cljs.core.truth_(and__3753__auto____$3)){
var and__3753__auto____$4 = (function (){var G__14828 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14828) : p2.call(null,G__14828));
})();
if(cljs.core.truth_(and__3753__auto____$4)){
var G__14829 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14829) : p2.call(null,G__14829));
} else {
return and__3753__auto____$4;
}
} else {
return and__3753__auto____$3;
}
} else {
return and__3753__auto____$2;
}
} else {
return and__3753__auto____$1;
}
} else {
return and__3753__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__14952__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__14557_SHARP_){
var and__3753__auto__ = (function (){var G__14834 = p1__14557_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14834) : p1.call(null,G__14834));
})();
if(cljs.core.truth_(and__3753__auto__)){
var G__14835 = p1__14557_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14835) : p2.call(null,G__14835));
} else {
return and__3753__auto__;
}
}),args)));
};
var G__14952 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14953__i = 0, G__14953__a = new Array(arguments.length -  3);
while (G__14953__i < G__14953__a.length) {G__14953__a[G__14953__i] = arguments[G__14953__i + 3]; ++G__14953__i;}
  args = new cljs.core.IndexedSeq(G__14953__a,0);
} 
return G__14952__delegate.call(this,x,y,z,args);};
G__14952.cljs$lang$maxFixedArity = 3;
G__14952.cljs$lang$applyTo = (function (arglist__14954){
var x = cljs.core.first(arglist__14954);
arglist__14954 = cljs.core.next(arglist__14954);
var y = cljs.core.first(arglist__14954);
arglist__14954 = cljs.core.next(arglist__14954);
var z = cljs.core.first(arglist__14954);
var args = cljs.core.rest(arglist__14954);
return G__14952__delegate(x,y,z,args);
});
G__14952.cljs$core$IFn$_invoke$arity$variadic = G__14952__delegate;
return G__14952;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__14955 = null;
if (arguments.length > 3) {
var G__14956__i = 0, G__14956__a = new Array(arguments.length -  3);
while (G__14956__i < G__14956__a.length) {G__14956__a[G__14956__i] = arguments[G__14956__i + 3]; ++G__14956__i;}
G__14955 = new cljs.core.IndexedSeq(G__14956__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14955);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3753__auto__ = (function (){var G__14881 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14881) : p1.call(null,G__14881));
})();
if(cljs.core.truth_(and__3753__auto__)){
var and__3753__auto____$1 = (function (){var G__14883 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14883) : p2.call(null,G__14883));
})();
if(cljs.core.truth_(and__3753__auto____$1)){
var G__14884 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14884) : p3.call(null,G__14884));
} else {
return and__3753__auto____$1;
}
} else {
return and__3753__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3753__auto__ = (function (){var G__14886 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14886) : p1.call(null,G__14886));
})();
if(cljs.core.truth_(and__3753__auto__)){
var and__3753__auto____$1 = (function (){var G__14888 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14888) : p2.call(null,G__14888));
})();
if(cljs.core.truth_(and__3753__auto____$1)){
var and__3753__auto____$2 = (function (){var G__14890 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14890) : p3.call(null,G__14890));
})();
if(cljs.core.truth_(and__3753__auto____$2)){
var and__3753__auto____$3 = (function (){var G__14892 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14892) : p1.call(null,G__14892));
})();
if(cljs.core.truth_(and__3753__auto____$3)){
var and__3753__auto____$4 = (function (){var G__14894 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14894) : p2.call(null,G__14894));
})();
if(cljs.core.truth_(and__3753__auto____$4)){
var G__14895 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14895) : p3.call(null,G__14895));
} else {
return and__3753__auto____$4;
}
} else {
return and__3753__auto____$3;
}
} else {
return and__3753__auto____$2;
}
} else {
return and__3753__auto____$1;
}
} else {
return and__3753__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3753__auto__ = (function (){var G__14897 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14897) : p1.call(null,G__14897));
})();
if(cljs.core.truth_(and__3753__auto__)){
var and__3753__auto____$1 = (function (){var G__14899 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14899) : p2.call(null,G__14899));
})();
if(cljs.core.truth_(and__3753__auto____$1)){
var and__3753__auto____$2 = (function (){var G__14901 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14901) : p3.call(null,G__14901));
})();
if(cljs.core.truth_(and__3753__auto____$2)){
var and__3753__auto____$3 = (function (){var G__14903 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14903) : p1.call(null,G__14903));
})();
if(cljs.core.truth_(and__3753__auto____$3)){
var and__3753__auto____$4 = (function (){var G__14905 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14905) : p2.call(null,G__14905));
})();
if(cljs.core.truth_(and__3753__auto____$4)){
var and__3753__auto____$5 = (function (){var G__14907 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14907) : p3.call(null,G__14907));
})();
if(cljs.core.truth_(and__3753__auto____$5)){
var and__3753__auto____$6 = (function (){var G__14909 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14909) : p1.call(null,G__14909));
})();
if(cljs.core.truth_(and__3753__auto____$6)){
var and__3753__auto____$7 = (function (){var G__14911 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14911) : p2.call(null,G__14911));
})();
if(cljs.core.truth_(and__3753__auto____$7)){
var G__14912 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14912) : p3.call(null,G__14912));
} else {
return and__3753__auto____$7;
}
} else {
return and__3753__auto____$6;
}
} else {
return and__3753__auto____$5;
}
} else {
return and__3753__auto____$4;
}
} else {
return and__3753__auto____$3;
}
} else {
return and__3753__auto____$2;
}
} else {
return and__3753__auto____$1;
}
} else {
return and__3753__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__14957__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__14558_SHARP_){
var and__3753__auto__ = (function (){var G__14919 = p1__14558_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14919) : p1.call(null,G__14919));
})();
if(cljs.core.truth_(and__3753__auto__)){
var and__3753__auto____$1 = (function (){var G__14921 = p1__14558_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14921) : p2.call(null,G__14921));
})();
if(cljs.core.truth_(and__3753__auto____$1)){
var G__14922 = p1__14558_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14922) : p3.call(null,G__14922));
} else {
return and__3753__auto____$1;
}
} else {
return and__3753__auto__;
}
}),args)));
};
var G__14957 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14958__i = 0, G__14958__a = new Array(arguments.length -  3);
while (G__14958__i < G__14958__a.length) {G__14958__a[G__14958__i] = arguments[G__14958__i + 3]; ++G__14958__i;}
  args = new cljs.core.IndexedSeq(G__14958__a,0);
} 
return G__14957__delegate.call(this,x,y,z,args);};
G__14957.cljs$lang$maxFixedArity = 3;
G__14957.cljs$lang$applyTo = (function (arglist__14959){
var x = cljs.core.first(arglist__14959);
arglist__14959 = cljs.core.next(arglist__14959);
var y = cljs.core.first(arglist__14959);
arglist__14959 = cljs.core.next(arglist__14959);
var z = cljs.core.first(arglist__14959);
var args = cljs.core.rest(arglist__14959);
return G__14957__delegate(x,y,z,args);
});
G__14957.cljs$core$IFn$_invoke$arity$variadic = G__14957__delegate;
return G__14957;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__14960 = null;
if (arguments.length > 3) {
var G__14961__i = 0, G__14961__a = new Array(arguments.length -  3);
while (G__14961__i < G__14961__a.length) {G__14961__a[G__14961__i] = arguments[G__14961__i + 3]; ++G__14961__i;}
G__14960 = new cljs.core.IndexedSeq(G__14961__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14960);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__14962__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14559_SHARP_){
var G__14938 = x;
return (p1__14559_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14559_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14938) : p1__14559_SHARP_.call(null,G__14938));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14560_SHARP_){
var and__3753__auto__ = (function (){var G__14940 = x;
return (p1__14560_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14560_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14940) : p1__14560_SHARP_.call(null,G__14940));
})();
if(cljs.core.truth_(and__3753__auto__)){
var G__14941 = y;
return (p1__14560_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14560_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14941) : p1__14560_SHARP_.call(null,G__14941));
} else {
return and__3753__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14561_SHARP_){
var and__3753__auto__ = (function (){var G__14943 = x;
return (p1__14561_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14561_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14943) : p1__14561_SHARP_.call(null,G__14943));
})();
if(cljs.core.truth_(and__3753__auto__)){
var and__3753__auto____$1 = (function (){var G__14945 = y;
return (p1__14561_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14561_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14945) : p1__14561_SHARP_.call(null,G__14945));
})();
if(cljs.core.truth_(and__3753__auto____$1)){
var G__14946 = z;
return (p1__14561_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14561_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14946) : p1__14561_SHARP_.call(null,G__14946));
} else {
return and__3753__auto____$1;
}
} else {
return and__3753__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__14963__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14562_SHARP_){
return cljs.core.every_QMARK_(p1__14562_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__14963 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14964__i = 0, G__14964__a = new Array(arguments.length -  3);
while (G__14964__i < G__14964__a.length) {G__14964__a[G__14964__i] = arguments[G__14964__i + 3]; ++G__14964__i;}
  args = new cljs.core.IndexedSeq(G__14964__a,0);
} 
return G__14963__delegate.call(this,x,y,z,args);};
G__14963.cljs$lang$maxFixedArity = 3;
G__14963.cljs$lang$applyTo = (function (arglist__14965){
var x = cljs.core.first(arglist__14965);
arglist__14965 = cljs.core.next(arglist__14965);
var y = cljs.core.first(arglist__14965);
arglist__14965 = cljs.core.next(arglist__14965);
var z = cljs.core.first(arglist__14965);
var args = cljs.core.rest(arglist__14965);
return G__14963__delegate(x,y,z,args);
});
G__14963.cljs$core$IFn$_invoke$arity$variadic = G__14963__delegate;
return G__14963;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__14966 = null;
if (arguments.length > 3) {
var G__14967__i = 0, G__14967__a = new Array(arguments.length -  3);
while (G__14967__i < G__14967__a.length) {G__14967__a[G__14967__i] = arguments[G__14967__i + 3]; ++G__14967__i;}
G__14966 = new cljs.core.IndexedSeq(G__14967__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14966);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__14962 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14968__i = 0, G__14968__a = new Array(arguments.length -  3);
while (G__14968__i < G__14968__a.length) {G__14968__a[G__14968__i] = arguments[G__14968__i + 3]; ++G__14968__i;}
  ps = new cljs.core.IndexedSeq(G__14968__a,0);
} 
return G__14962__delegate.call(this,p1,p2,p3,ps);};
G__14962.cljs$lang$maxFixedArity = 3;
G__14962.cljs$lang$applyTo = (function (arglist__14969){
var p1 = cljs.core.first(arglist__14969);
arglist__14969 = cljs.core.next(arglist__14969);
var p2 = cljs.core.first(arglist__14969);
arglist__14969 = cljs.core.next(arglist__14969);
var p3 = cljs.core.first(arglist__14969);
var ps = cljs.core.rest(arglist__14969);
return G__14962__delegate(p1,p2,p3,ps);
});
G__14962.cljs$core$IFn$_invoke$arity$variadic = G__14962__delegate;
return G__14962;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__14970 = null;
if (arguments.length > 3) {
var G__14971__i = 0, G__14971__a = new Array(arguments.length -  3);
while (G__14971__i < G__14971__a.length) {G__14971__a[G__14971__i] = arguments[G__14971__i + 3]; ++G__14971__i;}
G__14970 = new cljs.core.IndexedSeq(G__14971__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14970);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__15177 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15177) : p.call(null,G__15177));
});
var sp1__2 = (function (x,y){
var or__3765__auto__ = (function (){var G__15179 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15179) : p.call(null,G__15179));
})();
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
var G__15180 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15180) : p.call(null,G__15180));
}
});
var sp1__3 = (function (x,y,z){
var or__3765__auto__ = (function (){var G__15182 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15182) : p.call(null,G__15182));
})();
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (function (){var G__15184 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15184) : p.call(null,G__15184));
})();
if(cljs.core.truth_(or__3765__auto____$1)){
return or__3765__auto____$1;
} else {
var G__15185 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15185) : p.call(null,G__15185));
}
}
});
var sp1__4 = (function() { 
var G__15346__delegate = function (x,y,z,args){
var or__3765__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__15346 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15347__i = 0, G__15347__a = new Array(arguments.length -  3);
while (G__15347__i < G__15347__a.length) {G__15347__a[G__15347__i] = arguments[G__15347__i + 3]; ++G__15347__i;}
  args = new cljs.core.IndexedSeq(G__15347__a,0);
} 
return G__15346__delegate.call(this,x,y,z,args);};
G__15346.cljs$lang$maxFixedArity = 3;
G__15346.cljs$lang$applyTo = (function (arglist__15348){
var x = cljs.core.first(arglist__15348);
arglist__15348 = cljs.core.next(arglist__15348);
var y = cljs.core.first(arglist__15348);
arglist__15348 = cljs.core.next(arglist__15348);
var z = cljs.core.first(arglist__15348);
var args = cljs.core.rest(arglist__15348);
return G__15346__delegate(x,y,z,args);
});
G__15346.cljs$core$IFn$_invoke$arity$variadic = G__15346__delegate;
return G__15346;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__15349 = null;
if (arguments.length > 3) {
var G__15350__i = 0, G__15350__a = new Array(arguments.length -  3);
while (G__15350__i < G__15350__a.length) {G__15350__a[G__15350__i] = arguments[G__15350__i + 3]; ++G__15350__i;}
G__15349 = new cljs.core.IndexedSeq(G__15350__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15349);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3765__auto__ = (function (){var G__15217 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15217) : p1.call(null,G__15217));
})();
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
var G__15218 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15218) : p2.call(null,G__15218));
}
});
var sp2__2 = (function (x,y){
var or__3765__auto__ = (function (){var G__15220 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15220) : p1.call(null,G__15220));
})();
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (function (){var G__15222 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15222) : p1.call(null,G__15222));
})();
if(cljs.core.truth_(or__3765__auto____$1)){
return or__3765__auto____$1;
} else {
var or__3765__auto____$2 = (function (){var G__15224 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15224) : p2.call(null,G__15224));
})();
if(cljs.core.truth_(or__3765__auto____$2)){
return or__3765__auto____$2;
} else {
var G__15225 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15225) : p2.call(null,G__15225));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3765__auto__ = (function (){var G__15227 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15227) : p1.call(null,G__15227));
})();
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (function (){var G__15229 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15229) : p1.call(null,G__15229));
})();
if(cljs.core.truth_(or__3765__auto____$1)){
return or__3765__auto____$1;
} else {
var or__3765__auto____$2 = (function (){var G__15231 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15231) : p1.call(null,G__15231));
})();
if(cljs.core.truth_(or__3765__auto____$2)){
return or__3765__auto____$2;
} else {
var or__3765__auto____$3 = (function (){var G__15233 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15233) : p2.call(null,G__15233));
})();
if(cljs.core.truth_(or__3765__auto____$3)){
return or__3765__auto____$3;
} else {
var or__3765__auto____$4 = (function (){var G__15235 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15235) : p2.call(null,G__15235));
})();
if(cljs.core.truth_(or__3765__auto____$4)){
return or__3765__auto____$4;
} else {
var G__15236 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15236) : p2.call(null,G__15236));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__15351__delegate = function (x,y,z,args){
var or__3765__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return cljs.core.some(((function (or__3765__auto__){
return (function (p1__14972_SHARP_){
var or__3765__auto____$1 = (function (){var G__15238 = p1__14972_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15238) : p1.call(null,G__15238));
})();
if(cljs.core.truth_(or__3765__auto____$1)){
return or__3765__auto____$1;
} else {
var G__15239 = p1__14972_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15239) : p2.call(null,G__15239));
}
});})(or__3765__auto__))
,args);
}
};
var G__15351 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15352__i = 0, G__15352__a = new Array(arguments.length -  3);
while (G__15352__i < G__15352__a.length) {G__15352__a[G__15352__i] = arguments[G__15352__i + 3]; ++G__15352__i;}
  args = new cljs.core.IndexedSeq(G__15352__a,0);
} 
return G__15351__delegate.call(this,x,y,z,args);};
G__15351.cljs$lang$maxFixedArity = 3;
G__15351.cljs$lang$applyTo = (function (arglist__15353){
var x = cljs.core.first(arglist__15353);
arglist__15353 = cljs.core.next(arglist__15353);
var y = cljs.core.first(arglist__15353);
arglist__15353 = cljs.core.next(arglist__15353);
var z = cljs.core.first(arglist__15353);
var args = cljs.core.rest(arglist__15353);
return G__15351__delegate(x,y,z,args);
});
G__15351.cljs$core$IFn$_invoke$arity$variadic = G__15351__delegate;
return G__15351;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__15354 = null;
if (arguments.length > 3) {
var G__15355__i = 0, G__15355__a = new Array(arguments.length -  3);
while (G__15355__i < G__15355__a.length) {G__15355__a[G__15355__i] = arguments[G__15355__i + 3]; ++G__15355__i;}
G__15354 = new cljs.core.IndexedSeq(G__15355__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3765__auto__ = (function (){var G__15285 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15285) : p1.call(null,G__15285));
})();
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (function (){var G__15287 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15287) : p2.call(null,G__15287));
})();
if(cljs.core.truth_(or__3765__auto____$1)){
return or__3765__auto____$1;
} else {
var G__15288 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15288) : p3.call(null,G__15288));
}
}
});
var sp3__2 = (function (x,y){
var or__3765__auto__ = (function (){var G__15290 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15290) : p1.call(null,G__15290));
})();
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (function (){var G__15292 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15292) : p2.call(null,G__15292));
})();
if(cljs.core.truth_(or__3765__auto____$1)){
return or__3765__auto____$1;
} else {
var or__3765__auto____$2 = (function (){var G__15294 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15294) : p3.call(null,G__15294));
})();
if(cljs.core.truth_(or__3765__auto____$2)){
return or__3765__auto____$2;
} else {
var or__3765__auto____$3 = (function (){var G__15296 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15296) : p1.call(null,G__15296));
})();
if(cljs.core.truth_(or__3765__auto____$3)){
return or__3765__auto____$3;
} else {
var or__3765__auto____$4 = (function (){var G__15298 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15298) : p2.call(null,G__15298));
})();
if(cljs.core.truth_(or__3765__auto____$4)){
return or__3765__auto____$4;
} else {
var G__15299 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15299) : p3.call(null,G__15299));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3765__auto__ = (function (){var G__15301 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15301) : p1.call(null,G__15301));
})();
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (function (){var G__15303 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15303) : p2.call(null,G__15303));
})();
if(cljs.core.truth_(or__3765__auto____$1)){
return or__3765__auto____$1;
} else {
var or__3765__auto____$2 = (function (){var G__15305 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15305) : p3.call(null,G__15305));
})();
if(cljs.core.truth_(or__3765__auto____$2)){
return or__3765__auto____$2;
} else {
var or__3765__auto____$3 = (function (){var G__15307 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15307) : p1.call(null,G__15307));
})();
if(cljs.core.truth_(or__3765__auto____$3)){
return or__3765__auto____$3;
} else {
var or__3765__auto____$4 = (function (){var G__15309 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15309) : p2.call(null,G__15309));
})();
if(cljs.core.truth_(or__3765__auto____$4)){
return or__3765__auto____$4;
} else {
var or__3765__auto____$5 = (function (){var G__15311 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15311) : p3.call(null,G__15311));
})();
if(cljs.core.truth_(or__3765__auto____$5)){
return or__3765__auto____$5;
} else {
var or__3765__auto____$6 = (function (){var G__15313 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15313) : p1.call(null,G__15313));
})();
if(cljs.core.truth_(or__3765__auto____$6)){
return or__3765__auto____$6;
} else {
var or__3765__auto____$7 = (function (){var G__15315 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15315) : p2.call(null,G__15315));
})();
if(cljs.core.truth_(or__3765__auto____$7)){
return or__3765__auto____$7;
} else {
var G__15316 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15316) : p3.call(null,G__15316));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__15356__delegate = function (x,y,z,args){
var or__3765__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return cljs.core.some(((function (or__3765__auto__){
return (function (p1__14973_SHARP_){
var or__3765__auto____$1 = (function (){var G__15318 = p1__14973_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15318) : p1.call(null,G__15318));
})();
if(cljs.core.truth_(or__3765__auto____$1)){
return or__3765__auto____$1;
} else {
var or__3765__auto____$2 = (function (){var G__15320 = p1__14973_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15320) : p2.call(null,G__15320));
})();
if(cljs.core.truth_(or__3765__auto____$2)){
return or__3765__auto____$2;
} else {
var G__15321 = p1__14973_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15321) : p3.call(null,G__15321));
}
}
});})(or__3765__auto__))
,args);
}
};
var G__15356 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15357__i = 0, G__15357__a = new Array(arguments.length -  3);
while (G__15357__i < G__15357__a.length) {G__15357__a[G__15357__i] = arguments[G__15357__i + 3]; ++G__15357__i;}
  args = new cljs.core.IndexedSeq(G__15357__a,0);
} 
return G__15356__delegate.call(this,x,y,z,args);};
G__15356.cljs$lang$maxFixedArity = 3;
G__15356.cljs$lang$applyTo = (function (arglist__15358){
var x = cljs.core.first(arglist__15358);
arglist__15358 = cljs.core.next(arglist__15358);
var y = cljs.core.first(arglist__15358);
arglist__15358 = cljs.core.next(arglist__15358);
var z = cljs.core.first(arglist__15358);
var args = cljs.core.rest(arglist__15358);
return G__15356__delegate(x,y,z,args);
});
G__15356.cljs$core$IFn$_invoke$arity$variadic = G__15356__delegate;
return G__15356;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__15359 = null;
if (arguments.length > 3) {
var G__15360__i = 0, G__15360__a = new Array(arguments.length -  3);
while (G__15360__i < G__15360__a.length) {G__15360__a[G__15360__i] = arguments[G__15360__i + 3]; ++G__15360__i;}
G__15359 = new cljs.core.IndexedSeq(G__15360__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15359);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__15361__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__14974_SHARP_){
var G__15337 = x;
return (p1__14974_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14974_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15337) : p1__14974_SHARP_.call(null,G__15337));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__14975_SHARP_){
var or__3765__auto__ = (function (){var G__15339 = x;
return (p1__14975_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14975_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15339) : p1__14975_SHARP_.call(null,G__15339));
})();
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
var G__15340 = y;
return (p1__14975_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14975_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15340) : p1__14975_SHARP_.call(null,G__15340));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__14976_SHARP_){
var or__3765__auto__ = (function (){var G__15342 = x;
return (p1__14976_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14976_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15342) : p1__14976_SHARP_.call(null,G__15342));
})();
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (function (){var G__15344 = y;
return (p1__14976_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14976_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15344) : p1__14976_SHARP_.call(null,G__15344));
})();
if(cljs.core.truth_(or__3765__auto____$1)){
return or__3765__auto____$1;
} else {
var G__15345 = z;
return (p1__14976_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14976_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15345) : p1__14976_SHARP_.call(null,G__15345));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__15362__delegate = function (x,y,z,args){
var or__3765__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return cljs.core.some(((function (or__3765__auto__,ps__$1){
return (function (p1__14977_SHARP_){
return cljs.core.some(p1__14977_SHARP_,args);
});})(or__3765__auto__,ps__$1))
,ps__$1);
}
};
var G__15362 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15363__i = 0, G__15363__a = new Array(arguments.length -  3);
while (G__15363__i < G__15363__a.length) {G__15363__a[G__15363__i] = arguments[G__15363__i + 3]; ++G__15363__i;}
  args = new cljs.core.IndexedSeq(G__15363__a,0);
} 
return G__15362__delegate.call(this,x,y,z,args);};
G__15362.cljs$lang$maxFixedArity = 3;
G__15362.cljs$lang$applyTo = (function (arglist__15364){
var x = cljs.core.first(arglist__15364);
arglist__15364 = cljs.core.next(arglist__15364);
var y = cljs.core.first(arglist__15364);
arglist__15364 = cljs.core.next(arglist__15364);
var z = cljs.core.first(arglist__15364);
var args = cljs.core.rest(arglist__15364);
return G__15362__delegate(x,y,z,args);
});
G__15362.cljs$core$IFn$_invoke$arity$variadic = G__15362__delegate;
return G__15362;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__15365 = null;
if (arguments.length > 3) {
var G__15366__i = 0, G__15366__a = new Array(arguments.length -  3);
while (G__15366__i < G__15366__a.length) {G__15366__a[G__15366__i] = arguments[G__15366__i + 3]; ++G__15366__i;}
G__15365 = new cljs.core.IndexedSeq(G__15366__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15365);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__15361 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__15367__i = 0, G__15367__a = new Array(arguments.length -  3);
while (G__15367__i < G__15367__a.length) {G__15367__a[G__15367__i] = arguments[G__15367__i + 3]; ++G__15367__i;}
  ps = new cljs.core.IndexedSeq(G__15367__a,0);
} 
return G__15361__delegate.call(this,p1,p2,p3,ps);};
G__15361.cljs$lang$maxFixedArity = 3;
G__15361.cljs$lang$applyTo = (function (arglist__15368){
var p1 = cljs.core.first(arglist__15368);
arglist__15368 = cljs.core.next(arglist__15368);
var p2 = cljs.core.first(arglist__15368);
arglist__15368 = cljs.core.next(arglist__15368);
var p3 = cljs.core.first(arglist__15368);
var ps = cljs.core.rest(arglist__15368);
return G__15361__delegate(p1,p2,p3,ps);
});
G__15361.cljs$core$IFn$_invoke$arity$variadic = G__15361__delegate;
return G__15361;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__15369 = null;
if (arguments.length > 3) {
var G__15370__i = 0, G__15370__a = new Array(arguments.length -  3);
while (G__15370__i < G__15370__a.length) {G__15370__a[G__15370__i] = arguments[G__15370__i + 3]; ++G__15370__i;}
G__15369 = new cljs.core.IndexedSeq(G__15370__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__15369);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__15425 = null;
var G__15425__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15425__1 = (function (result){
var G__15411 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15411) : rf.call(null,G__15411));
});
var G__15425__2 = (function (result,input){
var G__15412 = result;
var G__15413 = (function (){var G__15414 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15414) : f.call(null,G__15414));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15412,G__15413) : rf.call(null,G__15412,G__15413));
});
var G__15425__3 = (function() { 
var G__15426__delegate = function (result,input,inputs){
var G__15415 = result;
var G__15416 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15415,G__15416) : rf.call(null,G__15415,G__15416));
};
var G__15426 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__15427__i = 0, G__15427__a = new Array(arguments.length -  2);
while (G__15427__i < G__15427__a.length) {G__15427__a[G__15427__i] = arguments[G__15427__i + 2]; ++G__15427__i;}
  inputs = new cljs.core.IndexedSeq(G__15427__a,0);
} 
return G__15426__delegate.call(this,result,input,inputs);};
G__15426.cljs$lang$maxFixedArity = 2;
G__15426.cljs$lang$applyTo = (function (arglist__15428){
var result = cljs.core.first(arglist__15428);
arglist__15428 = cljs.core.next(arglist__15428);
var input = cljs.core.first(arglist__15428);
var inputs = cljs.core.rest(arglist__15428);
return G__15426__delegate(result,input,inputs);
});
G__15426.cljs$core$IFn$_invoke$arity$variadic = G__15426__delegate;
return G__15426;
})()
;
G__15425 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__15425__0.call(this);
case 1:
return G__15425__1.call(this,result);
case 2:
return G__15425__2.call(this,result,input);
default:
var G__15429 = null;
if (arguments.length > 2) {
var G__15430__i = 0, G__15430__a = new Array(arguments.length -  2);
while (G__15430__i < G__15430__a.length) {G__15430__a[G__15430__i] = arguments[G__15430__i + 2]; ++G__15430__i;}
G__15429 = new cljs.core.IndexedSeq(G__15430__a,0);
}
return G__15425__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__15429);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15425.cljs$lang$maxFixedArity = 2;
G__15425.cljs$lang$applyTo = G__15425__3.cljs$lang$applyTo;
G__15425.cljs$core$IFn$_invoke$arity$0 = G__15425__0;
G__15425.cljs$core$IFn$_invoke$arity$1 = G__15425__1;
G__15425.cljs$core$IFn$_invoke$arity$2 = G__15425__2;
G__15425.cljs$core$IFn$_invoke$arity$variadic = G__15425__3.cljs$core$IFn$_invoke$arity$variadic;
return G__15425;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4652__auto___15431 = size;
var i_15432 = (0);
while(true){
if((i_15432 < n__4652__auto___15431)){
cljs.core.chunk_append(b,(function (){var G__15417 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15432);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15417) : f.call(null,G__15417));
})());

var G__15433 = (i_15432 + (1));
i_15432 = G__15433;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__15418 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15418) : f.call(null,G__15418));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__15419 = cljs.core.first(s1);
var G__15420 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15419,G__15420) : f.call(null,G__15419,G__15420));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__15421 = cljs.core.first(s1);
var G__15422 = cljs.core.first(s2);
var G__15423 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15421,G__15422,G__15423) : f.call(null,G__15421,G__15422,G__15423));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__15434__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__15371_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__15371_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__15434 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__15435__i = 0, G__15435__a = new Array(arguments.length -  4);
while (G__15435__i < G__15435__a.length) {G__15435__a[G__15435__i] = arguments[G__15435__i + 4]; ++G__15435__i;}
  colls = new cljs.core.IndexedSeq(G__15435__a,0);
} 
return G__15434__delegate.call(this,f,c1,c2,c3,colls);};
G__15434.cljs$lang$maxFixedArity = 4;
G__15434.cljs$lang$applyTo = (function (arglist__15436){
var f = cljs.core.first(arglist__15436);
arglist__15436 = cljs.core.next(arglist__15436);
var c1 = cljs.core.first(arglist__15436);
arglist__15436 = cljs.core.next(arglist__15436);
var c2 = cljs.core.first(arglist__15436);
arglist__15436 = cljs.core.next(arglist__15436);
var c3 = cljs.core.first(arglist__15436);
var colls = cljs.core.rest(arglist__15436);
return G__15434__delegate(f,c1,c2,c3,colls);
});
G__15434.cljs$core$IFn$_invoke$arity$variadic = G__15434__delegate;
return G__15434;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__15437 = null;
if (arguments.length > 4) {
var G__15438__i = 0, G__15438__a = new Array(arguments.length -  4);
while (G__15438__i < G__15438__a.length) {G__15438__a[G__15438__i] = arguments[G__15438__i + 4]; ++G__15438__i;}
G__15437 = new cljs.core.IndexedSeq(G__15438__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__15437);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__15447 = null;
var G__15447__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15447__1 = (function (result){
var G__15444 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15444) : rf.call(null,G__15444));
});
var G__15447__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__15445 = result;
var G__15446 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15445,G__15446) : rf.call(null,G__15445,G__15446));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__15447 = function(result,input){
switch(arguments.length){
case 0:
return G__15447__0.call(this);
case 1:
return G__15447__1.call(this,result);
case 2:
return G__15447__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15447.cljs$core$IFn$_invoke$arity$0 = G__15447__0;
G__15447.cljs$core$IFn$_invoke$arity$1 = G__15447__1;
G__15447.cljs$core$IFn$_invoke$arity$2 = G__15447__2;
return G__15447;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__15454 = null;
var G__15454__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15454__1 = (function (result){
var G__15451 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15451) : rf.call(null,G__15451));
});
var G__15454__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__15452 = result;
var G__15453 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15452,G__15453) : rf.call(null,G__15452,G__15453));
}
});
G__15454 = function(result,input){
switch(arguments.length){
case 0:
return G__15454__0.call(this);
case 1:
return G__15454__1.call(this,result);
case 2:
return G__15454__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15454.cljs$core$IFn$_invoke$arity$0 = G__15454__0;
G__15454.cljs$core$IFn$_invoke$arity$1 = G__15454__1;
G__15454.cljs$core$IFn$_invoke$arity$2 = G__15454__2;
return G__15454;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__15455 = (n__$1 - (1));
var G__15456 = cljs.core.rest(s);
n__$1 = G__15455;
coll__$1 = G__15456;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__15459 = cljs.core.next(s);
var G__15460 = cljs.core.next(lead);
s = G__15459;
lead = G__15460;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__15473 = null;
var G__15473__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15473__1 = (function (result){
var G__15467 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15467) : rf.call(null,G__15467));
});
var G__15473__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3753__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3753__auto__)){
var G__15468 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15468) : pred.call(null,G__15468));
} else {
return and__3753__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__15469 = result;
var G__15470 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15469,G__15470) : rf.call(null,G__15469,G__15470));
}
});
G__15473 = function(result,input){
switch(arguments.length){
case 0:
return G__15473__0.call(this);
case 1:
return G__15473__1.call(this,result);
case 2:
return G__15473__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15473.cljs$core$IFn$_invoke$arity$0 = G__15473__0;
G__15473.cljs$core$IFn$_invoke$arity$1 = G__15473__1;
G__15473.cljs$core$IFn$_invoke$arity$2 = G__15473__2;
return G__15473;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3753__auto__ = s;
if(and__3753__auto__){
var G__15472 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__15472) : pred__$1.call(null,G__15472));
} else {
return and__3753__auto__;
}
})())){
var G__15474 = pred__$1;
var G__15475 = cljs.core.rest(s);
pred__$1 = G__15474;
coll__$1 = G__15475;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__15484 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15484) : f.call(null,G__15484));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__15487__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__15487 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__15488__i = 0, G__15488__a = new Array(arguments.length -  2);
while (G__15488__i < G__15488__a.length) {G__15488__a[G__15488__i] = arguments[G__15488__i + 2]; ++G__15488__i;}
  colls = new cljs.core.IndexedSeq(G__15488__a,0);
} 
return G__15487__delegate.call(this,c1,c2,colls);};
G__15487.cljs$lang$maxFixedArity = 2;
G__15487.cljs$lang$applyTo = (function (arglist__15489){
var c1 = cljs.core.first(arglist__15489);
arglist__15489 = cljs.core.next(arglist__15489);
var c2 = cljs.core.first(arglist__15489);
var colls = cljs.core.rest(arglist__15489);
return G__15487__delegate(c1,c2,colls);
});
G__15487.cljs$core$IFn$_invoke$arity$variadic = G__15487__delegate;
return G__15487;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__15490 = null;
if (arguments.length > 2) {
var G__15491__i = 0, G__15491__a = new Array(arguments.length -  2);
while (G__15491__i < G__15491__a.length) {G__15491__a[G__15491__i] = arguments[G__15491__i + 2]; ++G__15491__i;}
G__15490 = new cljs.core.IndexedSeq(G__15491__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__15490);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__15506 = null;
var G__15506__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15506__1 = (function (result){
var G__15499 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15499) : rf.call(null,G__15499));
});
var G__15506__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__15500 = result;
var G__15501 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15500,G__15501) : rf.call(null,G__15500,G__15501));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__15502 = sepr;
var G__15503 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15502,G__15503) : rf.call(null,G__15502,G__15503));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__15504 = result;
var G__15505 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15504,G__15505) : rf.call(null,G__15504,G__15505));
}
});
G__15506 = function(result,input){
switch(arguments.length){
case 0:
return G__15506__0.call(this);
case 1:
return G__15506__1.call(this,result);
case 2:
return G__15506__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15506.cljs$core$IFn$_invoke$arity$0 = G__15506__0;
G__15506.cljs$core$IFn$_invoke$arity$1 = G__15506__1;
G__15506.cljs$core$IFn$_invoke$arity$2 = G__15506__2;
return G__15506;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4421__auto__ = cljs.core.seq(coll);
if(temp__4421__auto__){
var coll__$1 = temp__4421__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__15515__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__15515 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__15516__i = 0, G__15516__a = new Array(arguments.length -  1);
while (G__15516__i < G__15516__a.length) {G__15516__a[G__15516__i] = arguments[G__15516__i + 1]; ++G__15516__i;}
  colls = new cljs.core.IndexedSeq(G__15516__a,0);
} 
return G__15515__delegate.call(this,f,colls);};
G__15515.cljs$lang$maxFixedArity = 1;
G__15515.cljs$lang$applyTo = (function (arglist__15517){
var f = cljs.core.first(arglist__15517);
var colls = cljs.core.rest(arglist__15517);
return G__15515__delegate(f,colls);
});
G__15515.cljs$core$IFn$_invoke$arity$variadic = G__15515__delegate;
return G__15515;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__15518 = null;
if (arguments.length > 1) {
var G__15519__i = 0, G__15519__a = new Array(arguments.length -  1);
while (G__15519__i < G__15519__a.length) {G__15519__a[G__15519__i] = arguments[G__15519__i + 1]; ++G__15519__i;}
G__15518 = new cljs.core.IndexedSeq(G__15519__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__15518);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__15538 = null;
var G__15538__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15538__1 = (function (result){
var G__15532 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15532) : rf.call(null,G__15532));
});
var G__15538__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__15533 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15533) : pred.call(null,G__15533));
})())){
var G__15534 = result;
var G__15535 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15534,G__15535) : rf.call(null,G__15534,G__15535));
} else {
return result;
}
});
G__15538 = function(result,input){
switch(arguments.length){
case 0:
return G__15538__0.call(this);
case 1:
return G__15538__1.call(this,result);
case 2:
return G__15538__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15538.cljs$core$IFn$_invoke$arity$0 = G__15538__0;
G__15538.cljs$core$IFn$_invoke$arity$1 = G__15538__1;
G__15538.cljs$core$IFn$_invoke$arity$2 = G__15538__2;
return G__15538;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4652__auto___15539 = size;
var i_15540 = (0);
while(true){
if((i_15540 < n__4652__auto___15539)){
if(cljs.core.truth_((function (){var G__15536 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15540);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15536) : pred.call(null,G__15536));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15540));
} else {
}

var G__15541 = (i_15540 + (1));
i_15540 = G__15541;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__15537 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15537) : pred.call(null,G__15537));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__15548 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__15548) : branch_QMARK_.call(null,G__15548));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__15549 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__15549) : children.call(null,G__15549));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__15550_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__15550_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__15553 = to;
if(G__15553){
var bit__4439__auto__ = (G__15553.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4439__auto__) || (G__15553.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__15554 = to;
if(G__15554){
var bit__4439__auto__ = (G__15554.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4439__auto__) || (G__15554.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__15556 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15556) : f.call(null,G__15556));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__15557__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__15557 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__15558__i = 0, G__15558__a = new Array(arguments.length -  4);
while (G__15558__i < G__15558__a.length) {G__15558__a[G__15558__i] = arguments[G__15558__i + 4]; ++G__15558__i;}
  colls = new cljs.core.IndexedSeq(G__15558__a,0);
} 
return G__15557__delegate.call(this,f,c1,c2,c3,colls);};
G__15557.cljs$lang$maxFixedArity = 4;
G__15557.cljs$lang$applyTo = (function (arglist__15559){
var f = cljs.core.first(arglist__15559);
arglist__15559 = cljs.core.next(arglist__15559);
var c1 = cljs.core.first(arglist__15559);
arglist__15559 = cljs.core.next(arglist__15559);
var c2 = cljs.core.first(arglist__15559);
arglist__15559 = cljs.core.next(arglist__15559);
var c3 = cljs.core.first(arglist__15559);
var colls = cljs.core.rest(arglist__15559);
return G__15557__delegate(f,c1,c2,c3,colls);
});
G__15557.cljs$core$IFn$_invoke$arity$variadic = G__15557__delegate;
return G__15557;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__15560 = null;
if (arguments.length > 4) {
var G__15561__i = 0, G__15561__a = new Array(arguments.length -  4);
while (G__15561__i < G__15561__a.length) {G__15561__a[G__15561__i] = arguments[G__15561__i + 4]; ++G__15561__i;}
G__15560 = new cljs.core.IndexedSeq(G__15561__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__15560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__15563 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15563) : pred.call(null,G__15563));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__15578 = m__$1;
if(G__15578){
var bit__4446__auto__ = (G__15578.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4446__auto__) || (G__15578.cljs$core$ILookup$)){
return true;
} else {
if((!G__15578.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__15578);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__15578);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__15579 = sentinel;
var G__15580 = m__$2;
var G__15581 = cljs.core.next(ks__$1);
sentinel = G__15579;
m__$1 = G__15580;
ks__$1 = G__15581;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__15582,v){
var vec__15587 = p__15582;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15587,(0),null);
var ks = cljs.core.nthnext(vec__15587,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__15588,f){
var vec__15626 = p__15588;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15626,(0),null);
var ks = cljs.core.nthnext(vec__15626,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15627 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15627) : f.call(null,G__15627));
})());
}
});
var update_in__4 = (function (m,p__15589,f,a){
var vec__15628 = p__15589;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15628,(0),null);
var ks = cljs.core.nthnext(vec__15628,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15629 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15630 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15629,G__15630) : f.call(null,G__15629,G__15630));
})());
}
});
var update_in__5 = (function (m,p__15590,f,a,b){
var vec__15631 = p__15590;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15631,(0),null);
var ks = cljs.core.nthnext(vec__15631,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15632 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15633 = a;
var G__15634 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15632,G__15633,G__15634) : f.call(null,G__15632,G__15633,G__15634));
})());
}
});
var update_in__6 = (function (m,p__15591,f,a,b,c){
var vec__15635 = p__15591;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15635,(0),null);
var ks = cljs.core.nthnext(vec__15635,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15636 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15637 = a;
var G__15638 = b;
var G__15639 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15636,G__15637,G__15638,G__15639) : f.call(null,G__15636,G__15637,G__15638,G__15639));
})());
}
});
var update_in__7 = (function() { 
var G__15641__delegate = function (m,p__15592,f,a,b,c,args){
var vec__15640 = p__15592;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15640,(0),null);
var ks = cljs.core.nthnext(vec__15640,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__15641 = function (m,p__15592,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__15642__i = 0, G__15642__a = new Array(arguments.length -  6);
while (G__15642__i < G__15642__a.length) {G__15642__a[G__15642__i] = arguments[G__15642__i + 6]; ++G__15642__i;}
  args = new cljs.core.IndexedSeq(G__15642__a,0);
} 
return G__15641__delegate.call(this,m,p__15592,f,a,b,c,args);};
G__15641.cljs$lang$maxFixedArity = 6;
G__15641.cljs$lang$applyTo = (function (arglist__15643){
var m = cljs.core.first(arglist__15643);
arglist__15643 = cljs.core.next(arglist__15643);
var p__15592 = cljs.core.first(arglist__15643);
arglist__15643 = cljs.core.next(arglist__15643);
var f = cljs.core.first(arglist__15643);
arglist__15643 = cljs.core.next(arglist__15643);
var a = cljs.core.first(arglist__15643);
arglist__15643 = cljs.core.next(arglist__15643);
var b = cljs.core.first(arglist__15643);
arglist__15643 = cljs.core.next(arglist__15643);
var c = cljs.core.first(arglist__15643);
var args = cljs.core.rest(arglist__15643);
return G__15641__delegate(m,p__15592,f,a,b,c,args);
});
G__15641.cljs$core$IFn$_invoke$arity$variadic = G__15641__delegate;
return G__15641;
})()
;
update_in = function(m,p__15592,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__15592,f);
case 4:
return update_in__4.call(this,m,p__15592,f,a);
case 5:
return update_in__5.call(this,m,p__15592,f,a,b);
case 6:
return update_in__6.call(this,m,p__15592,f,a,b,c);
default:
var G__15644 = null;
if (arguments.length > 6) {
var G__15645__i = 0, G__15645__a = new Array(arguments.length -  6);
while (G__15645__i < G__15645__a.length) {G__15645__a[G__15645__i] = arguments[G__15645__i + 6]; ++G__15645__i;}
G__15644 = new cljs.core.IndexedSeq(G__15645__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__15592,f,a,b,c, G__15644);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15656 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15656) : f.call(null,G__15656));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15657 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15658 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15657,G__15658) : f.call(null,G__15657,G__15658));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15659 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15660 = x;
var G__15661 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15659,G__15660,G__15661) : f.call(null,G__15659,G__15660,G__15661));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15662 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15663 = x;
var G__15664 = y;
var G__15665 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15662,G__15663,G__15664,G__15665) : f.call(null,G__15662,G__15663,G__15664,G__15665));
})());
});
var update__7 = (function() { 
var G__15666__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__15666 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__15667__i = 0, G__15667__a = new Array(arguments.length -  6);
while (G__15667__i < G__15667__a.length) {G__15667__a[G__15667__i] = arguments[G__15667__i + 6]; ++G__15667__i;}
  more = new cljs.core.IndexedSeq(G__15667__a,0);
} 
return G__15666__delegate.call(this,m,k,f,x,y,z,more);};
G__15666.cljs$lang$maxFixedArity = 6;
G__15666.cljs$lang$applyTo = (function (arglist__15668){
var m = cljs.core.first(arglist__15668);
arglist__15668 = cljs.core.next(arglist__15668);
var k = cljs.core.first(arglist__15668);
arglist__15668 = cljs.core.next(arglist__15668);
var f = cljs.core.first(arglist__15668);
arglist__15668 = cljs.core.next(arglist__15668);
var x = cljs.core.first(arglist__15668);
arglist__15668 = cljs.core.next(arglist__15668);
var y = cljs.core.first(arglist__15668);
arglist__15668 = cljs.core.next(arglist__15668);
var z = cljs.core.first(arglist__15668);
var more = cljs.core.rest(arglist__15668);
return G__15666__delegate(m,k,f,x,y,z,more);
});
G__15666.cljs$core$IFn$_invoke$arity$variadic = G__15666__delegate;
return G__15666;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__15669 = null;
if (arguments.length > 6) {
var G__15670__i = 0, G__15670__a = new Array(arguments.length -  6);
while (G__15670__i < G__15670__a.length) {G__15670__a[G__15670__i] = arguments[G__15670__i + 6]; ++G__15670__i;}
G__15669 = new cljs.core.IndexedSeq(G__15670__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__15669);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__15671 = (ll - (5));
var G__15672 = r;
ll = G__15671;
ret = G__15672;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__15677 = cljs.core.pv_aget(node,(0));
var G__15678 = (level - (5));
node = G__15677;
level = G__15678;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__15679 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__15680 = (level - (5));
node = G__15679;
level = G__15680;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__15690 = init__$2;
var G__15691 = (j + i);
var G__15692 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15690,G__15691,G__15692) : f.call(null,G__15690,G__15691,G__15692));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__15703 = (j + (1));
var G__15704 = init__$3;
j = G__15703;
init__$2 = G__15704;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15693 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15693) : cljs.core.deref.call(null,G__15693));
} else {
var G__15705 = (i + len);
var G__15706 = init__$2;
i = G__15705;
init__$1 = G__15706;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__15694 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__15694) : cljs.core.tv_editable_root.call(null,G__15694));
})(),(function (){var G__15695 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__15695) : cljs.core.tv_editable_tail.call(null,G__15695));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__15696 = init__$2;
var G__15697 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15696,G__15697) : f.call(null,G__15696,G__15697));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__15707 = (j + (1));
var G__15708 = init__$3;
j = G__15707;
init__$2 = G__15708;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15698 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15698) : cljs.core.deref.call(null,G__15698));
} else {
var G__15709 = (i + len);
var G__15710 = init__$2;
i = G__15709;
init__$1 = G__15710;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__15699 = coll__$1;
var G__15700 = cljs.core.first_array_for_longvec(coll__$1);
var G__15701 = (0);
var G__15702 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15699,G__15700,G__15701,G__15702) : cljs.core.chunked_seq.call(null,G__15699,G__15700,G__15701,G__15702));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4652__auto___15711 = len;
var i_15712 = (0);
while(true){
if((i_15712 < n__4652__auto___15711)){
(new_tail[i_15712] = (self__.tail[i_15712]));

var G__15713 = (i_15712 + (1));
i_15712 = G__15713;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__15714 = null;
var G__15714__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__15714__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__15714 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15714__2.call(this,self__,k);
case 3:
return G__15714__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15714.cljs$core$IFn$_invoke$arity$2 = G__15714__2;
G__15714.cljs$core$IFn$_invoke$arity$3 = G__15714__3;
return G__15714;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args15689){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15689)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__15715 = (i + (1));
var G__15716 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__15715;
out = G__15716;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15717__i = 0, G__15717__a = new Array(arguments.length -  0);
while (G__15717__i < G__15717__a.length) {G__15717__a[G__15717__i] = arguments[G__15717__i + 0]; ++G__15717__i;}
  args = new cljs.core.IndexedSeq(G__15717__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__15718){
var args = cljs.core.seq(arglist__15718);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__15719 = self__.vec;
var G__15720 = self__.node;
var G__15721 = self__.i;
var G__15722 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15719,G__15720,G__15721,G__15722) : cljs.core.chunked_seq.call(null,G__15719,G__15720,G__15721,G__15722));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__15723 = self__.vec;
var G__15724 = (self__.i + self__.off);
var G__15725 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15723,G__15724,G__15725) : cljs.core.subvec.call(null,G__15723,G__15724,G__15725));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__15726 = self__.vec;
var G__15727 = (self__.i + self__.off);
var G__15728 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15726,G__15727,G__15728) : cljs.core.subvec.call(null,G__15726,G__15727,G__15728));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__15729 = self__.vec;
var G__15730 = self__.node;
var G__15731 = self__.i;
var G__15732 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15729,G__15730,G__15731,G__15732) : cljs.core.chunked_seq.call(null,G__15729,G__15730,G__15731,G__15732));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__15733 = self__.vec;
var G__15734 = cljs.core.unchecked_array_for(self__.vec,end);
var G__15735 = end;
var G__15736 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15733,G__15734,G__15735,G__15736) : cljs.core.chunked_seq.call(null,G__15733,G__15734,G__15735,G__15736));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__15737 = self__.vec;
var G__15738 = self__.node;
var G__15739 = self__.i;
var G__15740 = self__.off;
var G__15741 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__15737,G__15738,G__15739,G__15740,G__15741) : cljs.core.chunked_seq.call(null,G__15737,G__15738,G__15739,G__15740,G__15741));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__15742 = self__.vec;
var G__15743 = cljs.core.unchecked_array_for(self__.vec,end);
var G__15744 = end;
var G__15745 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15742,G__15743,G__15744,G__15745) : cljs.core.chunked_seq.call(null,G__15742,G__15743,G__15744,G__15745));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__15747 = self__.meta;
var G__15748 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__15749 = self__.start;
var G__15750 = (function (){var x__4082__auto__ = self__.end;
var y__4083__auto__ = (v_pos + (1));
return ((x__4082__auto__ > y__4083__auto__) ? x__4082__auto__ : y__4083__auto__);
})();
var G__15751 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15747,G__15748,G__15749,G__15750,G__15751) : cljs.core.build_subvec.call(null,G__15747,G__15748,G__15749,G__15750,G__15751));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__15752 = self__.meta;
var G__15753 = self__.v;
var G__15754 = self__.start;
var G__15755 = (self__.end - (1));
var G__15756 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15752,G__15753,G__15754,G__15755,G__15756) : cljs.core.build_subvec.call(null,G__15752,G__15753,G__15754,G__15755,G__15756));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__15758 = meta__$1;
var G__15759 = self__.v;
var G__15760 = self__.start;
var G__15761 = self__.end;
var G__15762 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15758,G__15759,G__15760,G__15761,G__15762) : cljs.core.build_subvec.call(null,G__15758,G__15759,G__15760,G__15761,G__15762));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__15763 = self__.meta;
var G__15764 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__15765 = self__.start;
var G__15766 = (self__.end + (1));
var G__15767 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15763,G__15764,G__15765,G__15766,G__15767) : cljs.core.build_subvec.call(null,G__15763,G__15764,G__15765,G__15766,G__15767));
});

cljs.core.Subvec.prototype.call = (function() {
var G__15768 = null;
var G__15768__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__15768__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__15768 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15768__2.call(this,self__,k);
case 3:
return G__15768__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15768.cljs$core$IFn$_invoke$arity$2 = G__15768__2;
G__15768.cljs$core$IFn$_invoke$arity$3 = G__15768__3;
return G__15768;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args15746){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15746)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__15769 = meta;
var G__15770 = v.v;
var G__15771 = (v.start + start);
var G__15772 = (v.start + end);
var G__15773 = __hash;
meta = G__15769;
v = G__15770;
start = G__15771;
end = G__15772;
__hash = G__15773;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj15780 = {};
return obj15780;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__15788 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__15789 = (level - (5));
node = G__15788;
level = G__15789;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition1$ = 88;
this.cljs$lang$protocol_mask$partition0$ = 275;
})
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.call = (function() {
var G__15793 = null;
var G__15793__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15793__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15793 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15793__2.call(this,self__,k);
case 3:
return G__15793__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15793.cljs$core$IFn$_invoke$arity$2 = G__15793__2;
G__15793.cljs$core$IFn$_invoke$arity$3 = G__15793__3;
return G__15793;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args15790){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15790)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4421__auto__ = cljs.core.next(self__.front);
if(temp__4421__auto__){
var f1 = temp__4421__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4421__auto__ = cljs.core.next(self__.front);
if(temp__4421__auto__){
var f1 = temp__4421__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3765__auto__ = self__.front;
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3765__auto__ = self__.rear;
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition0$ = 2097152;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__15794 = (i + incr);
i = G__15794;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__15795 = (i + (1));
var G__15796 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__15795;
out = G__15796;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj15800 = {};
return obj15800;
})();
var l = ks.length;
var i_15801 = (0);
while(true){
if((i_15801 < l)){
var k_15802 = (ks[i_15801]);
(new_obj[k_15802] = (obj[k_15802]));

var G__15803 = (i_15801 + (1));
i_15801 = G__15803;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3753__auto__ = (function (){var G__15807 = k;
return goog.isString(G__15807);
})();
if(cljs.core.truth_(and__3753__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3753__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__15808 = init__$1;
var G__15809 = k;
var G__15810 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15808,G__15809,G__15810) : f.call(null,G__15808,G__15809,G__15810));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15811 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15811) : cljs.core.deref.call(null,G__15811));
} else {
var G__15817 = cljs.core.rest(keys__$1);
var G__15818 = init__$2;
keys__$1 = G__15817;
init__$1 = G__15818;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3753__auto__ = (function (){var G__15813 = k;
return goog.isString(G__15813);
})();
if(cljs.core.truth_(and__3753__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3753__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__15814 = k;
return goog.isString(G__15814);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3753__auto__ = (function (){var G__15816 = k;
return goog.isString(G__15816);
})();
if(cljs.core.truth_(and__3753__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3753__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__15804_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__15804_SHARP_,(self__.strobj[p1__15804_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__15819 = null;
var G__15819__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15819__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15819 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15819__2.call(this,self__,k);
case 3:
return G__15819__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15819.cljs$core$IFn$_invoke$arity$2 = G__15819__2;
G__15819.cljs$core$IFn$_invoke$arity$3 = G__15819__3;
return G__15819;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args15805){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15805)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj15821 = {};
return obj15821;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__15822 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15822,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15822,(1),null);
self__.s = cljs.core.next(self__.s);

return {"value": [k,v], "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"value": [x,x], "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__15823 = (i + (2));
i = G__15823;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__15824 = (i + (2));
i = G__15824;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__15825 = (i + (2));
i = G__15825;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__15826 = (i + (2));
i = G__15826;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__15827 = (i + (2));
i = G__15827;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3765__auto__ = (function (){var G__15831 = k;
return goog.isString(G__15831);
})();
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_15832 = (0);
while(true){
if((i_15832 < l)){
(narr[i_15832] = (arr[i_15832]));

var G__15833 = (i_15832 + (1));
i_15832 = G__15833;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15835 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15835) : cljs.core.keys.call(null,G__15835));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15836 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15836) : cljs.core.vals.call(null,G__15836));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15837 = cljs.core.seq(coll);
var chunk__15838 = null;
var count__15839 = (0);
var i__15840 = (0);
while(true){
if((i__15840 < count__15839)){
var vec__15841 = chunk__15838.cljs$core$IIndexed$_nth$arity$2(null,i__15840);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15841,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15841,(1),null);
var G__15842_15855 = v;
var G__15843_15856 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15842_15855,G__15843_15856) : f.call(null,G__15842_15855,G__15843_15856));

var G__15857 = seq__15837;
var G__15858 = chunk__15838;
var G__15859 = count__15839;
var G__15860 = (i__15840 + (1));
seq__15837 = G__15857;
chunk__15838 = G__15858;
count__15839 = G__15859;
i__15840 = G__15860;
continue;
} else {
var temp__4423__auto__ = cljs.core.seq(seq__15837);
if(temp__4423__auto__){
var seq__15837__$1 = temp__4423__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15837__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__15837__$1);
var G__15861 = cljs.core.chunk_rest(seq__15837__$1);
var G__15862 = c__4552__auto__;
var G__15863 = cljs.core.count(c__4552__auto__);
var G__15864 = (0);
seq__15837 = G__15861;
chunk__15838 = G__15862;
count__15839 = G__15863;
i__15840 = G__15864;
continue;
} else {
var vec__15844 = cljs.core.first(seq__15837__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15844,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15844,(1),null);
var G__15845_15865 = v;
var G__15846_15866 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15845_15865,G__15846_15866) : f.call(null,G__15845_15865,G__15846_15866));

var G__15867 = cljs.core.next(seq__15837__$1);
var G__15868 = null;
var G__15869 = (0);
var G__15870 = (0);
seq__15837 = G__15867;
chunk__15838 = G__15868;
count__15839 = G__15869;
i__15840 = G__15870;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__15847 = init__$1;
var G__15848 = (self__.arr[i]);
var G__15849 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15847,G__15848,G__15849) : f.call(null,G__15847,G__15848,G__15849));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15850 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15850) : cljs.core.deref.call(null,G__15850));
} else {
var G__15871 = (i + (2));
var G__15872 = init__$2;
i = G__15871;
init__$1 = G__15872;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__15851 = other;
if(G__15851){
var bit__4439__auto__ = (G__15851.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4439__auto__) || (G__15851.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__15873 = (i + (2));
i = G__15873;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj15853 = {};
return obj15853;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__15874 = (s + (2));
var G__15875 = d;
s = G__15874;
d = G__15875;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__15876 = (s + (2));
var G__15877 = (d + (2));
s = G__15876;
d = G__15877;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__15854 = cljs.core.aclone(self__.arr);
(G__15854[(idx + (1))] = v);

return G__15854;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15878 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15879 = cljs.core.next(es);
ret = G__15878;
es = G__15879;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__15880 = null;
var G__15880__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15880__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15880 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15880__2.call(this,self__,k);
case 3:
return G__15880__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15880.cljs$core$IFn$_invoke$arity$2 = G__15880__2;
G__15880.cljs$core$IFn$_invoke$arity$3 = G__15880__3;
return G__15880;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args15834){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15834)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__15881 = (i + (2));
var G__15882 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__15881;
ret = G__15882;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition0$ = 258;
this.cljs$lang$protocol_mask$partition1$ = 56;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__15883 = o;
if(G__15883){
var bit__4446__auto__ = (G__15883.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4446__auto__) || (G__15883.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__15883.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15883);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15883);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__15884 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15884) : cljs.core.key.call(null,G__15884));
})(),(function (){var G__15885 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15885) : cljs.core.val.call(null,G__15885));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4421__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4421__auto__)){
var e = temp__4421__auto__;
var G__15891 = cljs.core.next(es);
var G__15892 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__15886 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15886) : cljs.core.key.call(null,G__15886));
})(),(function (){var G__15887 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15887) : cljs.core.val.call(null,G__15887));
})());
es = G__15891;
tcoll__$2 = G__15892;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__15888 = self__.len;
var G__15889 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__15888,G__15889) : cljs.core.array__GT_transient_hash_map.call(null,G__15888,G__15889));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__15890_15893 = self__.arr;
G__15890_15893.pop();

G__15890_15893.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__15894 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__15895 = (i + (2));
out = G__15894;
i = G__15895;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__15898 = cljs.core.aclone(arr);
(G__15898[i] = a);

return G__15898;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__15899 = cljs.core.aclone(arr);
(G__15899[i] = a);

(G__15899[j] = b);

return G__15899;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__15904 = init__$1;
var G__15905 = k;
var G__15906 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15904,G__15905,G__15906) : f.call(null,G__15904,G__15905,G__15906));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15907 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15907) : cljs.core.deref.call(null,G__15907));
} else {
var G__15908 = (i + (2));
var G__15909 = init__$2;
i = G__15908;
init__$1 = G__15909;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15910 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15910) : cljs.core.create_inode_seq.call(null,G__15910));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_15924 = (0);
var j_15925 = (0);
while(true){
if((i_15924 < (32))){
if((((self__.bitmap >>> i_15924) & (1)) === (0))){
var G__15926 = (i_15924 + (1));
var G__15927 = j_15925;
i_15924 = G__15926;
j_15925 = G__15927;
continue;
} else {
(nodes[i_15924] = ((!(((self__.arr[j_15925]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_15925])),(self__.arr[j_15925]),(self__.arr[(j_15925 + (1))]),added_leaf_QMARK_):(self__.arr[(j_15925 + (1))])));

var G__15928 = (i_15924 + (1));
var G__15929 = (j_15925 + (2));
i_15924 = G__15928;
j_15925 = G__15929;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15911 = edit__$1;
var G__15912 = (shift + (5));
var G__15913 = key_or_nil;
var G__15914 = val_or_node;
var G__15915 = hash;
var G__15916 = key;
var G__15917 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__15911,G__15912,G__15913,G__15914,G__15915,G__15916,G__15917) : cljs.core.create_node.call(null,G__15911,G__15912,G__15913,G__15914,G__15915,G__15916,G__15917));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_15930 = (0);
var j_15931 = (0);
while(true){
if((i_15930 < (32))){
if((((self__.bitmap >>> i_15930) & (1)) === (0))){
var G__15932 = (i_15930 + (1));
var G__15933 = j_15931;
i_15930 = G__15932;
j_15931 = G__15933;
continue;
} else {
(nodes[i_15930] = ((!(((self__.arr[j_15931]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_15931])),(self__.arr[j_15931]),(self__.arr[(j_15931 + (1))]),added_leaf_QMARK_):(self__.arr[(j_15931 + (1))])));

var G__15934 = (i_15930 + (1));
var G__15935 = (j_15931 + (2));
i_15930 = G__15934;
j_15931 = G__15935;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15918 = (shift + (5));
var G__15919 = key_or_nil;
var G__15920 = val_or_node;
var G__15921 = hash;
var G__15922 = key;
var G__15923 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__15918,G__15919,G__15920,G__15921,G__15922,G__15923) : cljs.core.create_node.call(null,G__15918,G__15919,G__15920,G__15921,G__15922,G__15923));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__15936 = (i + (1));
var G__15937 = (j + (2));
var G__15938 = (bitmap | ((1) << i));
i = G__15936;
j = G__15937;
bitmap = G__15938;
continue;
} else {
var G__15939 = (i + (1));
var G__15940 = j;
var G__15941 = bitmap;
i = G__15939;
j = G__15940;
bitmap = G__15941;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15942 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__15942) : cljs.core.create_array_node_seq.call(null,G__15942));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15943 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15943) : cljs.core.deref.call(null,G__15943));
} else {
var G__15944 = (i + (1));
var G__15945 = init__$2;
i = G__15944;
init__$1 = G__15945;
continue;
}
} else {
var G__15946 = (i + (1));
var G__15947 = init__$1;
i = G__15946;
init__$1 = G__15947;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__15948 = (i + (2));
i = G__15948;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15949 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15949) : cljs.core.create_inode_seq.call(null,G__15949));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__15950 = self__.nodes;
var G__15951 = (self__.i + (2));
var G__15952 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15950,G__15951,G__15952) : cljs.core.create_inode_seq.call(null,G__15950,G__15951,G__15952));
} else {
var G__15953 = self__.nodes;
var G__15954 = self__.i;
var G__15955 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15953,G__15954,G__15955) : cljs.core.create_inode_seq.call(null,G__15953,G__15954,G__15955));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4421__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4421__auto__)){
var node = temp__4421__auto__;
var temp__4421__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4421__auto____$1)){
var node_seq = temp__4421__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__15959 = (j + (2));
j = G__15959;
continue;
}
} else {
var G__15960 = (j + (2));
j = G__15960;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__15961 = null;
var G__15962 = self__.nodes;
var G__15963 = self__.i;
var G__15964 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__15961,G__15962,G__15963,G__15964) : cljs.core.create_array_node_seq.call(null,G__15961,G__15962,G__15963,G__15964));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4421__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4421__auto__)){
var nj = temp__4421__auto__;
var temp__4421__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4421__auto____$1)){
var ns = temp__4421__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__15969 = (j + (1));
j = G__15969;
continue;
}
} else {
var G__15970 = (j + (1));
j = G__15970;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15972 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15972) : cljs.core.keys.call(null,G__15972));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15973 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15973) : cljs.core.vals.call(null,G__15973));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15974 = cljs.core.seq(coll);
var chunk__15975 = null;
var count__15976 = (0);
var i__15977 = (0);
while(true){
if((i__15977 < count__15976)){
var vec__15978 = chunk__15975.cljs$core$IIndexed$_nth$arity$2(null,i__15977);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15978,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15978,(1),null);
var G__15979_15990 = v;
var G__15980_15991 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15979_15990,G__15980_15991) : f.call(null,G__15979_15990,G__15980_15991));

var G__15992 = seq__15974;
var G__15993 = chunk__15975;
var G__15994 = count__15976;
var G__15995 = (i__15977 + (1));
seq__15974 = G__15992;
chunk__15975 = G__15993;
count__15976 = G__15994;
i__15977 = G__15995;
continue;
} else {
var temp__4423__auto__ = cljs.core.seq(seq__15974);
if(temp__4423__auto__){
var seq__15974__$1 = temp__4423__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15974__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__15974__$1);
var G__15996 = cljs.core.chunk_rest(seq__15974__$1);
var G__15997 = c__4552__auto__;
var G__15998 = cljs.core.count(c__4552__auto__);
var G__15999 = (0);
seq__15974 = G__15996;
chunk__15975 = G__15997;
count__15976 = G__15998;
i__15977 = G__15999;
continue;
} else {
var vec__15981 = cljs.core.first(seq__15974__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15981,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15981,(1),null);
var G__15982_16000 = v;
var G__15983_16001 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15982_16000,G__15983_16001) : f.call(null,G__15982_16000,G__15983_16001));

var G__16002 = cljs.core.next(seq__15974__$1);
var G__16003 = null;
var G__16004 = (0);
var G__16005 = (0);
seq__15974 = G__16002;
chunk__15975 = G__16003;
count__15976 = G__16004;
i__15977 = G__16005;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__15984 = init;
var G__15985 = null;
var G__15986 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15984,G__15985,G__15986) : f.call(null,G__15984,G__15985,G__15986));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15987 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15987) : cljs.core.deref.call(null,G__15987));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj15989 = {};
return obj15989;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__16006 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__16007 = cljs.core.next(es);
ret = G__16006;
es = G__16007;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__16008 = null;
var G__16008__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16008__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16008 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16008__2.call(this,self__,k);
case 3:
return G__16008__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16008.cljs$core$IFn$_invoke$arity$2 = G__16008__2;
G__16008.cljs$core$IFn$_invoke$arity$3 = G__16008__3;
return G__16008;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args15971){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15971)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__16009 = (i + (2));
var G__16010 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__16009;
ret = G__16010;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__16011 = (i + (1));
var G__16012 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__16011;
out = G__16012;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition0$ = 258;
this.cljs$lang$protocol_mask$partition1$ = 56;
})
cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__16013 = o;
if(G__16013){
var bit__4446__auto__ = (G__16013.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4446__auto__) || (G__16013.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__16013.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16013);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16013);
}
})()){
return tcoll.assoc_BANG_((function (){var G__16014 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16014) : cljs.core.key.call(null,G__16014));
})(),(function (){var G__16015 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16015) : cljs.core.val.call(null,G__16015));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4421__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4421__auto__)){
var e = temp__4421__auto__;
var G__16018 = cljs.core.next(es);
var G__16019 = tcoll__$1.assoc_BANG_((function (){var G__16016 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16016) : cljs.core.key.call(null,G__16016));
})(),(function (){var G__16017 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16017) : cljs.core.val.call(null,G__16017));
})());
es = G__16018;
tcoll__$1 = G__16019;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__16020 = ((ascending_QMARK_)?t.left:t.right);
var G__16021 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__16020;
stack__$1 = G__16021;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__16034 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16034) : cljs.core.deref.call(null,G__16034));
} else {
var init__$2 = (function (){var G__16035 = init__$1;
var G__16036 = node.key;
var G__16037 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16035,G__16036,G__16037) : f.call(null,G__16035,G__16036,G__16037));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16038 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16038) : cljs.core.deref.call(null,G__16038));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__16039 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16039) : cljs.core.deref.call(null,G__16039));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__16041 = null;
var G__16041__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16041__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16041 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16041__2.call(this,self__,k);
case 3:
return G__16041__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16041.cljs$core$IFn$_invoke$arity$2 = G__16041__2;
G__16041.cljs$core$IFn$_invoke$arity$3 = G__16041__3;
return G__16041;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args16040){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16040)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__16043 = null;
var G__16043__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16043__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16043 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16043__2.call(this,self__,k);
case 3:
return G__16043__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16043.cljs$core$IFn$_invoke$arity$2 = G__16043__2;
G__16043.cljs$core$IFn$_invoke$arity$3 = G__16043__3;
return G__16043;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args16042){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16042)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__16056 = k;
var G__16057 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16056,G__16057) : comp.call(null,G__16056,G__16057));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__16076 = k;
var G__16077 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16076,G__16077) : comp.call(null,G__16076,G__16077));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__16088 = k;
var G__16089 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16088,G__16089) : comp.call(null,G__16088,G__16089));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16091 = cljs.core.seq(coll);
var chunk__16092 = null;
var count__16093 = (0);
var i__16094 = (0);
while(true){
if((i__16094 < count__16093)){
var vec__16095 = chunk__16092.cljs$core$IIndexed$_nth$arity$2(null,i__16094);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16095,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16095,(1),null);
var G__16096_16108 = v;
var G__16097_16109 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16096_16108,G__16097_16109) : f.call(null,G__16096_16108,G__16097_16109));

var G__16110 = seq__16091;
var G__16111 = chunk__16092;
var G__16112 = count__16093;
var G__16113 = (i__16094 + (1));
seq__16091 = G__16110;
chunk__16092 = G__16111;
count__16093 = G__16112;
i__16094 = G__16113;
continue;
} else {
var temp__4423__auto__ = cljs.core.seq(seq__16091);
if(temp__4423__auto__){
var seq__16091__$1 = temp__4423__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16091__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__16091__$1);
var G__16114 = cljs.core.chunk_rest(seq__16091__$1);
var G__16115 = c__4552__auto__;
var G__16116 = cljs.core.count(c__4552__auto__);
var G__16117 = (0);
seq__16091 = G__16114;
chunk__16092 = G__16115;
count__16093 = G__16116;
i__16094 = G__16117;
continue;
} else {
var vec__16098 = cljs.core.first(seq__16091__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16098,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16098,(1),null);
var G__16099_16118 = v;
var G__16100_16119 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16099_16118,G__16100_16119) : f.call(null,G__16099_16118,G__16100_16119));

var G__16120 = cljs.core.next(seq__16091__$1);
var G__16121 = null;
var G__16122 = (0);
var G__16123 = (0);
seq__16091 = G__16120;
chunk__16092 = G__16121;
count__16093 = G__16122;
i__16094 = G__16123;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16101 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16101) : cljs.core.keys.call(null,G__16101));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16102 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16102) : cljs.core.vals.call(null,G__16102));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__16103 = k;
var G__16104 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16103,G__16104) : self__.comp.call(null,G__16103,G__16104));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__16124 = t.left;
t = G__16124;
continue;
} else {
var G__16125 = t.right;
t = G__16125;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__16126 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__16127 = cljs.core.next(es);
ret = G__16126;
es = G__16127;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__16128 = null;
var G__16128__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16128__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16128 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16128__2.call(this,self__,k);
case 3:
return G__16128__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16128.cljs$core$IFn$_invoke$arity$2 = G__16128__2;
G__16128.cljs$core$IFn$_invoke$arity$3 = G__16128__3;
return G__16128;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args16090){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16090)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__16105 = k;
var G__16106 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16105,G__16106) : self__.comp.call(null,G__16105,G__16106));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__16129 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__16130 = t.left;
stack = G__16129;
t = G__16130;
continue;
} else {
var G__16131 = stack;
var G__16132 = t.right;
stack = G__16131;
t = G__16132;
continue;
}
} else {
if((c > (0))){
var G__16133 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__16134 = t.right;
stack = G__16133;
t = G__16134;
continue;
} else {
var G__16135 = stack;
var G__16136 = t.left;
stack = G__16135;
t = G__16136;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__16107 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16107) : cljs.core.key.call(null,G__16107));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__16137 = cljs.core.nnext(in$);
var G__16138 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16137;
out = G__16138;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16139__i = 0, G__16139__a = new Array(arguments.length -  0);
while (G__16139__i < G__16139__a.length) {G__16139__a[G__16139__i] = arguments[G__16139__i + 0]; ++G__16139__i;}
  keyvals = new cljs.core.IndexedSeq(G__16139__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__16140){
var keyvals = cljs.core.seq(arglist__16140);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16141__i = 0, G__16141__a = new Array(arguments.length -  0);
while (G__16141__i < G__16141__a.length) {G__16141__a[G__16141__i] = arguments[G__16141__i + 0]; ++G__16141__i;}
  keyvals = new cljs.core.IndexedSeq(G__16141__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__16142){
var keyvals = cljs.core.seq(arglist__16142);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj16146 = {};
return obj16146;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__16147 = cljs.core.nnext(kvs);
kvs = G__16147;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16148__i = 0, G__16148__a = new Array(arguments.length -  0);
while (G__16148__i < G__16148__a.length) {G__16148__a[G__16148__i] = arguments[G__16148__i + 0]; ++G__16148__i;}
  keyvals = new cljs.core.IndexedSeq(G__16148__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__16149){
var keyvals = cljs.core.seq(arglist__16149);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__16150 = cljs.core.nnext(in$);
var G__16151 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16150;
out = G__16151;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16152__i = 0, G__16152__a = new Array(arguments.length -  0);
while (G__16152__i < G__16152__a.length) {G__16152__a[G__16152__i] = arguments[G__16152__i + 0]; ++G__16152__i;}
  keyvals = new cljs.core.IndexedSeq(G__16152__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__16153){
var keyvals = cljs.core.seq(arglist__16153);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__16154 = cljs.core.nnext(in$);
var G__16155 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16154;
out = G__16155;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__16156__i = 0, G__16156__a = new Array(arguments.length -  1);
while (G__16156__i < G__16156__a.length) {G__16156__a[G__16156__i] = arguments[G__16156__i + 1]; ++G__16156__i;}
  keyvals = new cljs.core.IndexedSeq(G__16156__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__16157){
var comparator = cljs.core.first(arglist__16157);
var keyvals = cljs.core.rest(arglist__16157);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16158 = self__.mseq;
if(G__16158){
var bit__4446__auto__ = (G__16158.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4446__auto__) || (G__16158.cljs$core$INext$)){
return true;
} else {
if((!G__16158.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16158);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16158);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16159 = self__.mseq;
if(G__16159){
var bit__4446__auto__ = (G__16159.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4446__auto__) || (G__16159.cljs$core$INext$)){
return true;
} else {
if((!G__16159.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16159);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16159);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4423__auto__ = cljs.core.seq(hash_map);
if(temp__4423__auto__){
var mseq = temp__4423__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16160 = self__.mseq;
if(G__16160){
var bit__4446__auto__ = (G__16160.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4446__auto__) || (G__16160.cljs$core$INext$)){
return true;
} else {
if((!G__16160.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16160);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16160);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16161 = self__.mseq;
if(G__16161){
var bit__4446__auto__ = (G__16161.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4446__auto__) || (G__16161.cljs$core$INext$)){
return true;
} else {
if((!G__16161.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16161);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16161);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4423__auto__ = cljs.core.seq(hash_map);
if(temp__4423__auto__){
var mseq = temp__4423__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__16162_SHARP_,p2__16163_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3765__auto__ = p1__16162_SHARP_;
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__16163_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__16164__i = 0, G__16164__a = new Array(arguments.length -  0);
while (G__16164__i < G__16164__a.length) {G__16164__a[G__16164__i] = arguments[G__16164__i + 0]; ++G__16164__i;}
  maps = new cljs.core.IndexedSeq(G__16164__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__16165){
var maps = cljs.core.seq(arglist__16165);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16168 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16169 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16168,G__16169) : f.call(null,G__16168,G__16169));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3765__auto__ = m1;
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__16170__i = 0, G__16170__a = new Array(arguments.length -  1);
while (G__16170__i < G__16170__a.length) {G__16170__a[G__16170__i] = arguments[G__16170__i + 1]; ++G__16170__i;}
  maps = new cljs.core.IndexedSeq(G__16170__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__16171){
var f = cljs.core.first(arglist__16171);
var maps = cljs.core.rest(arglist__16171);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$9);
var G__16172 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$9))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__16173 = cljs.core.next(keys);
ret = G__16172;
keys = G__16173;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16176 = cljs.core.seq(coll);
var chunk__16177 = null;
var count__16178 = (0);
var i__16179 = (0);
while(true){
if((i__16179 < count__16178)){
var vec__16180 = chunk__16177.cljs$core$IIndexed$_nth$arity$2(null,i__16179);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16180,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16180,(1),null);
var G__16181_16186 = v;
var G__16182_16187 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16181_16186,G__16182_16187) : f.call(null,G__16181_16186,G__16182_16187));

var G__16188 = seq__16176;
var G__16189 = chunk__16177;
var G__16190 = count__16178;
var G__16191 = (i__16179 + (1));
seq__16176 = G__16188;
chunk__16177 = G__16189;
count__16178 = G__16190;
i__16179 = G__16191;
continue;
} else {
var temp__4423__auto__ = cljs.core.seq(seq__16176);
if(temp__4423__auto__){
var seq__16176__$1 = temp__4423__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16176__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__16176__$1);
var G__16192 = cljs.core.chunk_rest(seq__16176__$1);
var G__16193 = c__4552__auto__;
var G__16194 = cljs.core.count(c__4552__auto__);
var G__16195 = (0);
seq__16176 = G__16192;
chunk__16177 = G__16193;
count__16178 = G__16194;
i__16179 = G__16195;
continue;
} else {
var vec__16183 = cljs.core.first(seq__16176__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16183,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16183,(1),null);
var G__16184_16196 = v;
var G__16185_16197 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16184_16196,G__16185_16197) : f.call(null,G__16184_16196,G__16185_16197));

var G__16198 = cljs.core.next(seq__16176__$1);
var G__16199 = null;
var G__16200 = (0);
var G__16201 = (0);
seq__16176 = G__16198;
chunk__16177 = G__16199;
count__16178 = G__16200;
i__16179 = G__16201;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__16174_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__16174_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__16202 = null;
var G__16202__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16202__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16202 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16202__2.call(this,self__,k);
case 3:
return G__16202__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16202.cljs$core$IFn$_invoke$arity$2 = G__16202__2;
G__16202.cljs$core$IFn$_invoke$arity$3 = G__16202__3;
return G__16202;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args16175){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16175)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__16203 = (i + (1));
var G__16204 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__16203;
out = G__16204;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__16205 = (i + (1));
var G__16206 = cljs.core._conj_BANG_(out,(items[i]));
i = G__16205;
out = G__16206;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition1$ = 136;
this.cljs$lang$protocol_mask$partition0$ = 259;
})
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.call = (function() {
var G__16208 = null;
var G__16208__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__16208__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__16208 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16208__2.call(this,self__,k);
case 3:
return G__16208__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16208.cljs$core$IFn$_invoke$arity$2 = G__16208__2;
G__16208.cljs$core$IFn$_invoke$arity$3 = G__16208__3;
return G__16208;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args16207){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16207)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16211 = cljs.core.seq(coll);
var chunk__16212 = null;
var count__16213 = (0);
var i__16214 = (0);
while(true){
if((i__16214 < count__16213)){
var vec__16215 = chunk__16212.cljs$core$IIndexed$_nth$arity$2(null,i__16214);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16215,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16215,(1),null);
var G__16216_16221 = v;
var G__16217_16222 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16216_16221,G__16217_16222) : f.call(null,G__16216_16221,G__16217_16222));

var G__16223 = seq__16211;
var G__16224 = chunk__16212;
var G__16225 = count__16213;
var G__16226 = (i__16214 + (1));
seq__16211 = G__16223;
chunk__16212 = G__16224;
count__16213 = G__16225;
i__16214 = G__16226;
continue;
} else {
var temp__4423__auto__ = cljs.core.seq(seq__16211);
if(temp__4423__auto__){
var seq__16211__$1 = temp__4423__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16211__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__16211__$1);
var G__16227 = cljs.core.chunk_rest(seq__16211__$1);
var G__16228 = c__4552__auto__;
var G__16229 = cljs.core.count(c__4552__auto__);
var G__16230 = (0);
seq__16211 = G__16227;
chunk__16212 = G__16228;
count__16213 = G__16229;
i__16214 = G__16230;
continue;
} else {
var vec__16218 = cljs.core.first(seq__16211__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16218,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16218,(1),null);
var G__16219_16231 = v;
var G__16220_16232 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16219_16231,G__16220_16232) : f.call(null,G__16219_16231,G__16220_16232));

var G__16233 = cljs.core.next(seq__16211__$1);
var G__16234 = null;
var G__16235 = (0);
var G__16236 = (0);
seq__16211 = G__16233;
chunk__16212 = G__16234;
count__16213 = G__16235;
i__16214 = G__16236;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__16209_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__16209_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__16237 = null;
var G__16237__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16237__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16237 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16237__2.call(this,self__,k);
case 3:
return G__16237__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16237.cljs$core$IFn$_invoke$arity$2 = G__16237__2;
G__16237.cljs$core$IFn$_invoke$arity$3 = G__16237__3;
return G__16237;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args16210){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16210)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4646__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4646__auto__.length)){
var G__16238 = (i + (1));
var G__16239 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__16238;
res = G__16239;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__16240 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__16241 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__16240;
out = G__16241;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__16242__delegate = function (keys){
return cljs.core.set(keys);
};
var G__16242 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__16243__i = 0, G__16243__a = new Array(arguments.length -  0);
while (G__16243__i < G__16243__a.length) {G__16243__a[G__16243__i] = arguments[G__16243__i + 0]; ++G__16243__i;}
  keys = new cljs.core.IndexedSeq(G__16243__a,0);
} 
return G__16242__delegate.call(this,keys);};
G__16242.cljs$lang$maxFixedArity = 0;
G__16242.cljs$lang$applyTo = (function (arglist__16244){
var keys = cljs.core.seq(arglist__16244);
return G__16242__delegate(keys);
});
G__16242.cljs$core$IFn$_invoke$arity$variadic = G__16242__delegate;
return G__16242;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__16245 = null;
if (arguments.length > 0) {
var G__16246__i = 0, G__16246__a = new Array(arguments.length -  0);
while (G__16246__i < G__16246__a.length) {G__16246__a[G__16246__i] = arguments[G__16246__i + 0]; ++G__16246__i;}
G__16245 = new cljs.core.IndexedSeq(G__16246__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__16245);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__16247__i = 0, G__16247__a = new Array(arguments.length -  0);
while (G__16247__i < G__16247__a.length) {G__16247__a[G__16247__i] = arguments[G__16247__i + 0]; ++G__16247__i;}
  keys = new cljs.core.IndexedSeq(G__16247__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__16248){
var keys = cljs.core.seq(arglist__16248);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__16249__i = 0, G__16249__a = new Array(arguments.length -  1);
while (G__16249__i < G__16249__a.length) {G__16249__a[G__16249__i] = arguments[G__16249__i + 1]; ++G__16249__i;}
  keys = new cljs.core.IndexedSeq(G__16249__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__16250){
var comparator = cljs.core.first(arglist__16250);
var keys = cljs.core.rest(arglist__16250);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__16251_SHARP_){
var temp__4421__auto__ = cljs.core.find(smap,p1__16251_SHARP_);
if(cljs.core.truth_(temp__4421__auto__)){
var e = temp__4421__auto__;
return cljs.core.val(e);
} else {
return p1__16251_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4421__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4421__auto__)){
var e = temp__4421__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__16252_SHARP_){
var temp__4421__auto__ = cljs.core.find(smap,p1__16252_SHARP_);
if(cljs.core.truth_(temp__4421__auto__)){
var e = temp__4421__auto__;
return cljs.core.second(e);
} else {
return p1__16252_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__16273 = null;
var G__16273__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16273__1 = (function (result){
var G__16263 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16263) : rf.call(null,G__16263));
});
var G__16273__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__16264 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16264) : cljs.core.deref.call(null,G__16264));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__16265 = result;
var G__16266 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16265,G__16266) : rf.call(null,G__16265,G__16266));
}
});
G__16273 = function(result,input){
switch(arguments.length){
case 0:
return G__16273__0.call(this);
case 1:
return G__16273__1.call(this,result);
case 2:
return G__16273__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16273.cljs$core$IFn$_invoke$arity$0 = G__16273__0;
G__16273.cljs$core$IFn$_invoke$arity$1 = G__16273__1;
G__16273.cljs$core$IFn$_invoke$arity$2 = G__16273__2;
return G__16273;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__16271,seen__$1){
while(true){
var vec__16272 = p__16271;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16272,(0),null);
var xs__$1 = vec__16272;
var temp__4423__auto__ = cljs.core.seq(xs__$1);
if(temp__4423__auto__){
var s = temp__4423__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__16274 = cljs.core.rest(s);
var G__16275 = seen__$1;
p__16271 = G__16274;
seen__$1 = G__16275;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__16276 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__16277 = cljs.core.next(s__$1);
ret = G__16276;
s__$1 = G__16277;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__16279 = x;
if(G__16279){
var bit__4439__auto__ = (G__16279.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4439__auto__) || (G__16279.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__16280 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__16281 = cljs.core.next(ks);
var G__16282 = cljs.core.next(vs);
map = G__16280;
ks = G__16281;
vs = G__16282;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__16293 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16293) : k.call(null,G__16293));
})() > (function (){var G__16294 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16294) : k.call(null,G__16294));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__16295__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16283_SHARP_,p2__16284_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__16283_SHARP_,p2__16284_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__16295 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__16296__i = 0, G__16296__a = new Array(arguments.length -  3);
while (G__16296__i < G__16296__a.length) {G__16296__a[G__16296__i] = arguments[G__16296__i + 3]; ++G__16296__i;}
  more = new cljs.core.IndexedSeq(G__16296__a,0);
} 
return G__16295__delegate.call(this,k,x,y,more);};
G__16295.cljs$lang$maxFixedArity = 3;
G__16295.cljs$lang$applyTo = (function (arglist__16297){
var k = cljs.core.first(arglist__16297);
arglist__16297 = cljs.core.next(arglist__16297);
var x = cljs.core.first(arglist__16297);
arglist__16297 = cljs.core.next(arglist__16297);
var y = cljs.core.first(arglist__16297);
var more = cljs.core.rest(arglist__16297);
return G__16295__delegate(k,x,y,more);
});
G__16295.cljs$core$IFn$_invoke$arity$variadic = G__16295__delegate;
return G__16295;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__16298 = null;
if (arguments.length > 3) {
var G__16299__i = 0, G__16299__a = new Array(arguments.length -  3);
while (G__16299__i < G__16299__a.length) {G__16299__a[G__16299__i] = arguments[G__16299__i + 3]; ++G__16299__i;}
G__16298 = new cljs.core.IndexedSeq(G__16299__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__16298);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__16310 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16310) : k.call(null,G__16310));
})() < (function (){var G__16311 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16311) : k.call(null,G__16311));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__16312__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16300_SHARP_,p2__16301_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__16300_SHARP_,p2__16301_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__16312 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__16313__i = 0, G__16313__a = new Array(arguments.length -  3);
while (G__16313__i < G__16313__a.length) {G__16313__a[G__16313__i] = arguments[G__16313__i + 3]; ++G__16313__i;}
  more = new cljs.core.IndexedSeq(G__16313__a,0);
} 
return G__16312__delegate.call(this,k,x,y,more);};
G__16312.cljs$lang$maxFixedArity = 3;
G__16312.cljs$lang$applyTo = (function (arglist__16314){
var k = cljs.core.first(arglist__16314);
arglist__16314 = cljs.core.next(arglist__16314);
var x = cljs.core.first(arglist__16314);
arglist__16314 = cljs.core.next(arglist__16314);
var y = cljs.core.first(arglist__16314);
var more = cljs.core.rest(arglist__16314);
return G__16312__delegate(k,x,y,more);
});
G__16312.cljs$core$IFn$_invoke$arity$variadic = G__16312__delegate;
return G__16312;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__16315 = null;
if (arguments.length > 3) {
var G__16316__i = 0, G__16316__a = new Array(arguments.length -  3);
while (G__16316__i < G__16316__a.length) {G__16316__a[G__16316__i] = arguments[G__16316__i + 3]; ++G__16316__i;}
G__16315 = new cljs.core.IndexedSeq(G__16316__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__16315);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__16333 = null;
var G__16333__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16333__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__16328 = result;
var G__16329 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16328,G__16329) : rf.call(null,G__16328,G__16329));
})());
})());
var G__16330 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16330) : rf.call(null,G__16330));
});
var G__16333__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__16331 = result;
var G__16332 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16331,G__16332) : rf.call(null,G__16331,G__16332));
} else {
return result;
}
});
G__16333 = function(result,input){
switch(arguments.length){
case 0:
return G__16333__0.call(this);
case 1:
return G__16333__1.call(this,result);
case 2:
return G__16333__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16333.cljs$core$IFn$_invoke$arity$0 = G__16333__0;
G__16333.cljs$core$IFn$_invoke$arity$1 = G__16333__1;
G__16333.cljs$core$IFn$_invoke$arity$2 = G__16333__2;
return G__16333;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__16346 = null;
var G__16346__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16346__1 = (function (result){
var G__16341 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16341) : rf.call(null,G__16341));
});
var G__16346__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__16342 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16342) : pred.call(null,G__16342));
})())){
var G__16343 = result;
var G__16344 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16343,G__16344) : rf.call(null,G__16343,G__16344));
} else {
return cljs.core.reduced(result);
}
});
G__16346 = function(result,input){
switch(arguments.length){
case 0:
return G__16346__0.call(this);
case 1:
return G__16346__1.call(this,result);
case 2:
return G__16346__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16346.cljs$core$IFn$_invoke$arity$0 = G__16346__0;
G__16346.cljs$core$IFn$_invoke$arity$1 = G__16346__1;
G__16346.cljs$core$IFn$_invoke$arity$2 = G__16346__2;
return G__16346;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
if(cljs.core.truth_((function (){var G__16345 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16345) : pred.call(null,G__16345));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__16351 = (function (){var G__16353 = cljs.core._entry_key(sc,e);
var G__16354 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16353,G__16354) : comp.call(null,G__16353,G__16354));
})();
var G__16352 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__16351,G__16352) : test.call(null,G__16351,G__16352));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4423__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4423__auto__)){
var vec__16358 = temp__4423__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16358,(0),null);
var s = vec__16358;
if(cljs.core.truth_((function (){var G__16359 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__16359) : include.call(null,G__16359));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4423__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4423__auto__)){
var vec__16360 = temp__4423__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16360,(0),null);
var s = vec__16360;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4423__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4423__auto__)){
var vec__16364 = temp__4423__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16364,(0),null);
var s = vec__16364;
if(cljs.core.truth_((function (){var G__16365 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__16365) : include.call(null,G__16365));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4423__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4423__auto__)){
var vec__16366 = temp__4423__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16366,(0),null);
var s = vec__16366;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__16367 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__16367) : Math.ceil.call(null,G__16367));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4186__auto__ = self__.__hash;
if(!((h__4186__auto__ == null))){
return h__4186__auto__;
} else {
var h__4186__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4186__auto____$1;

return h__4186__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__16368 = ret;
var G__16369 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16368,G__16369) : f.call(null,G__16368,G__16369));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__16370 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16370) : cljs.core.deref.call(null,G__16370));
} else {
var G__16371 = (i + self__.step);
var G__16372 = ret__$1;
i = G__16371;
ret = G__16372;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__16390 = null;
var G__16390__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16390__1 = (function (result){
var G__16387 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16387) : rf.call(null,G__16387));
});
var G__16390__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__16388 = result;
var G__16389 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16388,G__16389) : rf.call(null,G__16388,G__16389));
} else {
return result;
}
});
G__16390 = function(result,input){
switch(arguments.length){
case 0:
return G__16390__0.call(this);
case 1:
return G__16390__1.call(this,result);
case 2:
return G__16390__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16390.cljs$core$IFn$_invoke$arity$0 = G__16390__0;
G__16390.cljs$core$IFn$_invoke$arity$1 = G__16390__1;
G__16390.cljs$core$IFn$_invoke$arity$2 = G__16390__2;
return G__16390;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (a,pa){
return (function() {
var G__16412 = null;
var G__16412__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16412__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__16403 = result;
var G__16404 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16403,G__16404) : rf.call(null,G__16403,G__16404));
})());
})());
var G__16405 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16405) : rf.call(null,G__16405));
});
var G__16412__2 = (function (result,input){
var pval = (function (){var G__16406 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16406) : cljs.core.deref.call(null,G__16406));
})();
var val = (function (){var G__16407 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16407) : f.call(null,G__16407));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$10)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__16408 = result;
var G__16409 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16408,G__16409) : rf.call(null,G__16408,G__16409));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__16412 = function(result,input){
switch(arguments.length){
case 0:
return G__16412__0.call(this);
case 1:
return G__16412__1.call(this,result);
case 2:
return G__16412__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16412.cljs$core$IFn$_invoke$arity$0 = G__16412__0;
G__16412.cljs$core$IFn$_invoke$arity$1 = G__16412__1;
G__16412.cljs$core$IFn$_invoke$arity$2 = G__16412__2;
return G__16412;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__16410 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16410) : f.call(null,G__16410));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4423__auto__){
return (function (p1__16391_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__16411 = p1__16391_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16411) : f.call(null,G__16411));
})());
});})(fst,fv,s,temp__4423__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4421__auto__ = cljs.core.seq(coll);
if(temp__4421__auto__){
var s = temp__4421__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__16421 = init;
var G__16422 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16421,G__16422) : f.call(null,G__16421,G__16422));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__16517 = null;
var G__16517__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__16517__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16475 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16475) : f.call(null,G__16475));
})()],null));
});
var G__16517__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16476 = x;
var G__16477 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16476,G__16477) : f.call(null,G__16476,G__16477));
})()],null));
});
var G__16517__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16478 = x;
var G__16479 = y;
var G__16480 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16478,G__16479,G__16480) : f.call(null,G__16478,G__16479,G__16480));
})()],null));
});
var G__16517__4 = (function() { 
var G__16518__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__16518 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16519__i = 0, G__16519__a = new Array(arguments.length -  3);
while (G__16519__i < G__16519__a.length) {G__16519__a[G__16519__i] = arguments[G__16519__i + 3]; ++G__16519__i;}
  args = new cljs.core.IndexedSeq(G__16519__a,0);
} 
return G__16518__delegate.call(this,x,y,z,args);};
G__16518.cljs$lang$maxFixedArity = 3;
G__16518.cljs$lang$applyTo = (function (arglist__16520){
var x = cljs.core.first(arglist__16520);
arglist__16520 = cljs.core.next(arglist__16520);
var y = cljs.core.first(arglist__16520);
arglist__16520 = cljs.core.next(arglist__16520);
var z = cljs.core.first(arglist__16520);
var args = cljs.core.rest(arglist__16520);
return G__16518__delegate(x,y,z,args);
});
G__16518.cljs$core$IFn$_invoke$arity$variadic = G__16518__delegate;
return G__16518;
})()
;
G__16517 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16517__0.call(this);
case 1:
return G__16517__1.call(this,x);
case 2:
return G__16517__2.call(this,x,y);
case 3:
return G__16517__3.call(this,x,y,z);
default:
var G__16521 = null;
if (arguments.length > 3) {
var G__16522__i = 0, G__16522__a = new Array(arguments.length -  3);
while (G__16522__i < G__16522__a.length) {G__16522__a[G__16522__i] = arguments[G__16522__i + 3]; ++G__16522__i;}
G__16521 = new cljs.core.IndexedSeq(G__16522__a,0);
}
return G__16517__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16521);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16517.cljs$lang$maxFixedArity = 3;
G__16517.cljs$lang$applyTo = G__16517__4.cljs$lang$applyTo;
G__16517.cljs$core$IFn$_invoke$arity$0 = G__16517__0;
G__16517.cljs$core$IFn$_invoke$arity$1 = G__16517__1;
G__16517.cljs$core$IFn$_invoke$arity$2 = G__16517__2;
G__16517.cljs$core$IFn$_invoke$arity$3 = G__16517__3;
G__16517.cljs$core$IFn$_invoke$arity$variadic = G__16517__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16517;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__16523 = null;
var G__16523__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__16523__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16481 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16481) : f.call(null,G__16481));
})(),(function (){var G__16482 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16482) : g.call(null,G__16482));
})()],null));
});
var G__16523__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16483 = x;
var G__16484 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16483,G__16484) : f.call(null,G__16483,G__16484));
})(),(function (){var G__16485 = x;
var G__16486 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__16485,G__16486) : g.call(null,G__16485,G__16486));
})()],null));
});
var G__16523__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16487 = x;
var G__16488 = y;
var G__16489 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16487,G__16488,G__16489) : f.call(null,G__16487,G__16488,G__16489));
})(),(function (){var G__16490 = x;
var G__16491 = y;
var G__16492 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__16490,G__16491,G__16492) : g.call(null,G__16490,G__16491,G__16492));
})()],null));
});
var G__16523__4 = (function() { 
var G__16524__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__16524 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16525__i = 0, G__16525__a = new Array(arguments.length -  3);
while (G__16525__i < G__16525__a.length) {G__16525__a[G__16525__i] = arguments[G__16525__i + 3]; ++G__16525__i;}
  args = new cljs.core.IndexedSeq(G__16525__a,0);
} 
return G__16524__delegate.call(this,x,y,z,args);};
G__16524.cljs$lang$maxFixedArity = 3;
G__16524.cljs$lang$applyTo = (function (arglist__16526){
var x = cljs.core.first(arglist__16526);
arglist__16526 = cljs.core.next(arglist__16526);
var y = cljs.core.first(arglist__16526);
arglist__16526 = cljs.core.next(arglist__16526);
var z = cljs.core.first(arglist__16526);
var args = cljs.core.rest(arglist__16526);
return G__16524__delegate(x,y,z,args);
});
G__16524.cljs$core$IFn$_invoke$arity$variadic = G__16524__delegate;
return G__16524;
})()
;
G__16523 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16523__0.call(this);
case 1:
return G__16523__1.call(this,x);
case 2:
return G__16523__2.call(this,x,y);
case 3:
return G__16523__3.call(this,x,y,z);
default:
var G__16527 = null;
if (arguments.length > 3) {
var G__16528__i = 0, G__16528__a = new Array(arguments.length -  3);
while (G__16528__i < G__16528__a.length) {G__16528__a[G__16528__i] = arguments[G__16528__i + 3]; ++G__16528__i;}
G__16527 = new cljs.core.IndexedSeq(G__16528__a,0);
}
return G__16523__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16523.cljs$lang$maxFixedArity = 3;
G__16523.cljs$lang$applyTo = G__16523__4.cljs$lang$applyTo;
G__16523.cljs$core$IFn$_invoke$arity$0 = G__16523__0;
G__16523.cljs$core$IFn$_invoke$arity$1 = G__16523__1;
G__16523.cljs$core$IFn$_invoke$arity$2 = G__16523__2;
G__16523.cljs$core$IFn$_invoke$arity$3 = G__16523__3;
G__16523.cljs$core$IFn$_invoke$arity$variadic = G__16523__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16523;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__16529 = null;
var G__16529__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__16529__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16493 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16493) : f.call(null,G__16493));
})(),(function (){var G__16494 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16494) : g.call(null,G__16494));
})(),(function (){var G__16495 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__16495) : h.call(null,G__16495));
})()],null));
});
var G__16529__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16496 = x;
var G__16497 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16496,G__16497) : f.call(null,G__16496,G__16497));
})(),(function (){var G__16498 = x;
var G__16499 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__16498,G__16499) : g.call(null,G__16498,G__16499));
})(),(function (){var G__16500 = x;
var G__16501 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__16500,G__16501) : h.call(null,G__16500,G__16501));
})()],null));
});
var G__16529__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16502 = x;
var G__16503 = y;
var G__16504 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16502,G__16503,G__16504) : f.call(null,G__16502,G__16503,G__16504));
})(),(function (){var G__16505 = x;
var G__16506 = y;
var G__16507 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__16505,G__16506,G__16507) : g.call(null,G__16505,G__16506,G__16507));
})(),(function (){var G__16508 = x;
var G__16509 = y;
var G__16510 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__16508,G__16509,G__16510) : h.call(null,G__16508,G__16509,G__16510));
})()],null));
});
var G__16529__4 = (function() { 
var G__16530__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__16530 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16531__i = 0, G__16531__a = new Array(arguments.length -  3);
while (G__16531__i < G__16531__a.length) {G__16531__a[G__16531__i] = arguments[G__16531__i + 3]; ++G__16531__i;}
  args = new cljs.core.IndexedSeq(G__16531__a,0);
} 
return G__16530__delegate.call(this,x,y,z,args);};
G__16530.cljs$lang$maxFixedArity = 3;
G__16530.cljs$lang$applyTo = (function (arglist__16532){
var x = cljs.core.first(arglist__16532);
arglist__16532 = cljs.core.next(arglist__16532);
var y = cljs.core.first(arglist__16532);
arglist__16532 = cljs.core.next(arglist__16532);
var z = cljs.core.first(arglist__16532);
var args = cljs.core.rest(arglist__16532);
return G__16530__delegate(x,y,z,args);
});
G__16530.cljs$core$IFn$_invoke$arity$variadic = G__16530__delegate;
return G__16530;
})()
;
G__16529 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16529__0.call(this);
case 1:
return G__16529__1.call(this,x);
case 2:
return G__16529__2.call(this,x,y);
case 3:
return G__16529__3.call(this,x,y,z);
default:
var G__16533 = null;
if (arguments.length > 3) {
var G__16534__i = 0, G__16534__a = new Array(arguments.length -  3);
while (G__16534__i < G__16534__a.length) {G__16534__a[G__16534__i] = arguments[G__16534__i + 3]; ++G__16534__i;}
G__16533 = new cljs.core.IndexedSeq(G__16534__a,0);
}
return G__16529__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16529.cljs$lang$maxFixedArity = 3;
G__16529.cljs$lang$applyTo = G__16529__4.cljs$lang$applyTo;
G__16529.cljs$core$IFn$_invoke$arity$0 = G__16529__0;
G__16529.cljs$core$IFn$_invoke$arity$1 = G__16529__1;
G__16529.cljs$core$IFn$_invoke$arity$2 = G__16529__2;
G__16529.cljs$core$IFn$_invoke$arity$3 = G__16529__3;
G__16529.cljs$core$IFn$_invoke$arity$variadic = G__16529__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16529;
})()
});
var juxt__4 = (function() { 
var G__16535__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__16536 = null;
var G__16536__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16423_SHARP_,p2__16424_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16423_SHARP_,(function (){return (p2__16424_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__16424_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__16424_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16536__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16425_SHARP_,p2__16426_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16425_SHARP_,(function (){var G__16511 = x;
return (p2__16426_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__16426_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16511) : p2__16426_SHARP_.call(null,G__16511));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16536__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16427_SHARP_,p2__16428_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16427_SHARP_,(function (){var G__16512 = x;
var G__16513 = y;
return (p2__16428_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__16428_SHARP_.cljs$core$IFn$_invoke$arity$2(G__16512,G__16513) : p2__16428_SHARP_.call(null,G__16512,G__16513));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16536__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16429_SHARP_,p2__16430_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16429_SHARP_,(function (){var G__16514 = x;
var G__16515 = y;
var G__16516 = z;
return (p2__16430_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__16430_SHARP_.cljs$core$IFn$_invoke$arity$3(G__16514,G__16515,G__16516) : p2__16430_SHARP_.call(null,G__16514,G__16515,G__16516));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16536__4 = (function() { 
var G__16537__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16431_SHARP_,p2__16432_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16431_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__16432_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__16537 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16538__i = 0, G__16538__a = new Array(arguments.length -  3);
while (G__16538__i < G__16538__a.length) {G__16538__a[G__16538__i] = arguments[G__16538__i + 3]; ++G__16538__i;}
  args = new cljs.core.IndexedSeq(G__16538__a,0);
} 
return G__16537__delegate.call(this,x,y,z,args);};
G__16537.cljs$lang$maxFixedArity = 3;
G__16537.cljs$lang$applyTo = (function (arglist__16539){
var x = cljs.core.first(arglist__16539);
arglist__16539 = cljs.core.next(arglist__16539);
var y = cljs.core.first(arglist__16539);
arglist__16539 = cljs.core.next(arglist__16539);
var z = cljs.core.first(arglist__16539);
var args = cljs.core.rest(arglist__16539);
return G__16537__delegate(x,y,z,args);
});
G__16537.cljs$core$IFn$_invoke$arity$variadic = G__16537__delegate;
return G__16537;
})()
;
G__16536 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16536__0.call(this);
case 1:
return G__16536__1.call(this,x);
case 2:
return G__16536__2.call(this,x,y);
case 3:
return G__16536__3.call(this,x,y,z);
default:
var G__16540 = null;
if (arguments.length > 3) {
var G__16541__i = 0, G__16541__a = new Array(arguments.length -  3);
while (G__16541__i < G__16541__a.length) {G__16541__a[G__16541__i] = arguments[G__16541__i + 3]; ++G__16541__i;}
G__16540 = new cljs.core.IndexedSeq(G__16541__a,0);
}
return G__16536__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16540);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16536.cljs$lang$maxFixedArity = 3;
G__16536.cljs$lang$applyTo = G__16536__4.cljs$lang$applyTo;
G__16536.cljs$core$IFn$_invoke$arity$0 = G__16536__0;
G__16536.cljs$core$IFn$_invoke$arity$1 = G__16536__1;
G__16536.cljs$core$IFn$_invoke$arity$2 = G__16536__2;
G__16536.cljs$core$IFn$_invoke$arity$3 = G__16536__3;
G__16536.cljs$core$IFn$_invoke$arity$variadic = G__16536__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16536;
})()
;})(fs__$1))
};
var G__16535 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__16542__i = 0, G__16542__a = new Array(arguments.length -  3);
while (G__16542__i < G__16542__a.length) {G__16542__a[G__16542__i] = arguments[G__16542__i + 3]; ++G__16542__i;}
  fs = new cljs.core.IndexedSeq(G__16542__a,0);
} 
return G__16535__delegate.call(this,f,g,h,fs);};
G__16535.cljs$lang$maxFixedArity = 3;
G__16535.cljs$lang$applyTo = (function (arglist__16543){
var f = cljs.core.first(arglist__16543);
arglist__16543 = cljs.core.next(arglist__16543);
var g = cljs.core.first(arglist__16543);
arglist__16543 = cljs.core.next(arglist__16543);
var h = cljs.core.first(arglist__16543);
var fs = cljs.core.rest(arglist__16543);
return G__16535__delegate(f,g,h,fs);
});
G__16535.cljs$core$IFn$_invoke$arity$variadic = G__16535__delegate;
return G__16535;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__16544 = null;
if (arguments.length > 3) {
var G__16545__i = 0, G__16545__a = new Array(arguments.length -  3);
while (G__16545__i < G__16545__a.length) {G__16545__a[G__16545__i] = arguments[G__16545__i + 3]; ++G__16545__i;}
G__16544 = new cljs.core.IndexedSeq(G__16545__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__16544);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__16546 = cljs.core.next(coll);
coll = G__16546;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__16547 = (n - (1));
var G__16548 = cljs.core.next(coll);
n = G__16547;
coll = G__16548;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__16552 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16552,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16552,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16552,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_16560 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__16561_16567 = cljs.core.first(coll);
var G__16562_16568 = writer;
var G__16563_16569 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16561_16567,G__16562_16568,G__16563_16569) : print_one.call(null,G__16561_16567,G__16562_16568,G__16563_16569));
} else {
}

var coll_16570__$1 = cljs.core.next(coll);
var n_16571 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_16570__$1) && (((n_16571 == null)) || (!((n_16571 === (0)))))){
cljs.core._write(writer,sep);

var G__16564_16572 = cljs.core.first(coll_16570__$1);
var G__16565_16573 = writer;
var G__16566_16574 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16564_16572,G__16565_16573,G__16566_16574) : print_one.call(null,G__16564_16572,G__16565_16573,G__16566_16574));

var G__16575 = cljs.core.next(coll_16570__$1);
var G__16576 = (n_16571 - (1));
coll_16570__$1 = G__16575;
n_16571 = G__16576;
continue;
} else {
if((cljs.core.seq(coll_16570__$1)) && ((n_16571 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_16560;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__16581 = cljs.core.seq(ss);
var chunk__16582 = null;
var count__16583 = (0);
var i__16584 = (0);
while(true){
if((i__16584 < count__16583)){
var s = chunk__16582.cljs$core$IIndexed$_nth$arity$2(null,i__16584);
cljs.core._write(writer,s);

var G__16585 = seq__16581;
var G__16586 = chunk__16582;
var G__16587 = count__16583;
var G__16588 = (i__16584 + (1));
seq__16581 = G__16585;
chunk__16582 = G__16586;
count__16583 = G__16587;
i__16584 = G__16588;
continue;
} else {
var temp__4423__auto__ = cljs.core.seq(seq__16581);
if(temp__4423__auto__){
var seq__16581__$1 = temp__4423__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16581__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__16581__$1);
var G__16589 = cljs.core.chunk_rest(seq__16581__$1);
var G__16590 = c__4552__auto__;
var G__16591 = cljs.core.count(c__4552__auto__);
var G__16592 = (0);
seq__16581 = G__16589;
chunk__16582 = G__16590;
count__16583 = G__16591;
i__16584 = G__16592;
continue;
} else {
var s = cljs.core.first(seq__16581__$1);
cljs.core._write(writer,s);

var G__16593 = cljs.core.next(seq__16581__$1);
var G__16594 = null;
var G__16595 = (0);
var G__16596 = (0);
seq__16581 = G__16593;
chunk__16582 = G__16594;
count__16583 = G__16595;
i__16584 = G__16596;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__16597__i = 0, G__16597__a = new Array(arguments.length -  1);
while (G__16597__i < G__16597__a.length) {G__16597__a[G__16597__i] = arguments[G__16597__i + 1]; ++G__16597__i;}
  ss = new cljs.core.IndexedSeq(G__16597__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__16598){
var writer = cljs.core.first(arglist__16598);
var ss = cljs.core.rest(arglist__16598);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj16600 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj16600;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__16603 = "[\\\\\"\b\f\n\r\t]";
var G__16604 = "g";
return RegExp(G__16603,G__16604);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3753__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__3753__auto__)){
var and__3753__auto____$1 = (function (){var G__16618 = obj;
if(G__16618){
var bit__4446__auto__ = (G__16618.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4446__auto__) || (G__16618.cljs$core$IMeta$)){
return true;
} else {
if((!G__16618.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__16618);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__16618);
}
})();
if(and__3753__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3753__auto____$1;
}
} else {
return and__3753__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__16619 = obj;
if(G__16619){
var bit__4439__auto__ = (G__16619.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4439__auto__) || (G__16619.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__16620 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__16621 = pr_writer;
var G__16622 = writer;
var G__16623 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__16620,G__16621,G__16622,G__16623) : cljs.core.print_map.call(null,G__16620,G__16621,G__16622,G__16623));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__16624 = obj;
return goog.isString(G__16624);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__16626 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__16626;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__16625 = obj;
if(G__16625){
var bit__4446__auto__ = (G__16625.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4446__auto__) || (G__16625.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__16625.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__16625);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__16625);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__16631 = cljs.core.seq(cljs.core.next(objs));
var chunk__16632 = null;
var count__16633 = (0);
var i__16634 = (0);
while(true){
if((i__16634 < count__16633)){
var obj = chunk__16632.cljs$core$IIndexed$_nth$arity$2(null,i__16634);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__16635 = seq__16631;
var G__16636 = chunk__16632;
var G__16637 = count__16633;
var G__16638 = (i__16634 + (1));
seq__16631 = G__16635;
chunk__16632 = G__16636;
count__16633 = G__16637;
i__16634 = G__16638;
continue;
} else {
var temp__4423__auto__ = cljs.core.seq(seq__16631);
if(temp__4423__auto__){
var seq__16631__$1 = temp__4423__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16631__$1)){
var c__4552__auto__ = cljs.core.chunk_first(seq__16631__$1);
var G__16639 = cljs.core.chunk_rest(seq__16631__$1);
var G__16640 = c__4552__auto__;
var G__16641 = cljs.core.count(c__4552__auto__);
var G__16642 = (0);
seq__16631 = G__16639;
chunk__16632 = G__16640;
count__16633 = G__16641;
i__16634 = G__16642;
continue;
} else {
var obj = cljs.core.first(seq__16631__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__16643 = cljs.core.next(seq__16631__$1);
var G__16644 = null;
var G__16645 = (0);
var G__16646 = (0);
seq__16631 = G__16643;
chunk__16632 = G__16644;
count__16633 = G__16645;
i__16634 = G__16646;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16647__i = 0, G__16647__a = new Array(arguments.length -  0);
while (G__16647__i < G__16647__a.length) {G__16647__a[G__16647__i] = arguments[G__16647__i + 0]; ++G__16647__i;}
  objs = new cljs.core.IndexedSeq(G__16647__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__16648){
var objs = cljs.core.seq(arglist__16648);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16649__i = 0, G__16649__a = new Array(arguments.length -  0);
while (G__16649__i < G__16649__a.length) {G__16649__a[G__16649__i] = arguments[G__16649__i + 0]; ++G__16649__i;}
  objs = new cljs.core.IndexedSeq(G__16649__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__16650){
var objs = cljs.core.seq(arglist__16650);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16651__i = 0, G__16651__a = new Array(arguments.length -  0);
while (G__16651__i < G__16651__a.length) {G__16651__a[G__16651__i] = arguments[G__16651__i + 0]; ++G__16651__i;}
  objs = new cljs.core.IndexedSeq(G__16651__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__16652){
var objs = cljs.core.seq(arglist__16652);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16653__i = 0, G__16653__a = new Array(arguments.length -  0);
while (G__16653__i < G__16653__a.length) {G__16653__a[G__16653__i] = arguments[G__16653__i + 0]; ++G__16653__i;}
  objs = new cljs.core.IndexedSeq(G__16653__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__16654){
var objs = cljs.core.seq(arglist__16654);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16655__i = 0, G__16655__a = new Array(arguments.length -  0);
while (G__16655__i < G__16655__a.length) {G__16655__a[G__16655__i] = arguments[G__16655__i + 0]; ++G__16655__i;}
  objs = new cljs.core.IndexedSeq(G__16655__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__16656){
var objs = cljs.core.seq(arglist__16656);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16657__i = 0, G__16657__a = new Array(arguments.length -  0);
while (G__16657__i < G__16657__a.length) {G__16657__a[G__16657__i] = arguments[G__16657__i + 0]; ++G__16657__i;}
  objs = new cljs.core.IndexedSeq(G__16657__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__16658){
var objs = cljs.core.seq(arglist__16658);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16659__i = 0, G__16659__a = new Array(arguments.length -  0);
while (G__16659__i < G__16659__a.length) {G__16659__a[G__16659__i] = arguments[G__16659__i + 0]; ++G__16659__i;}
  objs = new cljs.core.IndexedSeq(G__16659__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__16660){
var objs = cljs.core.seq(arglist__16660);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16661__i = 0, G__16661__a = new Array(arguments.length -  0);
while (G__16661__i < G__16661__a.length) {G__16661__a[G__16661__i] = arguments[G__16661__i + 0]; ++G__16661__i;}
  objs = new cljs.core.IndexedSeq(G__16661__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__16662){
var objs = cljs.core.seq(arglist__16662);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__16669_16675 = cljs.core.key(e);
var G__16670_16676 = w;
var G__16671_16677 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16669_16675,G__16670_16676,G__16671_16677) : print_one.call(null,G__16669_16675,G__16670_16676,G__16671_16677));

cljs.core._write(w," ");

var G__16672 = cljs.core.val(e);
var G__16673 = w;
var G__16674 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16672,G__16673,G__16674) : print_one.call(null,G__16672,G__16673,G__16674));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__16678__i = 0, G__16678__a = new Array(arguments.length -  2);
while (G__16678__i < G__16678__a.length) {G__16678__a[G__16678__i] = arguments[G__16678__i + 2]; ++G__16678__i;}
  args = new cljs.core.IndexedSeq(G__16678__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__16679){
var iref = cljs.core.first(arglist__16679);
arglist__16679 = cljs.core.next(arglist__16679);
var f = cljs.core.first(arglist__16679);
var args = cljs.core.rest(arglist__16679);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__16682 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16682) : cljs.core.atom.call(null,G__16682));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 1;
})
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__16684 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16684) : cljs.core.deref.call(null,G__16684));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__16685_SHARP_,p2__16686_SHARP_){
var ret = (function (){var G__16689 = p1__16685_SHARP_;
var G__16690 = p2__16686_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16689,G__16690) : rf.call(null,G__16689,G__16690));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__16693 = null;
var G__16693__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16693__1 = (function (result){
var G__16692 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16692) : rf.call(null,G__16692));
});
var G__16693__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__16693 = function(result,input){
switch(arguments.length){
case 0:
return G__16693__0.call(this);
case 1:
return G__16693__1.call(this,result);
case 2:
return G__16693__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16693.cljs$core$IFn$_invoke$arity$0 = G__16693__0;
G__16693.cljs$core$IFn$_invoke$arity$1 = G__16693__1;
G__16693.cljs$core$IFn$_invoke$arity$2 = G__16693__2;
return G__16693;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (pa){
return (function() {
var G__16702 = null;
var G__16702__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16702__1 = (function (result){
var G__16698 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16698) : rf.call(null,G__16698));
});
var G__16702__2 = (function (result,input){
var prior = (function (){var G__16699 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16699) : cljs.core.deref.call(null,G__16699));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__16700 = result;
var G__16701 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16700,G__16701) : rf.call(null,G__16700,G__16701));
}
});
G__16702 = function(result,input){
switch(arguments.length){
case 0:
return G__16702__0.call(this);
case 1:
return G__16702__1.call(this,result);
case 2:
return G__16702__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16702.cljs$core$IFn$_invoke$arity$0 = G__16702__0;
G__16702.cljs$core$IFn$_invoke$arity$1 = G__16702__1;
G__16702.cljs$core$IFn$_invoke$arity$2 = G__16702__2;
return G__16702;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4743__auto__ = this;
return cljs.core.es6_iterator(this__4743__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16704_SHARP_,p2__16703_SHARP_){
var G__16706 = p2__16703_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__16706) : proc.call(null,G__16706));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj16708 = {};
return obj16708;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3753__auto__ = x;
if(and__3753__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3753__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4409__auto__ = (((x == null))?null:x);
return (function (){var or__3765__auto__ = (cljs.core._clj__GT_js[(function (){var G__16712 = x__4409__auto__;
return goog.typeOf(G__16712);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3753__auto__ = x;
if(and__3753__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3753__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4409__auto__ = (((x == null))?null:x);
return (function (){var or__3765__auto__ = (cljs.core._key__GT_js[(function (){var G__16716 = x__4409__auto__;
return goog.typeOf(G__16716);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__16719 = k;
if(G__16719){
var bit__4446__auto__ = null;
if(cljs.core.truth_((function (){var or__3765__auto__ = bit__4446__auto__;
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return G__16719.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__16719.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16719);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16719);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__16720 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__16720) : cljs.core.clj__GT_js.call(null,G__16720));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__16736 = x;
if(G__16736){
var bit__4446__auto__ = null;
if(cljs.core.truth_((function (){var or__3765__auto__ = bit__4446__auto__;
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return G__16736.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__16736.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16736);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16736);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj16738 = {};
return obj16738;
})();
var seq__16739_16749 = cljs.core.seq(x);
var chunk__16740_16750 = null;
var count__16741_16751 = (0);
var i__16742_16752 = (0);
while(true){
if((i__16742_16752 < count__16741_16751)){
var vec__16743_16753 = chunk__16740_16750.cljs$core$IIndexed$_nth$arity$2(null,i__16742_16752);
var k_16754 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16743_16753,(0),null);
var v_16755 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16743_16753,(1),null);
(m[cljs.core.key__GT_js(k_16754)] = clj__GT_js(v_16755));

var G__16756 = seq__16739_16749;
var G__16757 = chunk__16740_16750;
var G__16758 = count__16741_16751;
var G__16759 = (i__16742_16752 + (1));
seq__16739_16749 = G__16756;
chunk__16740_16750 = G__16757;
count__16741_16751 = G__16758;
i__16742_16752 = G__16759;
continue;
} else {
var temp__4423__auto___16760 = cljs.core.seq(seq__16739_16749);
if(temp__4423__auto___16760){
var seq__16739_16761__$1 = temp__4423__auto___16760;
if(cljs.core.chunked_seq_QMARK_(seq__16739_16761__$1)){
var c__4552__auto___16762 = cljs.core.chunk_first(seq__16739_16761__$1);
var G__16763 = cljs.core.chunk_rest(seq__16739_16761__$1);
var G__16764 = c__4552__auto___16762;
var G__16765 = cljs.core.count(c__4552__auto___16762);
var G__16766 = (0);
seq__16739_16749 = G__16763;
chunk__16740_16750 = G__16764;
count__16741_16751 = G__16765;
i__16742_16752 = G__16766;
continue;
} else {
var vec__16744_16767 = cljs.core.first(seq__16739_16761__$1);
var k_16768 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16744_16767,(0),null);
var v_16769 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16744_16767,(1),null);
(m[cljs.core.key__GT_js(k_16768)] = clj__GT_js(v_16769));

var G__16770 = cljs.core.next(seq__16739_16761__$1);
var G__16771 = null;
var G__16772 = (0);
var G__16773 = (0);
seq__16739_16749 = G__16770;
chunk__16740_16750 = G__16771;
count__16741_16751 = G__16772;
i__16742_16752 = G__16773;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__16745_16774 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__16746_16775 = null;
var count__16747_16776 = (0);
var i__16748_16777 = (0);
while(true){
if((i__16748_16777 < count__16747_16776)){
var x_16778__$1 = chunk__16746_16775.cljs$core$IIndexed$_nth$arity$2(null,i__16748_16777);
arr.push(x_16778__$1);

var G__16779 = seq__16745_16774;
var G__16780 = chunk__16746_16775;
var G__16781 = count__16747_16776;
var G__16782 = (i__16748_16777 + (1));
seq__16745_16774 = G__16779;
chunk__16746_16775 = G__16780;
count__16747_16776 = G__16781;
i__16748_16777 = G__16782;
continue;
} else {
var temp__4423__auto___16783 = cljs.core.seq(seq__16745_16774);
if(temp__4423__auto___16783){
var seq__16745_16784__$1 = temp__4423__auto___16783;
if(cljs.core.chunked_seq_QMARK_(seq__16745_16784__$1)){
var c__4552__auto___16785 = cljs.core.chunk_first(seq__16745_16784__$1);
var G__16786 = cljs.core.chunk_rest(seq__16745_16784__$1);
var G__16787 = c__4552__auto___16785;
var G__16788 = cljs.core.count(c__4552__auto___16785);
var G__16789 = (0);
seq__16745_16774 = G__16786;
chunk__16746_16775 = G__16787;
count__16747_16776 = G__16788;
i__16748_16777 = G__16789;
continue;
} else {
var x_16790__$1 = cljs.core.first(seq__16745_16784__$1);
arr.push(x_16790__$1);

var G__16791 = cljs.core.next(seq__16745_16784__$1);
var G__16792 = null;
var G__16793 = (0);
var G__16794 = (0);
seq__16745_16774 = G__16791;
chunk__16746_16775 = G__16792;
count__16747_16776 = G__16793;
i__16748_16777 = G__16794;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj16796 = {};
return obj16796;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3753__auto__ = x;
if(and__3753__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3753__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4409__auto__ = (((x == null))?null:x);
return (function (){var or__3765__auto__ = (cljs.core._js__GT_clj[(function (){var G__16800 = x__4409__auto__;
return goog.typeOf(G__16800);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$11,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__16857__delegate = function (x,opts){
var map__16830 = opts;
var map__16830__$1 = ((cljs.core.seq_QMARK_(map__16830))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__16830):map__16830);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__16830__$1,cljs.core.constant$keyword$11);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__16830,map__16830__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__16846 = x__$1;
if(G__16846){
var bit__4446__auto__ = null;
if(cljs.core.truth_((function (){var or__3765__auto__ = bit__4446__auto__;
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return G__16846.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__16846.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__16846);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__16846);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4521__auto__ = ((function (map__16830,map__16830__$1,keywordize_keys,keyfn){
return (function iter__16847(s__16848){
return (new cljs.core.LazySeq(null,((function (map__16830,map__16830__$1,keywordize_keys,keyfn){
return (function (){
var s__16848__$1 = s__16848;
while(true){
var temp__4423__auto__ = cljs.core.seq(s__16848__$1);
if(temp__4423__auto__){
var s__16848__$2 = temp__4423__auto__;
if(cljs.core.chunked_seq_QMARK_(s__16848__$2)){
var c__4519__auto__ = cljs.core.chunk_first(s__16848__$2);
var size__4520__auto__ = cljs.core.count(c__4519__auto__);
var b__16850 = cljs.core.chunk_buffer(size__4520__auto__);
if((function (){var i__16849 = (0);
while(true){
if((i__16849 < size__4520__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4519__auto__,i__16849);
cljs.core.chunk_append(b__16850,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__16855 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16855) : keyfn.call(null,G__16855));
})(),thisfn((x__$1[k]))], null));

var G__16858 = (i__16849 + (1));
i__16849 = G__16858;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__16850),iter__16847(cljs.core.chunk_rest(s__16848__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__16850),null);
}
} else {
var k = cljs.core.first(s__16848__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__16856 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16856) : keyfn.call(null,G__16856));
})(),thisfn((x__$1[k]))], null),iter__16847(cljs.core.rest(s__16848__$2)));
}
} else {
return null;
}
break;
}
});})(map__16830,map__16830__$1,keywordize_keys,keyfn))
,null,null));
});})(map__16830,map__16830__$1,keywordize_keys,keyfn))
;
return iter__4521__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__16830,map__16830__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__16857 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__16859__i = 0, G__16859__a = new Array(arguments.length -  1);
while (G__16859__i < G__16859__a.length) {G__16859__a[G__16859__i] = arguments[G__16859__i + 1]; ++G__16859__i;}
  opts = new cljs.core.IndexedSeq(G__16859__a,0);
} 
return G__16857__delegate.call(this,x,opts);};
G__16857.cljs$lang$maxFixedArity = 1;
G__16857.cljs$lang$applyTo = (function (arglist__16860){
var x = cljs.core.first(arglist__16860);
var opts = cljs.core.rest(arglist__16860);
return G__16857__delegate(x,opts);
});
G__16857.cljs$core$IFn$_invoke$arity$variadic = G__16857__delegate;
return G__16857;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__16861 = null;
if (arguments.length > 1) {
var G__16862__i = 0, G__16862__a = new Array(arguments.length -  1);
while (G__16862__i < G__16862__a.length) {G__16862__a[G__16862__i] = arguments[G__16862__i + 1]; ++G__16862__i;}
G__16861 = new cljs.core.IndexedSeq(G__16862__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__16861);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__16865 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16865) : cljs.core.atom.call(null,G__16865));
})();
return ((function (mem){
return (function() { 
var G__16867__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__16866 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16866) : cljs.core.deref.call(null,G__16866));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__16867 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__16868__i = 0, G__16868__a = new Array(arguments.length -  0);
while (G__16868__i < G__16868__a.length) {G__16868__a[G__16868__i] = arguments[G__16868__i + 0]; ++G__16868__i;}
  args = new cljs.core.IndexedSeq(G__16868__a,0);
} 
return G__16867__delegate.call(this,args);};
G__16867.cljs$lang$maxFixedArity = 0;
G__16867.cljs$lang$applyTo = (function (arglist__16869){
var args = cljs.core.seq(arglist__16869);
return G__16867__delegate(args);
});
G__16867.cljs$core$IFn$_invoke$arity$variadic = G__16867__delegate;
return G__16867;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__16871 = ret;
f = G__16871;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__16872__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__16872 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__16873__i = 0, G__16873__a = new Array(arguments.length -  1);
while (G__16873__i < G__16873__a.length) {G__16873__a[G__16873__i] = arguments[G__16873__i + 1]; ++G__16873__i;}
  args = new cljs.core.IndexedSeq(G__16873__a,0);
} 
return G__16872__delegate.call(this,f,args);};
G__16872.cljs$lang$maxFixedArity = 1;
G__16872.cljs$lang$applyTo = (function (arglist__16874){
var f = cljs.core.first(arglist__16874);
var args = cljs.core.rest(arglist__16874);
return G__16872__delegate(f,args);
});
G__16872.cljs$core$IFn$_invoke$arity$variadic = G__16872__delegate;
return G__16872;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__16875 = null;
if (arguments.length > 1) {
var G__16876__i = 0, G__16876__a = new Array(arguments.length -  1);
while (G__16876__i < G__16876__a.length) {G__16876__a[G__16876__i] = arguments[G__16876__i + 1]; ++G__16876__i;}
G__16875 = new cljs.core.IndexedSeq(G__16876__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16875);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__16879 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16879) : Math.floor.call(null,G__16879));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__16881 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16881) : f.call(null,G__16881));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$12,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$13,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$14,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__16883 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16883) : cljs.core.atom.call(null,G__16883));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__16884__i = 0, G__16884__a = new Array(arguments.length -  1);
while (G__16884__i < G__16884__a.length) {G__16884__a[G__16884__i] = arguments[G__16884__i + 1]; ++G__16884__i;}
  args = new cljs.core.IndexedSeq(G__16884__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__16885){
var f = cljs.core.first(arglist__16885);
var args = cljs.core.rest(arglist__16885);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__16950 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16950) : cljs.core.deref.call(null,G__16950));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3765__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
var and__3753__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3753__auto__){
var and__3753__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3753__auto____$1){
var and__3753__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3753__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__16975 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__16973 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__16973) : child.call(null,G__16973));
})(),(function (){var G__16974 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__16974) : parent.call(null,G__16974));
})());
var G__16976 = (i + (1));
ret = G__16975;
i = G__16976;
continue;
}
break;
}
} else {
return and__3753__auto____$2;
}
} else {
return and__3753__auto____$1;
}
} else {
return and__3753__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__16980 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16980) : cljs.core.deref.call(null,G__16980));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__16984 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16984) : cljs.core.deref.call(null,G__16984));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__16988 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16988) : cljs.core.deref.call(null,G__16988));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$13.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$13.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__16997 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__16997) : targets.call(null,G__16997));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__16998 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__16998) : sources.call(null,G__16998));
})()));
});})(tp,td,ta))
;
var or__3765__auto__ = ((cljs.core.contains_QMARK_((function (){var G__17002 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__17002) : tp.call(null,G__17002));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__17003 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__17003) : ta.call(null,G__17003));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__17004 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__17004) : ta.call(null,G__17004));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$12,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$14,tf(cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$13,tf(cljs.core.constant$keyword$13.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__17011 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17011) : parentMap.call(null,G__17011));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__17012 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17012) : parentMap.call(null,G__17012));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__17005_SHARP_){
return cljs.core.cons(cljs.core.first(p1__17005_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__17005_SHARP_),cljs.core.second(p1__17005_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__17013 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17013) : parentMap.call(null,G__17013));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__17006_SHARP_,p2__17007_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__17006_SHARP_,p2__17007_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__17016 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17016) : cljs.core.deref.call(null,G__17016));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__17017 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17017) : cljs.core.deref.call(null,G__17017));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__17033 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17033) : cljs.core.deref.call(null,G__17033));
})().call(null,x);
var or__3765__auto__ = (cljs.core.truth_((function (){var and__3753__auto__ = xprefs;
if(cljs.core.truth_(and__3753__auto__)){
var G__17035 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__17035) : xprefs.call(null,G__17035));
} else {
return and__3753__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__17036 = cljs.core.rest(ps);
ps = G__17036;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3765__auto____$1)){
return or__3765__auto____$1;
} else {
var or__3765__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__17037 = cljs.core.rest(ps);
ps = G__17037;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3765__auto____$2)){
return or__3765__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3765__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3765__auto__)){
return or__3765__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__17051){
var vec__17052 = p__17051;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17052,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17052,(1),null);
var e = vec__17052;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__17053 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17053) : cljs.core.deref.call(null,G__17053));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3765__auto__ = (be == null);
if(or__3765__auto__){
return or__3765__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__17054 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17054) : cljs.core.deref.call(null,G__17054));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__17055 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17055) : cljs.core.deref.call(null,G__17055));
})(),(function (){var G__17056 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17056) : cljs.core.deref.call(null,G__17056));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj17058 = {};
return obj17058;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3753__auto__ = mf;
if(and__3753__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3753__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4409__auto__ = (((mf == null))?null:mf);
return (function (){var or__3765__auto__ = (cljs.core._reset[(function (){var G__17062 = x__4409__auto__;
return goog.typeOf(G__17062);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._reset["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3753__auto__ = mf;
if(and__3753__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3753__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4409__auto__ = (((mf == null))?null:mf);
return (function (){var or__3765__auto__ = (cljs.core._add_method[(function (){var G__17066 = x__4409__auto__;
return goog.typeOf(G__17066);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._add_method["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3753__auto__ = mf;
if(and__3753__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3753__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4409__auto__ = (((mf == null))?null:mf);
return (function (){var or__3765__auto__ = (cljs.core._remove_method[(function (){var G__17070 = x__4409__auto__;
return goog.typeOf(G__17070);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3753__auto__ = mf;
if(and__3753__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3753__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4409__auto__ = (((mf == null))?null:mf);
return (function (){var or__3765__auto__ = (cljs.core._prefer_method[(function (){var G__17074 = x__4409__auto__;
return goog.typeOf(G__17074);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3753__auto__ = mf;
if(and__3753__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3753__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4409__auto__ = (((mf == null))?null:mf);
return (function (){var or__3765__auto__ = (cljs.core._get_method[(function (){var G__17078 = x__4409__auto__;
return goog.typeOf(G__17078);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._get_method["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3753__auto__ = mf;
if(and__3753__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3753__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4409__auto__ = (((mf == null))?null:mf);
return (function (){var or__3765__auto__ = (cljs.core._methods[(function (){var G__17082 = x__4409__auto__;
return goog.typeOf(G__17082);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._methods["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3753__auto__ = mf;
if(and__3753__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3753__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4409__auto__ = (((mf == null))?null:mf);
return (function (){var or__3765__auto__ = (cljs.core._prefers[(function (){var G__17086 = x__4409__auto__;
return goog.typeOf(G__17086);
})()]);
if(or__3765__auto__){
return or__3765__auto__;
} else {
var or__3765__auto____$1 = (cljs.core._prefers["_"]);
if(or__3765__auto____$1){
return or__3765__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.call = (function() {
var G__17935 = null;
var G__17935__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__17935__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17088 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__17088) : self__.dispatch_fn.call(null,G__17088));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17089 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__17089) : target_fn.call(null,G__17089));
});
var G__17935__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17090 = a;
var G__17091 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__17090,G__17091) : self__.dispatch_fn.call(null,G__17090,G__17091));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17092 = a;
var G__17093 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__17092,G__17093) : target_fn.call(null,G__17092,G__17093));
});
var G__17935__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17094 = a;
var G__17095 = b;
var G__17096 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__17094,G__17095,G__17096) : self__.dispatch_fn.call(null,G__17094,G__17095,G__17096));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17097 = a;
var G__17098 = b;
var G__17099 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__17097,G__17098,G__17099) : target_fn.call(null,G__17097,G__17098,G__17099));
});
var G__17935__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17100 = a;
var G__17101 = b;
var G__17102 = c;
var G__17103 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17100,G__17101,G__17102,G__17103) : self__.dispatch_fn.call(null,G__17100,G__17101,G__17102,G__17103));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17104 = a;
var G__17105 = b;
var G__17106 = c;
var G__17107 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17104,G__17105,G__17106,G__17107) : target_fn.call(null,G__17104,G__17105,G__17106,G__17107));
});
var G__17935__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17108 = a;
var G__17109 = b;
var G__17110 = c;
var G__17111 = d;
var G__17112 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17108,G__17109,G__17110,G__17111,G__17112) : self__.dispatch_fn.call(null,G__17108,G__17109,G__17110,G__17111,G__17112));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17113 = a;
var G__17114 = b;
var G__17115 = c;
var G__17116 = d;
var G__17117 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17113,G__17114,G__17115,G__17116,G__17117) : target_fn.call(null,G__17113,G__17114,G__17115,G__17116,G__17117));
});
var G__17935__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17118 = a;
var G__17119 = b;
var G__17120 = c;
var G__17121 = d;
var G__17122 = e;
var G__17123 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17118,G__17119,G__17120,G__17121,G__17122,G__17123) : self__.dispatch_fn.call(null,G__17118,G__17119,G__17120,G__17121,G__17122,G__17123));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17124 = a;
var G__17125 = b;
var G__17126 = c;
var G__17127 = d;
var G__17128 = e;
var G__17129 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17124,G__17125,G__17126,G__17127,G__17128,G__17129) : target_fn.call(null,G__17124,G__17125,G__17126,G__17127,G__17128,G__17129));
});
var G__17935__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17130 = a;
var G__17131 = b;
var G__17132 = c;
var G__17133 = d;
var G__17134 = e;
var G__17135 = f;
var G__17136 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17130,G__17131,G__17132,G__17133,G__17134,G__17135,G__17136) : self__.dispatch_fn.call(null,G__17130,G__17131,G__17132,G__17133,G__17134,G__17135,G__17136));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17137 = a;
var G__17138 = b;
var G__17139 = c;
var G__17140 = d;
var G__17141 = e;
var G__17142 = f;
var G__17143 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__17137,G__17138,G__17139,G__17140,G__17141,G__17142,G__17143) : target_fn.call(null,G__17137,G__17138,G__17139,G__17140,G__17141,G__17142,G__17143));
});
var G__17935__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17144 = a;
var G__17145 = b;
var G__17146 = c;
var G__17147 = d;
var G__17148 = e;
var G__17149 = f;
var G__17150 = g;
var G__17151 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__17144,G__17145,G__17146,G__17147,G__17148,G__17149,G__17150,G__17151) : self__.dispatch_fn.call(null,G__17144,G__17145,G__17146,G__17147,G__17148,G__17149,G__17150,G__17151));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17152 = a;
var G__17153 = b;
var G__17154 = c;
var G__17155 = d;
var G__17156 = e;
var G__17157 = f;
var G__17158 = g;
var G__17159 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__17152,G__17153,G__17154,G__17155,G__17156,G__17157,G__17158,G__17159) : target_fn.call(null,G__17152,G__17153,G__17154,G__17155,G__17156,G__17157,G__17158,G__17159));
});
var G__17935__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17160 = a;
var G__17161 = b;
var G__17162 = c;
var G__17163 = d;
var G__17164 = e;
var G__17165 = f;
var G__17166 = g;
var G__17167 = h;
var G__17168 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__17160,G__17161,G__17162,G__17163,G__17164,G__17165,G__17166,G__17167,G__17168) : self__.dispatch_fn.call(null,G__17160,G__17161,G__17162,G__17163,G__17164,G__17165,G__17166,G__17167,G__17168));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17169 = a;
var G__17170 = b;
var G__17171 = c;
var G__17172 = d;
var G__17173 = e;
var G__17174 = f;
var G__17175 = g;
var G__17176 = h;
var G__17177 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__17169,G__17170,G__17171,G__17172,G__17173,G__17174,G__17175,G__17176,G__17177) : target_fn.call(null,G__17169,G__17170,G__17171,G__17172,G__17173,G__17174,G__17175,G__17176,G__17177));
});
var G__17935__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17178 = a;
var G__17179 = b;
var G__17180 = c;
var G__17181 = d;
var G__17182 = e;
var G__17183 = f;
var G__17184 = g;
var G__17185 = h;
var G__17186 = i;
var G__17187 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__17178,G__17179,G__17180,G__17181,G__17182,G__17183,G__17184,G__17185,G__17186,G__17187) : self__.dispatch_fn.call(null,G__17178,G__17179,G__17180,G__17181,G__17182,G__17183,G__17184,G__17185,G__17186,G__17187));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17188 = a;
var G__17189 = b;
var G__17190 = c;
var G__17191 = d;
var G__17192 = e;
var G__17193 = f;
var G__17194 = g;
var G__17195 = h;
var G__17196 = i;
var G__17197 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__17188,G__17189,G__17190,G__17191,G__17192,G__17193,G__17194,G__17195,G__17196,G__17197) : target_fn.call(null,G__17188,G__17189,G__17190,G__17191,G__17192,G__17193,G__17194,G__17195,G__17196,G__17197));
});
var G__17935__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17198 = a;
var G__17199 = b;
var G__17200 = c;
var G__17201 = d;
var G__17202 = e;
var G__17203 = f;
var G__17204 = g;
var G__17205 = h;
var G__17206 = i;
var G__17207 = j;
var G__17208 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__17198,G__17199,G__17200,G__17201,G__17202,G__17203,G__17204,G__17205,G__17206,G__17207,G__17208) : self__.dispatch_fn.call(null,G__17198,G__17199,G__17200,G__17201,G__17202,G__17203,G__17204,G__17205,G__17206,G__17207,G__17208));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17209 = a;
var G__17210 = b;
var G__17211 = c;
var G__17212 = d;
var G__17213 = e;
var G__17214 = f;
var G__17215 = g;
var G__17216 = h;
var G__17217 = i;
var G__17218 = j;
var G__17219 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__17209,G__17210,G__17211,G__17212,G__17213,G__17214,G__17215,G__17216,G__17217,G__17218,G__17219) : target_fn.call(null,G__17209,G__17210,G__17211,G__17212,G__17213,G__17214,G__17215,G__17216,G__17217,G__17218,G__17219));
});
var G__17935__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17220 = a;
var G__17221 = b;
var G__17222 = c;
var G__17223 = d;
var G__17224 = e;
var G__17225 = f;
var G__17226 = g;
var G__17227 = h;
var G__17228 = i;
var G__17229 = j;
var G__17230 = k;
var G__17231 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17220,G__17221,G__17222,G__17223,G__17224,G__17225,G__17226,G__17227,G__17228,G__17229,G__17230,G__17231) : self__.dispatch_fn.call(null,G__17220,G__17221,G__17222,G__17223,G__17224,G__17225,G__17226,G__17227,G__17228,G__17229,G__17230,G__17231));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17232 = a;
var G__17233 = b;
var G__17234 = c;
var G__17235 = d;
var G__17236 = e;
var G__17237 = f;
var G__17238 = g;
var G__17239 = h;
var G__17240 = i;
var G__17241 = j;
var G__17242 = k;
var G__17243 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17232,G__17233,G__17234,G__17235,G__17236,G__17237,G__17238,G__17239,G__17240,G__17241,G__17242,G__17243) : target_fn.call(null,G__17232,G__17233,G__17234,G__17235,G__17236,G__17237,G__17238,G__17239,G__17240,G__17241,G__17242,G__17243));
});
var G__17935__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17244 = a;
var G__17245 = b;
var G__17246 = c;
var G__17247 = d;
var G__17248 = e;
var G__17249 = f;
var G__17250 = g;
var G__17251 = h;
var G__17252 = i;
var G__17253 = j;
var G__17254 = k;
var G__17255 = l;
var G__17256 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17244,G__17245,G__17246,G__17247,G__17248,G__17249,G__17250,G__17251,G__17252,G__17253,G__17254,G__17255,G__17256) : self__.dispatch_fn.call(null,G__17244,G__17245,G__17246,G__17247,G__17248,G__17249,G__17250,G__17251,G__17252,G__17253,G__17254,G__17255,G__17256));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17257 = a;
var G__17258 = b;
var G__17259 = c;
var G__17260 = d;
var G__17261 = e;
var G__17262 = f;
var G__17263 = g;
var G__17264 = h;
var G__17265 = i;
var G__17266 = j;
var G__17267 = k;
var G__17268 = l;
var G__17269 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17257,G__17258,G__17259,G__17260,G__17261,G__17262,G__17263,G__17264,G__17265,G__17266,G__17267,G__17268,G__17269) : target_fn.call(null,G__17257,G__17258,G__17259,G__17260,G__17261,G__17262,G__17263,G__17264,G__17265,G__17266,G__17267,G__17268,G__17269));
});
var G__17935__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17270 = a;
var G__17271 = b;
var G__17272 = c;
var G__17273 = d;
var G__17274 = e;
var G__17275 = f;
var G__17276 = g;
var G__17277 = h;
var G__17278 = i;
var G__17279 = j;
var G__17280 = k;
var G__17281 = l;
var G__17282 = m;
var G__17283 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17270,G__17271,G__17272,G__17273,G__17274,G__17275,G__17276,G__17277,G__17278,G__17279,G__17280,G__17281,G__17282,G__17283) : self__.dispatch_fn.call(null,G__17270,G__17271,G__17272,G__17273,G__17274,G__17275,G__17276,G__17277,G__17278,G__17279,G__17280,G__17281,G__17282,G__17283));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17284 = a;
var G__17285 = b;
var G__17286 = c;
var G__17287 = d;
var G__17288 = e;
var G__17289 = f;
var G__17290 = g;
var G__17291 = h;
var G__17292 = i;
var G__17293 = j;
var G__17294 = k;
var G__17295 = l;
var G__17296 = m;
var G__17297 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17284,G__17285,G__17286,G__17287,G__17288,G__17289,G__17290,G__17291,G__17292,G__17293,G__17294,G__17295,G__17296,G__17297) : target_fn.call(null,G__17284,G__17285,G__17286,G__17287,G__17288,G__17289,G__17290,G__17291,G__17292,G__17293,G__17294,G__17295,G__17296,G__17297));
});
var G__17935__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17298 = a;
var G__17299 = b;
var G__17300 = c;
var G__17301 = d;
var G__17302 = e;
var G__17303 = f;
var G__17304 = g;
var G__17305 = h;
var G__17306 = i;
var G__17307 = j;
var G__17308 = k;
var G__17309 = l;
var G__17310 = m;
var G__17311 = n;
var G__17312 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17298,G__17299,G__17300,G__17301,G__17302,G__17303,G__17304,G__17305,G__17306,G__17307,G__17308,G__17309,G__17310,G__17311,G__17312) : self__.dispatch_fn.call(null,G__17298,G__17299,G__17300,G__17301,G__17302,G__17303,G__17304,G__17305,G__17306,G__17307,G__17308,G__17309,G__17310,G__17311,G__17312));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17313 = a;
var G__17314 = b;
var G__17315 = c;
var G__17316 = d;
var G__17317 = e;
var G__17318 = f;
var G__17319 = g;
var G__17320 = h;
var G__17321 = i;
var G__17322 = j;
var G__17323 = k;
var G__17324 = l;
var G__17325 = m;
var G__17326 = n;
var G__17327 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17313,G__17314,G__17315,G__17316,G__17317,G__17318,G__17319,G__17320,G__17321,G__17322,G__17323,G__17324,G__17325,G__17326,G__17327) : target_fn.call(null,G__17313,G__17314,G__17315,G__17316,G__17317,G__17318,G__17319,G__17320,G__17321,G__17322,G__17323,G__17324,G__17325,G__17326,G__17327));
});
var G__17935__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17328 = a;
var G__17329 = b;
var G__17330 = c;
var G__17331 = d;
var G__17332 = e;
var G__17333 = f;
var G__17334 = g;
var G__17335 = h;
var G__17336 = i;
var G__17337 = j;
var G__17338 = k;
var G__17339 = l;
var G__17340 = m;
var G__17341 = n;
var G__17342 = o;
var G__17343 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17328,G__17329,G__17330,G__17331,G__17332,G__17333,G__17334,G__17335,G__17336,G__17337,G__17338,G__17339,G__17340,G__17341,G__17342,G__17343) : self__.dispatch_fn.call(null,G__17328,G__17329,G__17330,G__17331,G__17332,G__17333,G__17334,G__17335,G__17336,G__17337,G__17338,G__17339,G__17340,G__17341,G__17342,G__17343));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17344 = a;
var G__17345 = b;
var G__17346 = c;
var G__17347 = d;
var G__17348 = e;
var G__17349 = f;
var G__17350 = g;
var G__17351 = h;
var G__17352 = i;
var G__17353 = j;
var G__17354 = k;
var G__17355 = l;
var G__17356 = m;
var G__17357 = n;
var G__17358 = o;
var G__17359 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17344,G__17345,G__17346,G__17347,G__17348,G__17349,G__17350,G__17351,G__17352,G__17353,G__17354,G__17355,G__17356,G__17357,G__17358,G__17359) : target_fn.call(null,G__17344,G__17345,G__17346,G__17347,G__17348,G__17349,G__17350,G__17351,G__17352,G__17353,G__17354,G__17355,G__17356,G__17357,G__17358,G__17359));
});
var G__17935__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17360 = a;
var G__17361 = b;
var G__17362 = c;
var G__17363 = d;
var G__17364 = e;
var G__17365 = f;
var G__17366 = g;
var G__17367 = h;
var G__17368 = i;
var G__17369 = j;
var G__17370 = k;
var G__17371 = l;
var G__17372 = m;
var G__17373 = n;
var G__17374 = o;
var G__17375 = p;
var G__17376 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17360,G__17361,G__17362,G__17363,G__17364,G__17365,G__17366,G__17367,G__17368,G__17369,G__17370,G__17371,G__17372,G__17373,G__17374,G__17375,G__17376) : self__.dispatch_fn.call(null,G__17360,G__17361,G__17362,G__17363,G__17364,G__17365,G__17366,G__17367,G__17368,G__17369,G__17370,G__17371,G__17372,G__17373,G__17374,G__17375,G__17376));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17377 = a;
var G__17378 = b;
var G__17379 = c;
var G__17380 = d;
var G__17381 = e;
var G__17382 = f;
var G__17383 = g;
var G__17384 = h;
var G__17385 = i;
var G__17386 = j;
var G__17387 = k;
var G__17388 = l;
var G__17389 = m;
var G__17390 = n;
var G__17391 = o;
var G__17392 = p;
var G__17393 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17377,G__17378,G__17379,G__17380,G__17381,G__17382,G__17383,G__17384,G__17385,G__17386,G__17387,G__17388,G__17389,G__17390,G__17391,G__17392,G__17393) : target_fn.call(null,G__17377,G__17378,G__17379,G__17380,G__17381,G__17382,G__17383,G__17384,G__17385,G__17386,G__17387,G__17388,G__17389,G__17390,G__17391,G__17392,G__17393));
});
var G__17935__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17394 = a;
var G__17395 = b;
var G__17396 = c;
var G__17397 = d;
var G__17398 = e;
var G__17399 = f;
var G__17400 = g;
var G__17401 = h;
var G__17402 = i;
var G__17403 = j;
var G__17404 = k;
var G__17405 = l;
var G__17406 = m;
var G__17407 = n;
var G__17408 = o;
var G__17409 = p;
var G__17410 = q;
var G__17411 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17394,G__17395,G__17396,G__17397,G__17398,G__17399,G__17400,G__17401,G__17402,G__17403,G__17404,G__17405,G__17406,G__17407,G__17408,G__17409,G__17410,G__17411) : self__.dispatch_fn.call(null,G__17394,G__17395,G__17396,G__17397,G__17398,G__17399,G__17400,G__17401,G__17402,G__17403,G__17404,G__17405,G__17406,G__17407,G__17408,G__17409,G__17410,G__17411));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17412 = a;
var G__17413 = b;
var G__17414 = c;
var G__17415 = d;
var G__17416 = e;
var G__17417 = f;
var G__17418 = g;
var G__17419 = h;
var G__17420 = i;
var G__17421 = j;
var G__17422 = k;
var G__17423 = l;
var G__17424 = m;
var G__17425 = n;
var G__17426 = o;
var G__17427 = p;
var G__17428 = q;
var G__17429 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17412,G__17413,G__17414,G__17415,G__17416,G__17417,G__17418,G__17419,G__17420,G__17421,G__17422,G__17423,G__17424,G__17425,G__17426,G__17427,G__17428,G__17429) : target_fn.call(null,G__17412,G__17413,G__17414,G__17415,G__17416,G__17417,G__17418,G__17419,G__17420,G__17421,G__17422,G__17423,G__17424,G__17425,G__17426,G__17427,G__17428,G__17429));
});
var G__17935__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17430 = a;
var G__17431 = b;
var G__17432 = c;
var G__17433 = d;
var G__17434 = e;
var G__17435 = f;
var G__17436 = g;
var G__17437 = h;
var G__17438 = i;
var G__17439 = j;
var G__17440 = k;
var G__17441 = l;
var G__17442 = m;
var G__17443 = n;
var G__17444 = o;
var G__17445 = p;
var G__17446 = q;
var G__17447 = r;
var G__17448 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17430,G__17431,G__17432,G__17433,G__17434,G__17435,G__17436,G__17437,G__17438,G__17439,G__17440,G__17441,G__17442,G__17443,G__17444,G__17445,G__17446,G__17447,G__17448) : self__.dispatch_fn.call(null,G__17430,G__17431,G__17432,G__17433,G__17434,G__17435,G__17436,G__17437,G__17438,G__17439,G__17440,G__17441,G__17442,G__17443,G__17444,G__17445,G__17446,G__17447,G__17448));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17449 = a;
var G__17450 = b;
var G__17451 = c;
var G__17452 = d;
var G__17453 = e;
var G__17454 = f;
var G__17455 = g;
var G__17456 = h;
var G__17457 = i;
var G__17458 = j;
var G__17459 = k;
var G__17460 = l;
var G__17461 = m;
var G__17462 = n;
var G__17463 = o;
var G__17464 = p;
var G__17465 = q;
var G__17466 = r;
var G__17467 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17449,G__17450,G__17451,G__17452,G__17453,G__17454,G__17455,G__17456,G__17457,G__17458,G__17459,G__17460,G__17461,G__17462,G__17463,G__17464,G__17465,G__17466,G__17467) : target_fn.call(null,G__17449,G__17450,G__17451,G__17452,G__17453,G__17454,G__17455,G__17456,G__17457,G__17458,G__17459,G__17460,G__17461,G__17462,G__17463,G__17464,G__17465,G__17466,G__17467));
});
var G__17935__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17468 = a;
var G__17469 = b;
var G__17470 = c;
var G__17471 = d;
var G__17472 = e;
var G__17473 = f;
var G__17474 = g;
var G__17475 = h;
var G__17476 = i;
var G__17477 = j;
var G__17478 = k;
var G__17479 = l;
var G__17480 = m;
var G__17481 = n;
var G__17482 = o;
var G__17483 = p;
var G__17484 = q;
var G__17485 = r;
var G__17486 = s;
var G__17487 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17468,G__17469,G__17470,G__17471,G__17472,G__17473,G__17474,G__17475,G__17476,G__17477,G__17478,G__17479,G__17480,G__17481,G__17482,G__17483,G__17484,G__17485,G__17486,G__17487) : self__.dispatch_fn.call(null,G__17468,G__17469,G__17470,G__17471,G__17472,G__17473,G__17474,G__17475,G__17476,G__17477,G__17478,G__17479,G__17480,G__17481,G__17482,G__17483,G__17484,G__17485,G__17486,G__17487));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17488 = a;
var G__17489 = b;
var G__17490 = c;
var G__17491 = d;
var G__17492 = e;
var G__17493 = f;
var G__17494 = g;
var G__17495 = h;
var G__17496 = i;
var G__17497 = j;
var G__17498 = k;
var G__17499 = l;
var G__17500 = m;
var G__17501 = n;
var G__17502 = o;
var G__17503 = p;
var G__17504 = q;
var G__17505 = r;
var G__17506 = s;
var G__17507 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17488,G__17489,G__17490,G__17491,G__17492,G__17493,G__17494,G__17495,G__17496,G__17497,G__17498,G__17499,G__17500,G__17501,G__17502,G__17503,G__17504,G__17505,G__17506,G__17507) : target_fn.call(null,G__17488,G__17489,G__17490,G__17491,G__17492,G__17493,G__17494,G__17495,G__17496,G__17497,G__17498,G__17499,G__17500,G__17501,G__17502,G__17503,G__17504,G__17505,G__17506,G__17507));
});
var G__17935__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__17935 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__17935__1.call(this,self__);
case 2:
return G__17935__2.call(this,self__,a);
case 3:
return G__17935__3.call(this,self__,a,b);
case 4:
return G__17935__4.call(this,self__,a,b,c);
case 5:
return G__17935__5.call(this,self__,a,b,c,d);
case 6:
return G__17935__6.call(this,self__,a,b,c,d,e);
case 7:
return G__17935__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__17935__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__17935__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__17935__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__17935__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__17935__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__17935__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__17935__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__17935__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__17935__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__17935__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__17935__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__17935__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__17935__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__17935__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__17935__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17935.cljs$core$IFn$_invoke$arity$1 = G__17935__1;
G__17935.cljs$core$IFn$_invoke$arity$2 = G__17935__2;
G__17935.cljs$core$IFn$_invoke$arity$3 = G__17935__3;
G__17935.cljs$core$IFn$_invoke$arity$4 = G__17935__4;
G__17935.cljs$core$IFn$_invoke$arity$5 = G__17935__5;
G__17935.cljs$core$IFn$_invoke$arity$6 = G__17935__6;
G__17935.cljs$core$IFn$_invoke$arity$7 = G__17935__7;
G__17935.cljs$core$IFn$_invoke$arity$8 = G__17935__8;
G__17935.cljs$core$IFn$_invoke$arity$9 = G__17935__9;
G__17935.cljs$core$IFn$_invoke$arity$10 = G__17935__10;
G__17935.cljs$core$IFn$_invoke$arity$11 = G__17935__11;
G__17935.cljs$core$IFn$_invoke$arity$12 = G__17935__12;
G__17935.cljs$core$IFn$_invoke$arity$13 = G__17935__13;
G__17935.cljs$core$IFn$_invoke$arity$14 = G__17935__14;
G__17935.cljs$core$IFn$_invoke$arity$15 = G__17935__15;
G__17935.cljs$core$IFn$_invoke$arity$16 = G__17935__16;
G__17935.cljs$core$IFn$_invoke$arity$17 = G__17935__17;
G__17935.cljs$core$IFn$_invoke$arity$18 = G__17935__18;
G__17935.cljs$core$IFn$_invoke$arity$19 = G__17935__19;
G__17935.cljs$core$IFn$_invoke$arity$20 = G__17935__20;
G__17935.cljs$core$IFn$_invoke$arity$21 = G__17935__21;
G__17935.cljs$core$IFn$_invoke$arity$22 = G__17935__22;
return G__17935;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args17087){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17087)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17508 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__17508) : self__.dispatch_fn.call(null,G__17508));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17509 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__17509) : target_fn.call(null,G__17509));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17510 = a;
var G__17511 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__17510,G__17511) : self__.dispatch_fn.call(null,G__17510,G__17511));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17512 = a;
var G__17513 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__17512,G__17513) : target_fn.call(null,G__17512,G__17513));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17514 = a;
var G__17515 = b;
var G__17516 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__17514,G__17515,G__17516) : self__.dispatch_fn.call(null,G__17514,G__17515,G__17516));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17517 = a;
var G__17518 = b;
var G__17519 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__17517,G__17518,G__17519) : target_fn.call(null,G__17517,G__17518,G__17519));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17520 = a;
var G__17521 = b;
var G__17522 = c;
var G__17523 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17520,G__17521,G__17522,G__17523) : self__.dispatch_fn.call(null,G__17520,G__17521,G__17522,G__17523));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17524 = a;
var G__17525 = b;
var G__17526 = c;
var G__17527 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17524,G__17525,G__17526,G__17527) : target_fn.call(null,G__17524,G__17525,G__17526,G__17527));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17528 = a;
var G__17529 = b;
var G__17530 = c;
var G__17531 = d;
var G__17532 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17528,G__17529,G__17530,G__17531,G__17532) : self__.dispatch_fn.call(null,G__17528,G__17529,G__17530,G__17531,G__17532));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17533 = a;
var G__17534 = b;
var G__17535 = c;
var G__17536 = d;
var G__17537 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17533,G__17534,G__17535,G__17536,G__17537) : target_fn.call(null,G__17533,G__17534,G__17535,G__17536,G__17537));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17538 = a;
var G__17539 = b;
var G__17540 = c;
var G__17541 = d;
var G__17542 = e;
var G__17543 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17538,G__17539,G__17540,G__17541,G__17542,G__17543) : self__.dispatch_fn.call(null,G__17538,G__17539,G__17540,G__17541,G__17542,G__17543));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17544 = a;
var G__17545 = b;
var G__17546 = c;
var G__17547 = d;
var G__17548 = e;
var G__17549 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17544,G__17545,G__17546,G__17547,G__17548,G__17549) : target_fn.call(null,G__17544,G__17545,G__17546,G__17547,G__17548,G__17549));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17550 = a;
var G__17551 = b;
var G__17552 = c;
var G__17553 = d;
var G__17554 = e;
var G__17555 = f;
var G__17556 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17550,G__17551,G__17552,G__17553,G__17554,G__17555,G__17556) : self__.dispatch_fn.call(null,G__17550,G__17551,G__17552,G__17553,G__17554,G__17555,G__17556));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17557 = a;
var G__17558 = b;
var G__17559 = c;
var G__17560 = d;
var G__17561 = e;
var G__17562 = f;
var G__17563 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__17557,G__17558,G__17559,G__17560,G__17561,G__17562,G__17563) : target_fn.call(null,G__17557,G__17558,G__17559,G__17560,G__17561,G__17562,G__17563));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17564 = a;
var G__17565 = b;
var G__17566 = c;
var G__17567 = d;
var G__17568 = e;
var G__17569 = f;
var G__17570 = g;
var G__17571 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__17564,G__17565,G__17566,G__17567,G__17568,G__17569,G__17570,G__17571) : self__.dispatch_fn.call(null,G__17564,G__17565,G__17566,G__17567,G__17568,G__17569,G__17570,G__17571));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17572 = a;
var G__17573 = b;
var G__17574 = c;
var G__17575 = d;
var G__17576 = e;
var G__17577 = f;
var G__17578 = g;
var G__17579 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__17572,G__17573,G__17574,G__17575,G__17576,G__17577,G__17578,G__17579) : target_fn.call(null,G__17572,G__17573,G__17574,G__17575,G__17576,G__17577,G__17578,G__17579));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17580 = a;
var G__17581 = b;
var G__17582 = c;
var G__17583 = d;
var G__17584 = e;
var G__17585 = f;
var G__17586 = g;
var G__17587 = h;
var G__17588 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__17580,G__17581,G__17582,G__17583,G__17584,G__17585,G__17586,G__17587,G__17588) : self__.dispatch_fn.call(null,G__17580,G__17581,G__17582,G__17583,G__17584,G__17585,G__17586,G__17587,G__17588));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17589 = a;
var G__17590 = b;
var G__17591 = c;
var G__17592 = d;
var G__17593 = e;
var G__17594 = f;
var G__17595 = g;
var G__17596 = h;
var G__17597 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__17589,G__17590,G__17591,G__17592,G__17593,G__17594,G__17595,G__17596,G__17597) : target_fn.call(null,G__17589,G__17590,G__17591,G__17592,G__17593,G__17594,G__17595,G__17596,G__17597));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17598 = a;
var G__17599 = b;
var G__17600 = c;
var G__17601 = d;
var G__17602 = e;
var G__17603 = f;
var G__17604 = g;
var G__17605 = h;
var G__17606 = i;
var G__17607 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__17598,G__17599,G__17600,G__17601,G__17602,G__17603,G__17604,G__17605,G__17606,G__17607) : self__.dispatch_fn.call(null,G__17598,G__17599,G__17600,G__17601,G__17602,G__17603,G__17604,G__17605,G__17606,G__17607));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17608 = a;
var G__17609 = b;
var G__17610 = c;
var G__17611 = d;
var G__17612 = e;
var G__17613 = f;
var G__17614 = g;
var G__17615 = h;
var G__17616 = i;
var G__17617 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__17608,G__17609,G__17610,G__17611,G__17612,G__17613,G__17614,G__17615,G__17616,G__17617) : target_fn.call(null,G__17608,G__17609,G__17610,G__17611,G__17612,G__17613,G__17614,G__17615,G__17616,G__17617));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17618 = a;
var G__17619 = b;
var G__17620 = c;
var G__17621 = d;
var G__17622 = e;
var G__17623 = f;
var G__17624 = g;
var G__17625 = h;
var G__17626 = i;
var G__17627 = j;
var G__17628 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__17618,G__17619,G__17620,G__17621,G__17622,G__17623,G__17624,G__17625,G__17626,G__17627,G__17628) : self__.dispatch_fn.call(null,G__17618,G__17619,G__17620,G__17621,G__17622,G__17623,G__17624,G__17625,G__17626,G__17627,G__17628));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17629 = a;
var G__17630 = b;
var G__17631 = c;
var G__17632 = d;
var G__17633 = e;
var G__17634 = f;
var G__17635 = g;
var G__17636 = h;
var G__17637 = i;
var G__17638 = j;
var G__17639 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__17629,G__17630,G__17631,G__17632,G__17633,G__17634,G__17635,G__17636,G__17637,G__17638,G__17639) : target_fn.call(null,G__17629,G__17630,G__17631,G__17632,G__17633,G__17634,G__17635,G__17636,G__17637,G__17638,G__17639));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17640 = a;
var G__17641 = b;
var G__17642 = c;
var G__17643 = d;
var G__17644 = e;
var G__17645 = f;
var G__17646 = g;
var G__17647 = h;
var G__17648 = i;
var G__17649 = j;
var G__17650 = k;
var G__17651 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17640,G__17641,G__17642,G__17643,G__17644,G__17645,G__17646,G__17647,G__17648,G__17649,G__17650,G__17651) : self__.dispatch_fn.call(null,G__17640,G__17641,G__17642,G__17643,G__17644,G__17645,G__17646,G__17647,G__17648,G__17649,G__17650,G__17651));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17652 = a;
var G__17653 = b;
var G__17654 = c;
var G__17655 = d;
var G__17656 = e;
var G__17657 = f;
var G__17658 = g;
var G__17659 = h;
var G__17660 = i;
var G__17661 = j;
var G__17662 = k;
var G__17663 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17652,G__17653,G__17654,G__17655,G__17656,G__17657,G__17658,G__17659,G__17660,G__17661,G__17662,G__17663) : target_fn.call(null,G__17652,G__17653,G__17654,G__17655,G__17656,G__17657,G__17658,G__17659,G__17660,G__17661,G__17662,G__17663));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17664 = a;
var G__17665 = b;
var G__17666 = c;
var G__17667 = d;
var G__17668 = e;
var G__17669 = f;
var G__17670 = g;
var G__17671 = h;
var G__17672 = i;
var G__17673 = j;
var G__17674 = k;
var G__17675 = l;
var G__17676 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17664,G__17665,G__17666,G__17667,G__17668,G__17669,G__17670,G__17671,G__17672,G__17673,G__17674,G__17675,G__17676) : self__.dispatch_fn.call(null,G__17664,G__17665,G__17666,G__17667,G__17668,G__17669,G__17670,G__17671,G__17672,G__17673,G__17674,G__17675,G__17676));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17677 = a;
var G__17678 = b;
var G__17679 = c;
var G__17680 = d;
var G__17681 = e;
var G__17682 = f;
var G__17683 = g;
var G__17684 = h;
var G__17685 = i;
var G__17686 = j;
var G__17687 = k;
var G__17688 = l;
var G__17689 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17677,G__17678,G__17679,G__17680,G__17681,G__17682,G__17683,G__17684,G__17685,G__17686,G__17687,G__17688,G__17689) : target_fn.call(null,G__17677,G__17678,G__17679,G__17680,G__17681,G__17682,G__17683,G__17684,G__17685,G__17686,G__17687,G__17688,G__17689));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17690 = a;
var G__17691 = b;
var G__17692 = c;
var G__17693 = d;
var G__17694 = e;
var G__17695 = f;
var G__17696 = g;
var G__17697 = h;
var G__17698 = i;
var G__17699 = j;
var G__17700 = k;
var G__17701 = l;
var G__17702 = m;
var G__17703 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17690,G__17691,G__17692,G__17693,G__17694,G__17695,G__17696,G__17697,G__17698,G__17699,G__17700,G__17701,G__17702,G__17703) : self__.dispatch_fn.call(null,G__17690,G__17691,G__17692,G__17693,G__17694,G__17695,G__17696,G__17697,G__17698,G__17699,G__17700,G__17701,G__17702,G__17703));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17704 = a;
var G__17705 = b;
var G__17706 = c;
var G__17707 = d;
var G__17708 = e;
var G__17709 = f;
var G__17710 = g;
var G__17711 = h;
var G__17712 = i;
var G__17713 = j;
var G__17714 = k;
var G__17715 = l;
var G__17716 = m;
var G__17717 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17704,G__17705,G__17706,G__17707,G__17708,G__17709,G__17710,G__17711,G__17712,G__17713,G__17714,G__17715,G__17716,G__17717) : target_fn.call(null,G__17704,G__17705,G__17706,G__17707,G__17708,G__17709,G__17710,G__17711,G__17712,G__17713,G__17714,G__17715,G__17716,G__17717));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17718 = a;
var G__17719 = b;
var G__17720 = c;
var G__17721 = d;
var G__17722 = e;
var G__17723 = f;
var G__17724 = g;
var G__17725 = h;
var G__17726 = i;
var G__17727 = j;
var G__17728 = k;
var G__17729 = l;
var G__17730 = m;
var G__17731 = n;
var G__17732 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17718,G__17719,G__17720,G__17721,G__17722,G__17723,G__17724,G__17725,G__17726,G__17727,G__17728,G__17729,G__17730,G__17731,G__17732) : self__.dispatch_fn.call(null,G__17718,G__17719,G__17720,G__17721,G__17722,G__17723,G__17724,G__17725,G__17726,G__17727,G__17728,G__17729,G__17730,G__17731,G__17732));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17733 = a;
var G__17734 = b;
var G__17735 = c;
var G__17736 = d;
var G__17737 = e;
var G__17738 = f;
var G__17739 = g;
var G__17740 = h;
var G__17741 = i;
var G__17742 = j;
var G__17743 = k;
var G__17744 = l;
var G__17745 = m;
var G__17746 = n;
var G__17747 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17733,G__17734,G__17735,G__17736,G__17737,G__17738,G__17739,G__17740,G__17741,G__17742,G__17743,G__17744,G__17745,G__17746,G__17747) : target_fn.call(null,G__17733,G__17734,G__17735,G__17736,G__17737,G__17738,G__17739,G__17740,G__17741,G__17742,G__17743,G__17744,G__17745,G__17746,G__17747));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17748 = a;
var G__17749 = b;
var G__17750 = c;
var G__17751 = d;
var G__17752 = e;
var G__17753 = f;
var G__17754 = g;
var G__17755 = h;
var G__17756 = i;
var G__17757 = j;
var G__17758 = k;
var G__17759 = l;
var G__17760 = m;
var G__17761 = n;
var G__17762 = o;
var G__17763 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17748,G__17749,G__17750,G__17751,G__17752,G__17753,G__17754,G__17755,G__17756,G__17757,G__17758,G__17759,G__17760,G__17761,G__17762,G__17763) : self__.dispatch_fn.call(null,G__17748,G__17749,G__17750,G__17751,G__17752,G__17753,G__17754,G__17755,G__17756,G__17757,G__17758,G__17759,G__17760,G__17761,G__17762,G__17763));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17764 = a;
var G__17765 = b;
var G__17766 = c;
var G__17767 = d;
var G__17768 = e;
var G__17769 = f;
var G__17770 = g;
var G__17771 = h;
var G__17772 = i;
var G__17773 = j;
var G__17774 = k;
var G__17775 = l;
var G__17776 = m;
var G__17777 = n;
var G__17778 = o;
var G__17779 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17764,G__17765,G__17766,G__17767,G__17768,G__17769,G__17770,G__17771,G__17772,G__17773,G__17774,G__17775,G__17776,G__17777,G__17778,G__17779) : target_fn.call(null,G__17764,G__17765,G__17766,G__17767,G__17768,G__17769,G__17770,G__17771,G__17772,G__17773,G__17774,G__17775,G__17776,G__17777,G__17778,G__17779));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17780 = a;
var G__17781 = b;
var G__17782 = c;
var G__17783 = d;
var G__17784 = e;
var G__17785 = f;
var G__17786 = g;
var G__17787 = h;
var G__17788 = i;
var G__17789 = j;
var G__17790 = k;
var G__17791 = l;
var G__17792 = m;
var G__17793 = n;
var G__17794 = o;
var G__17795 = p;
var G__17796 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17780,G__17781,G__17782,G__17783,G__17784,G__17785,G__17786,G__17787,G__17788,G__17789,G__17790,G__17791,G__17792,G__17793,G__17794,G__17795,G__17796) : self__.dispatch_fn.call(null,G__17780,G__17781,G__17782,G__17783,G__17784,G__17785,G__17786,G__17787,G__17788,G__17789,G__17790,G__17791,G__17792,G__17793,G__17794,G__17795,G__17796));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17797 = a;
var G__17798 = b;
var G__17799 = c;
var G__17800 = d;
var G__17801 = e;
var G__17802 = f;
var G__17803 = g;
var G__17804 = h;
var G__17805 = i;
var G__17806 = j;
var G__17807 = k;
var G__17808 = l;
var G__17809 = m;
var G__17810 = n;
var G__17811 = o;
var G__17812 = p;
var G__17813 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17797,G__17798,G__17799,G__17800,G__17801,G__17802,G__17803,G__17804,G__17805,G__17806,G__17807,G__17808,G__17809,G__17810,G__17811,G__17812,G__17813) : target_fn.call(null,G__17797,G__17798,G__17799,G__17800,G__17801,G__17802,G__17803,G__17804,G__17805,G__17806,G__17807,G__17808,G__17809,G__17810,G__17811,G__17812,G__17813));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17814 = a;
var G__17815 = b;
var G__17816 = c;
var G__17817 = d;
var G__17818 = e;
var G__17819 = f;
var G__17820 = g;
var G__17821 = h;
var G__17822 = i;
var G__17823 = j;
var G__17824 = k;
var G__17825 = l;
var G__17826 = m;
var G__17827 = n;
var G__17828 = o;
var G__17829 = p;
var G__17830 = q;
var G__17831 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17814,G__17815,G__17816,G__17817,G__17818,G__17819,G__17820,G__17821,G__17822,G__17823,G__17824,G__17825,G__17826,G__17827,G__17828,G__17829,G__17830,G__17831) : self__.dispatch_fn.call(null,G__17814,G__17815,G__17816,G__17817,G__17818,G__17819,G__17820,G__17821,G__17822,G__17823,G__17824,G__17825,G__17826,G__17827,G__17828,G__17829,G__17830,G__17831));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17832 = a;
var G__17833 = b;
var G__17834 = c;
var G__17835 = d;
var G__17836 = e;
var G__17837 = f;
var G__17838 = g;
var G__17839 = h;
var G__17840 = i;
var G__17841 = j;
var G__17842 = k;
var G__17843 = l;
var G__17844 = m;
var G__17845 = n;
var G__17846 = o;
var G__17847 = p;
var G__17848 = q;
var G__17849 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17832,G__17833,G__17834,G__17835,G__17836,G__17837,G__17838,G__17839,G__17840,G__17841,G__17842,G__17843,G__17844,G__17845,G__17846,G__17847,G__17848,G__17849) : target_fn.call(null,G__17832,G__17833,G__17834,G__17835,G__17836,G__17837,G__17838,G__17839,G__17840,G__17841,G__17842,G__17843,G__17844,G__17845,G__17846,G__17847,G__17848,G__17849));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17850 = a;
var G__17851 = b;
var G__17852 = c;
var G__17853 = d;
var G__17854 = e;
var G__17855 = f;
var G__17856 = g;
var G__17857 = h;
var G__17858 = i;
var G__17859 = j;
var G__17860 = k;
var G__17861 = l;
var G__17862 = m;
var G__17863 = n;
var G__17864 = o;
var G__17865 = p;
var G__17866 = q;
var G__17867 = r;
var G__17868 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17850,G__17851,G__17852,G__17853,G__17854,G__17855,G__17856,G__17857,G__17858,G__17859,G__17860,G__17861,G__17862,G__17863,G__17864,G__17865,G__17866,G__17867,G__17868) : self__.dispatch_fn.call(null,G__17850,G__17851,G__17852,G__17853,G__17854,G__17855,G__17856,G__17857,G__17858,G__17859,G__17860,G__17861,G__17862,G__17863,G__17864,G__17865,G__17866,G__17867,G__17868));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17869 = a;
var G__17870 = b;
var G__17871 = c;
var G__17872 = d;
var G__17873 = e;
var G__17874 = f;
var G__17875 = g;
var G__17876 = h;
var G__17877 = i;
var G__17878 = j;
var G__17879 = k;
var G__17880 = l;
var G__17881 = m;
var G__17882 = n;
var G__17883 = o;
var G__17884 = p;
var G__17885 = q;
var G__17886 = r;
var G__17887 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17869,G__17870,G__17871,G__17872,G__17873,G__17874,G__17875,G__17876,G__17877,G__17878,G__17879,G__17880,G__17881,G__17882,G__17883,G__17884,G__17885,G__17886,G__17887) : target_fn.call(null,G__17869,G__17870,G__17871,G__17872,G__17873,G__17874,G__17875,G__17876,G__17877,G__17878,G__17879,G__17880,G__17881,G__17882,G__17883,G__17884,G__17885,G__17886,G__17887));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17888 = a;
var G__17889 = b;
var G__17890 = c;
var G__17891 = d;
var G__17892 = e;
var G__17893 = f;
var G__17894 = g;
var G__17895 = h;
var G__17896 = i;
var G__17897 = j;
var G__17898 = k;
var G__17899 = l;
var G__17900 = m;
var G__17901 = n;
var G__17902 = o;
var G__17903 = p;
var G__17904 = q;
var G__17905 = r;
var G__17906 = s;
var G__17907 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17888,G__17889,G__17890,G__17891,G__17892,G__17893,G__17894,G__17895,G__17896,G__17897,G__17898,G__17899,G__17900,G__17901,G__17902,G__17903,G__17904,G__17905,G__17906,G__17907) : self__.dispatch_fn.call(null,G__17888,G__17889,G__17890,G__17891,G__17892,G__17893,G__17894,G__17895,G__17896,G__17897,G__17898,G__17899,G__17900,G__17901,G__17902,G__17903,G__17904,G__17905,G__17906,G__17907));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17908 = a;
var G__17909 = b;
var G__17910 = c;
var G__17911 = d;
var G__17912 = e;
var G__17913 = f;
var G__17914 = g;
var G__17915 = h;
var G__17916 = i;
var G__17917 = j;
var G__17918 = k;
var G__17919 = l;
var G__17920 = m;
var G__17921 = n;
var G__17922 = o;
var G__17923 = p;
var G__17924 = q;
var G__17925 = r;
var G__17926 = s;
var G__17927 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17908,G__17909,G__17910,G__17911,G__17912,G__17913,G__17914,G__17915,G__17916,G__17917,G__17918,G__17919,G__17920,G__17921,G__17922,G__17923,G__17924,G__17925,G__17926,G__17927) : target_fn.call(null,G__17908,G__17909,G__17910,G__17911,G__17912,G__17913,G__17914,G__17915,G__17916,G__17917,G__17918,G__17919,G__17920,G__17921,G__17922,G__17923,G__17924,G__17925,G__17926,G__17927));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__17928 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17928) : cljs.core.deref.call(null,G__17928));
})(),(function (){var G__17929 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17929) : cljs.core.deref.call(null,G__17929));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4421__auto__ = (function (){var G__17930 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17930) : cljs.core.deref.call(null,G__17930));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4421__auto__)){
var target_fn = temp__4421__auto__;
return target_fn;
} else {
var temp__4421__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4421__auto____$1)){
var target_fn = temp__4421__auto____$1;
return target_fn;
} else {
return (function (){var G__17931 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17931) : cljs.core.deref.call(null,G__17931));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__17932 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17932) : cljs.core.deref.call(null,G__17932));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__17933 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17933) : cljs.core.deref.call(null,G__17933));
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__17934 = this$__$1;
return goog.getUid(G__17934);
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__17936 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__17936);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4352__auto__,writer__4353__auto__,opt__4354__auto__){
return cljs.core._write(writer__4353__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__17941 = msg;
return Error(G__17941);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__17946 = x;
var G__17947 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17946,G__17947) : pred.call(null,G__17946,G__17947));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__17948 = y;
var G__17949 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17948,G__17949) : pred.call(null,G__17948,G__17949));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$15;
} else {
return cljs.core.constant$keyword$16;
}
});
