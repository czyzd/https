// Compiled by ClojureScript 0.0-2814 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2814";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__6281__delegate = function (args){
return console.log.apply(console,(function (){var G__6280 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__6280) : cljs.core.into_array.call(null,G__6280));
})());
};
var G__6281 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__6282__i = 0, G__6282__a = new Array(arguments.length -  0);
while (G__6282__i < G__6282__a.length) {G__6282__a[G__6282__i] = arguments[G__6282__i + 0]; ++G__6282__i;}
  args = new cljs.core.IndexedSeq(G__6282__a,0);
} 
return G__6281__delegate.call(this,args);};
G__6281.cljs$lang$maxFixedArity = 0;
G__6281.cljs$lang$applyTo = (function (arglist__6283){
var args = cljs.core.seq(arglist__6283);
return G__6281__delegate(args);
});
G__6281.cljs$core$IFn$_invoke$arity$variadic = G__6281__delegate;
return G__6281;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__6285 = x;
return goog.isString(G__6285);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__6287 = x__$1;
return goog.typeOf(G__6287);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3752__auto__ = ty;
if(cljs.core.truth_(and__3752__auto__)){
return ty.cljs$lang$type;
} else {
return and__3752__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__6289 = obj;
return goog.typeOf(G__6289);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__6291 = Symbol;
return goog.typeOf(G__6291);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4651__auto___6293 = len;
var i_6294 = (0);
while(true){
if((i_6294 < n__4651__auto___6293)){
(new_arr[i_6294] = (arr[i_6294]));

var G__6295 = (i_6294 + (1));
i_6294 = G__6295;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__6296 = (i + (1));
i = G__6296;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__6305__delegate = function (array,i,idxs){
var G__6302 = aget;
var G__6303 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__6304 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__6302,G__6303,G__6304) : cljs.core.apply.call(null,G__6302,G__6303,G__6304));
};
var G__6305 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__6306__i = 0, G__6306__a = new Array(arguments.length -  2);
while (G__6306__i < G__6306__a.length) {G__6306__a[G__6306__i] = arguments[G__6306__i + 2]; ++G__6306__i;}
  idxs = new cljs.core.IndexedSeq(G__6306__a,0);
} 
return G__6305__delegate.call(this,array,i,idxs);};
G__6305.cljs$lang$maxFixedArity = 2;
G__6305.cljs$lang$applyTo = (function (arglist__6307){
var array = cljs.core.first(arglist__6307);
arglist__6307 = cljs.core.next(arglist__6307);
var i = cljs.core.first(arglist__6307);
var idxs = cljs.core.rest(arglist__6307);
return G__6305__delegate(array,i,idxs);
});
G__6305.cljs$core$IFn$_invoke$arity$variadic = G__6305__delegate;
return G__6305;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__6308 = null;
if (arguments.length > 2) {
var G__6309__i = 0, G__6309__a = new Array(arguments.length -  2);
while (G__6309__i < G__6309__a.length) {G__6309__a[G__6309__i] = arguments[G__6309__i + 2]; ++G__6309__i;}
G__6308 = new cljs.core.IndexedSeq(G__6309__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__6308);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__6318__delegate = function (array,idx,idx2,idxv){
var G__6314 = aset;
var G__6315 = (array[idx]);
var G__6316 = idx2;
var G__6317 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__6314,G__6315,G__6316,G__6317) : cljs.core.apply.call(null,G__6314,G__6315,G__6316,G__6317));
};
var G__6318 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__6319__i = 0, G__6319__a = new Array(arguments.length -  3);
while (G__6319__i < G__6319__a.length) {G__6319__a[G__6319__i] = arguments[G__6319__i + 3]; ++G__6319__i;}
  idxv = new cljs.core.IndexedSeq(G__6319__a,0);
} 
return G__6318__delegate.call(this,array,idx,idx2,idxv);};
G__6318.cljs$lang$maxFixedArity = 3;
G__6318.cljs$lang$applyTo = (function (arglist__6320){
var array = cljs.core.first(arglist__6320);
arglist__6320 = cljs.core.next(arglist__6320);
var idx = cljs.core.first(arglist__6320);
arglist__6320 = cljs.core.next(arglist__6320);
var idx2 = cljs.core.first(arglist__6320);
var idxv = cljs.core.rest(arglist__6320);
return G__6318__delegate(array,idx,idx2,idxv);
});
G__6318.cljs$core$IFn$_invoke$arity$variadic = G__6318__delegate;
return G__6318;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__6321 = null;
if (arguments.length > 3) {
var G__6322__i = 0, G__6322__a = new Array(arguments.length -  3);
while (G__6322__i < G__6322__a.length) {G__6322__a[G__6322__i] = arguments[G__6322__i + 3]; ++G__6322__i;}
G__6321 = new cljs.core.IndexedSeq(G__6322__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__6321);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__6328 = (function (a,x){
a.push(x);

return a;
});
var G__6329 = [];
var G__6330 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6328,G__6329,G__6330) : cljs.core.reduce.call(null,G__6328,G__6329,G__6330));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__6331__i = 0, G__6331__a = new Array(arguments.length -  2);
while (G__6331__i < G__6331__a.length) {G__6331__a[G__6331__i] = arguments[G__6331__i + 2]; ++G__6331__i;}
  args = new cljs.core.IndexedSeq(G__6331__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__6332){
var obj = cljs.core.first(arglist__6332);
arglist__6332 = cljs.core.next(arglist__6332);
var s = cljs.core.first(arglist__6332);
var args = cljs.core.rest(arglist__6332);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj6334 = {};
return obj6334;
})();


cljs.core.IFn = (function (){var obj6336 = {};
return obj6336;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6382 = x__4408__auto__;
return goog.typeOf(G__6382);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6384 = x__4408__auto__;
return goog.typeOf(G__6384);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6386 = x__4408__auto__;
return goog.typeOf(G__6386);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6388 = x__4408__auto__;
return goog.typeOf(G__6388);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6390 = x__4408__auto__;
return goog.typeOf(G__6390);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6392 = x__4408__auto__;
return goog.typeOf(G__6392);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6394 = x__4408__auto__;
return goog.typeOf(G__6394);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6396 = x__4408__auto__;
return goog.typeOf(G__6396);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6398 = x__4408__auto__;
return goog.typeOf(G__6398);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6400 = x__4408__auto__;
return goog.typeOf(G__6400);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6402 = x__4408__auto__;
return goog.typeOf(G__6402);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6404 = x__4408__auto__;
return goog.typeOf(G__6404);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6406 = x__4408__auto__;
return goog.typeOf(G__6406);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6408 = x__4408__auto__;
return goog.typeOf(G__6408);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6410 = x__4408__auto__;
return goog.typeOf(G__6410);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6412 = x__4408__auto__;
return goog.typeOf(G__6412);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6414 = x__4408__auto__;
return goog.typeOf(G__6414);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6416 = x__4408__auto__;
return goog.typeOf(G__6416);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6418 = x__4408__auto__;
return goog.typeOf(G__6418);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6420 = x__4408__auto__;
return goog.typeOf(G__6420);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6422 = x__4408__auto__;
return goog.typeOf(G__6422);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__6424 = x__4408__auto__;
return goog.typeOf(G__6424);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj6426 = {};
return obj6426;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3752__auto__ = value;
if(and__3752__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3752__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4408__auto__ = (((value == null))?null:value);
return (function (){var or__3764__auto__ = (cljs.core._clone[(function (){var G__6430 = x__4408__auto__;
return goog.typeOf(G__6430);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._clone["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj6432 = {};
return obj6432;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._count[(function (){var G__6436 = x__4408__auto__;
return goog.typeOf(G__6436);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._count["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj6438 = {};
return obj6438;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._empty[(function (){var G__6442 = x__4408__auto__;
return goog.typeOf(G__6442);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._empty["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj6444 = {};
return obj6444;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._conj[(function (){var G__6448 = x__4408__auto__;
return goog.typeOf(G__6448);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._conj["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj6450 = {};
return obj6450;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._nth[(function (){var G__6456 = x__4408__auto__;
return goog.typeOf(G__6456);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._nth["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._nth[(function (){var G__6458 = x__4408__auto__;
return goog.typeOf(G__6458);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._nth["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj6460 = {};
return obj6460;
})();


cljs.core.ISeq = (function (){var obj6462 = {};
return obj6462;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._first[(function (){var G__6466 = x__4408__auto__;
return goog.typeOf(G__6466);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._first["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._rest[(function (){var G__6470 = x__4408__auto__;
return goog.typeOf(G__6470);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._rest["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj6472 = {};
return obj6472;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._next[(function (){var G__6476 = x__4408__auto__;
return goog.typeOf(G__6476);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._next["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj6478 = {};
return obj6478;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._lookup[(function (){var G__6484 = x__4408__auto__;
return goog.typeOf(G__6484);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._lookup["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._lookup[(function (){var G__6486 = x__4408__auto__;
return goog.typeOf(G__6486);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._lookup["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj6488 = {};
return obj6488;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__6492 = x__4408__auto__;
return goog.typeOf(G__6492);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._assoc[(function (){var G__6496 = x__4408__auto__;
return goog.typeOf(G__6496);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._assoc["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj6498 = {};
return obj6498;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._dissoc[(function (){var G__6502 = x__4408__auto__;
return goog.typeOf(G__6502);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj6504 = {};
return obj6504;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._key[(function (){var G__6508 = x__4408__auto__;
return goog.typeOf(G__6508);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._key["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._val[(function (){var G__6512 = x__4408__auto__;
return goog.typeOf(G__6512);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._val["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj6514 = {};
return obj6514;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._disjoin[(function (){var G__6518 = x__4408__auto__;
return goog.typeOf(G__6518);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj6520 = {};
return obj6520;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._peek[(function (){var G__6524 = x__4408__auto__;
return goog.typeOf(G__6524);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._peek["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._pop[(function (){var G__6528 = x__4408__auto__;
return goog.typeOf(G__6528);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._pop["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj6530 = {};
return obj6530;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._assoc_n[(function (){var G__6534 = x__4408__auto__;
return goog.typeOf(G__6534);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj6536 = {};
return obj6536;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._deref[(function (){var G__6540 = x__4408__auto__;
return goog.typeOf(G__6540);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._deref["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj6542 = {};
return obj6542;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._deref_with_timeout[(function (){var G__6546 = x__4408__auto__;
return goog.typeOf(G__6546);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj6548 = {};
return obj6548;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._meta[(function (){var G__6552 = x__4408__auto__;
return goog.typeOf(G__6552);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._meta["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj6554 = {};
return obj6554;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._with_meta[(function (){var G__6558 = x__4408__auto__;
return goog.typeOf(G__6558);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj6560 = {};
return obj6560;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._reduce[(function (){var G__6566 = x__4408__auto__;
return goog.typeOf(G__6566);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._reduce["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._reduce[(function (){var G__6568 = x__4408__auto__;
return goog.typeOf(G__6568);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._reduce["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj6570 = {};
return obj6570;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._kv_reduce[(function (){var G__6574 = x__4408__auto__;
return goog.typeOf(G__6574);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj6576 = {};
return obj6576;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._equiv[(function (){var G__6580 = x__4408__auto__;
return goog.typeOf(G__6580);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._equiv["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj6582 = {};
return obj6582;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._hash[(function (){var G__6586 = x__4408__auto__;
return goog.typeOf(G__6586);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._hash["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj6588 = {};
return obj6588;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._seq[(function (){var G__6592 = x__4408__auto__;
return goog.typeOf(G__6592);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._seq["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj6594 = {};
return obj6594;
})();


cljs.core.IList = (function (){var obj6596 = {};
return obj6596;
})();


cljs.core.IRecord = (function (){var obj6598 = {};
return obj6598;
})();


cljs.core.IReversible = (function (){var obj6600 = {};
return obj6600;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._rseq[(function (){var G__6604 = x__4408__auto__;
return goog.typeOf(G__6604);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._rseq["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj6606 = {};
return obj6606;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._sorted_seq[(function (){var G__6610 = x__4408__auto__;
return goog.typeOf(G__6610);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._sorted_seq_from[(function (){var G__6614 = x__4408__auto__;
return goog.typeOf(G__6614);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._entry_key[(function (){var G__6618 = x__4408__auto__;
return goog.typeOf(G__6618);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._comparator[(function (){var G__6622 = x__4408__auto__;
return goog.typeOf(G__6622);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._comparator["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj6624 = {};
return obj6624;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3752__auto__ = writer;
if(and__3752__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3752__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4408__auto__ = (((writer == null))?null:writer);
return (function (){var or__3764__auto__ = (cljs.core._write[(function (){var G__6628 = x__4408__auto__;
return goog.typeOf(G__6628);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._write["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3752__auto__ = writer;
if(and__3752__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3752__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4408__auto__ = (((writer == null))?null:writer);
return (function (){var or__3764__auto__ = (cljs.core._flush[(function (){var G__6632 = x__4408__auto__;
return goog.typeOf(G__6632);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._flush["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj6634 = {};
return obj6634;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._pr_writer[(function (){var G__6638 = x__4408__auto__;
return goog.typeOf(G__6638);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj6640 = {};
return obj6640;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3752__auto__ = d;
if(and__3752__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3752__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4408__auto__ = (((d == null))?null:d);
return (function (){var or__3764__auto__ = (cljs.core._realized_QMARK_[(function (){var G__6644 = x__4408__auto__;
return goog.typeOf(G__6644);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj6646 = {};
return obj6646;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._notify_watches[(function (){var G__6650 = x__4408__auto__;
return goog.typeOf(G__6650);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._add_watch[(function (){var G__6654 = x__4408__auto__;
return goog.typeOf(G__6654);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._remove_watch[(function (){var G__6658 = x__4408__auto__;
return goog.typeOf(G__6658);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj6660 = {};
return obj6660;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._as_transient[(function (){var G__6664 = x__4408__auto__;
return goog.typeOf(G__6664);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj6666 = {};
return obj6666;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3752__auto__ = tcoll;
if(and__3752__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3752__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4408__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3764__auto__ = (cljs.core._conj_BANG_[(function (){var G__6670 = x__4408__auto__;
return goog.typeOf(G__6670);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3752__auto__ = tcoll;
if(and__3752__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3752__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4408__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3764__auto__ = (cljs.core._persistent_BANG_[(function (){var G__6674 = x__4408__auto__;
return goog.typeOf(G__6674);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj6676 = {};
return obj6676;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3752__auto__ = tcoll;
if(and__3752__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3752__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4408__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3764__auto__ = (cljs.core._assoc_BANG_[(function (){var G__6680 = x__4408__auto__;
return goog.typeOf(G__6680);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj6682 = {};
return obj6682;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3752__auto__ = tcoll;
if(and__3752__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3752__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4408__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3764__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__6686 = x__4408__auto__;
return goog.typeOf(G__6686);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj6688 = {};
return obj6688;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3752__auto__ = tcoll;
if(and__3752__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3752__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4408__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3764__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__6692 = x__4408__auto__;
return goog.typeOf(G__6692);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3752__auto__ = tcoll;
if(and__3752__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3752__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4408__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3764__auto__ = (cljs.core._pop_BANG_[(function (){var G__6696 = x__4408__auto__;
return goog.typeOf(G__6696);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj6698 = {};
return obj6698;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3752__auto__ = tcoll;
if(and__3752__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3752__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4408__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3764__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__6702 = x__4408__auto__;
return goog.typeOf(G__6702);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj6704 = {};
return obj6704;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3752__auto__ = x;
if(and__3752__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3752__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4408__auto__ = (((x == null))?null:x);
return (function (){var or__3764__auto__ = (cljs.core._compare[(function (){var G__6708 = x__4408__auto__;
return goog.typeOf(G__6708);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._compare["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj6710 = {};
return obj6710;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._drop_first[(function (){var G__6714 = x__4408__auto__;
return goog.typeOf(G__6714);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj6716 = {};
return obj6716;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._chunked_first[(function (){var G__6720 = x__4408__auto__;
return goog.typeOf(G__6720);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._chunked_rest[(function (){var G__6724 = x__4408__auto__;
return goog.typeOf(G__6724);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj6726 = {};
return obj6726;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._chunked_next[(function (){var G__6730 = x__4408__auto__;
return goog.typeOf(G__6730);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj6732 = {};
return obj6732;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3752__auto__ = x;
if(and__3752__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3752__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4408__auto__ = (((x == null))?null:x);
return (function (){var or__3764__auto__ = (cljs.core._name[(function (){var G__6736 = x__4408__auto__;
return goog.typeOf(G__6736);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._name["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3752__auto__ = x;
if(and__3752__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3752__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4408__auto__ = (((x == null))?null:x);
return (function (){var or__3764__auto__ = (cljs.core._namespace[(function (){var G__6740 = x__4408__auto__;
return goog.typeOf(G__6740);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._namespace["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj6742 = {};
return obj6742;
})();


cljs.core.IReset = (function (){var obj6744 = {};
return obj6744;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._reset_BANG_[(function (){var G__6748 = x__4408__auto__;
return goog.typeOf(G__6748);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj6750 = {};
return obj6750;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._swap_BANG_[(function (){var G__6760 = x__4408__auto__;
return goog.typeOf(G__6760);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._swap_BANG_[(function (){var G__6762 = x__4408__auto__;
return goog.typeOf(G__6762);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._swap_BANG_[(function (){var G__6764 = x__4408__auto__;
return goog.typeOf(G__6764);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._swap_BANG_[(function (){var G__6766 = x__4408__auto__;
return goog.typeOf(G__6766);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj6768 = {};
return obj6768;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._vreset_BANG_[(function (){var G__6772 = x__4408__auto__;
return goog.typeOf(G__6772);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj6774 = {};
return obj6774;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._iterator[(function (){var G__6778 = x__4408__auto__;
return goog.typeOf(G__6778);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._iterator["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__6781 = (4294967295);
var G__6782 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6781,G__6782) : Math.imul.call(null,G__6781,G__6782));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__6785 = a;
var G__6786 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6785,G__6786) : Math.imul.call(null,G__6785,G__6786));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__6787 = (i + (2));
var G__6788 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__6787;
h1 = G__6788;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj6790 = {};
return obj6790;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__6791 = (i + (1));
var G__6792 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__6791;
hash = G__6792;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj6796 = {};
return obj6796;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__6799 = o;
if(G__6799){
var bit__4438__auto__ = (G__6799.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4438__auto__) || (G__6799.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__6800 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6800) : Math.floor.call(null,G__6800));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3752__auto__ = cljs.core.not(a.ns);
if(and__3752__auto__){
return b.ns;
} else {
return and__3752__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6807 = a.ns;
var G__6808 = b.ns;
return goog.array.defaultCompare(G__6807,G__6808);
})();
if(((0) === nsc)){
var G__6809 = a.name;
var G__6810 = b.name;
return goog.array.defaultCompare(G__6809,G__6810);
} else {
return nsc;
}
}
} else {
var G__6811 = a.name;
var G__6812 = b.name;
return goog.array.defaultCompare(G__6811,G__6812);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4185__auto__ = self__._hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__6814 = null;
var G__6814__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__6814__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__6814 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6814__2.call(this,self__,coll);
case 3:
return G__6814__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6814.cljs$core$IFn$_invoke$arity$2 = G__6814__2;
G__6814.cljs$core$IFn$_invoke$arity$3 = G__6814__3;
return G__6814;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args6813){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6813)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__6862 = null;
var G__6862__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__6862__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__6862__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__6862__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__6862__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__6862__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__6862__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__6862__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__6862__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__6862__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__6862__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__6862__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__6862__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__6862__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__6862__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__6862__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__6862__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__6862__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__6862__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__6862__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__6862__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__6862__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6818 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6819 = a;
var G__6820 = b;
var G__6821 = c;
var G__6822 = d;
var G__6823 = e;
var G__6824 = f;
var G__6825 = g;
var G__6826 = h;
var G__6827 = i;
var G__6828 = j;
var G__6829 = k;
var G__6830 = l;
var G__6831 = m;
var G__6832 = n;
var G__6833 = o;
var G__6834 = p;
var G__6835 = q;
var G__6836 = r;
var G__6837 = s;
var G__6838 = t;
var G__6839 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6818,G__6819,G__6820,G__6821,G__6822,G__6823,G__6824,G__6825,G__6826,G__6827,G__6828,G__6829,G__6830,G__6831,G__6832,G__6833,G__6834,G__6835,G__6836,G__6837,G__6838,G__6839) : cljs.core.apply.call(null,G__6818,G__6819,G__6820,G__6821,G__6822,G__6823,G__6824,G__6825,G__6826,G__6827,G__6828,G__6829,G__6830,G__6831,G__6832,G__6833,G__6834,G__6835,G__6836,G__6837,G__6838,G__6839));
});
G__6862 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6862__1.call(this,self__);
case 2:
return G__6862__2.call(this,self__,a);
case 3:
return G__6862__3.call(this,self__,a,b);
case 4:
return G__6862__4.call(this,self__,a,b,c);
case 5:
return G__6862__5.call(this,self__,a,b,c,d);
case 6:
return G__6862__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6862__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6862__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6862__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6862__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6862__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6862__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6862__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6862__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6862__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6862__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6862__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6862__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6862__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6862__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6862__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6862__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6862.cljs$core$IFn$_invoke$arity$1 = G__6862__1;
G__6862.cljs$core$IFn$_invoke$arity$2 = G__6862__2;
G__6862.cljs$core$IFn$_invoke$arity$3 = G__6862__3;
G__6862.cljs$core$IFn$_invoke$arity$4 = G__6862__4;
G__6862.cljs$core$IFn$_invoke$arity$5 = G__6862__5;
G__6862.cljs$core$IFn$_invoke$arity$6 = G__6862__6;
G__6862.cljs$core$IFn$_invoke$arity$7 = G__6862__7;
G__6862.cljs$core$IFn$_invoke$arity$8 = G__6862__8;
G__6862.cljs$core$IFn$_invoke$arity$9 = G__6862__9;
G__6862.cljs$core$IFn$_invoke$arity$10 = G__6862__10;
G__6862.cljs$core$IFn$_invoke$arity$11 = G__6862__11;
G__6862.cljs$core$IFn$_invoke$arity$12 = G__6862__12;
G__6862.cljs$core$IFn$_invoke$arity$13 = G__6862__13;
G__6862.cljs$core$IFn$_invoke$arity$14 = G__6862__14;
G__6862.cljs$core$IFn$_invoke$arity$15 = G__6862__15;
G__6862.cljs$core$IFn$_invoke$arity$16 = G__6862__16;
G__6862.cljs$core$IFn$_invoke$arity$17 = G__6862__17;
G__6862.cljs$core$IFn$_invoke$arity$18 = G__6862__18;
G__6862.cljs$core$IFn$_invoke$arity$19 = G__6862__19;
G__6862.cljs$core$IFn$_invoke$arity$20 = G__6862__20;
G__6862.cljs$core$IFn$_invoke$arity$21 = G__6862__21;
G__6862.cljs$core$IFn$_invoke$arity$22 = G__6862__22;
return G__6862;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args6817){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6817)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6840 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6841 = a;
var G__6842 = b;
var G__6843 = c;
var G__6844 = d;
var G__6845 = e;
var G__6846 = f;
var G__6847 = g;
var G__6848 = h;
var G__6849 = i;
var G__6850 = j;
var G__6851 = k;
var G__6852 = l;
var G__6853 = m;
var G__6854 = n;
var G__6855 = o;
var G__6856 = p;
var G__6857 = q;
var G__6858 = r;
var G__6859 = s;
var G__6860 = t;
var G__6861 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6840,G__6841,G__6842,G__6843,G__6844,G__6845,G__6846,G__6847,G__6848,G__6849,G__6850,G__6851,G__6852,G__6853,G__6854,G__6855,G__6856,G__6857,G__6858,G__6859,G__6860,G__6861) : cljs.core.apply.call(null,G__6840,G__6841,G__6842,G__6843,G__6844,G__6845,G__6846,G__6847,G__6848,G__6849,G__6850,G__6851,G__6852,G__6853,G__6854,G__6855,G__6856,G__6857,G__6858,G__6859,G__6860,G__6861));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__6864 = x;
if(G__6864){
var bit__4445__auto__ = null;
if(cljs.core.truth_((function (){var or__3764__auto__ = bit__4445__auto__;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return G__6864.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__6864.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6864);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6864);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__6866 = value;
if(G__6866){
var bit__4445__auto__ = (G__6866.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4445__auto__) || (G__6866.cljs$core$ICloneable$)){
return true;
} else {
if((!G__6866.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6866);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6866);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6868 = coll;
if(G__6868){
var bit__4438__auto__ = (G__6868.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4438__auto__) || (G__6868.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6870 = coll;
if(G__6870){
var bit__4438__auto__ = (G__6870.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4438__auto__) || (G__6870.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__6872 = coll;
if(G__6872){
var bit__4438__auto__ = (G__6872.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4438__auto__) || (G__6872.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6874 = coll;
if(G__6874){
var bit__4438__auto__ = (G__6874.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4438__auto__) || (G__6874.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__6879__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6880 = y;
var G__6881 = cljs.core.first(more);
var G__6882 = cljs.core.next(more);
x = G__6880;
y = G__6881;
more = G__6882;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6879 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6883__i = 0, G__6883__a = new Array(arguments.length -  2);
while (G__6883__i < G__6883__a.length) {G__6883__a[G__6883__i] = arguments[G__6883__i + 2]; ++G__6883__i;}
  more = new cljs.core.IndexedSeq(G__6883__a,0);
} 
return G__6879__delegate.call(this,x,y,more);};
G__6879.cljs$lang$maxFixedArity = 2;
G__6879.cljs$lang$applyTo = (function (arglist__6884){
var x = cljs.core.first(arglist__6884);
arglist__6884 = cljs.core.next(arglist__6884);
var y = cljs.core.first(arglist__6884);
var more = cljs.core.rest(arglist__6884);
return G__6879__delegate(x,y,more);
});
G__6879.cljs$core$IFn$_invoke$arity$variadic = G__6879__delegate;
return G__6879;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__6885 = null;
if (arguments.length > 2) {
var G__6886__i = 0, G__6886__a = new Array(arguments.length -  2);
while (G__6886__i < G__6886__a.length) {G__6886__a[G__6886__i] = arguments[G__6886__i + 2]; ++G__6886__i;}
G__6885 = new cljs.core.IndexedSeq(G__6886__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__6887 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__6887) : cljs.core.es6_iterator_seq.call(null,G__6887));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6888 = (n + (1));
var G__6889 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6890 = cljs.core.next(coll__$1);
n = G__6888;
hash_code = G__6889;
coll__$1 = G__6890;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6891 = (n + (1));
var G__6892 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6893 = cljs.core.next(coll__$1);
n = G__6891;
hash_code = G__6892;
coll__$1 = G__6893;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__6894 = o;
return goog.getUid(G__6894);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__6896 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6896) : cljs.core.deref.call(null,G__6896));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6903 = val;
var G__6904 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6903,G__6904) : f.call(null,G__6903,G__6904));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6909 = nval;
var G__6910 = (n + (1));
val = G__6909;
n = G__6910;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6905 = val__$1;
var G__6906 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6905,G__6906) : f.call(null,G__6905,G__6906));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6911 = nval;
var G__6912 = (n + (1));
val__$1 = G__6911;
n = G__6912;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6907 = val__$1;
var G__6908 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6907,G__6908) : f.call(null,G__6907,G__6908));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6913 = nval;
var G__6914 = (n + (1));
val__$1 = G__6913;
n = G__6914;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6921 = val;
var G__6922 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6921,G__6922) : f.call(null,G__6921,G__6922));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6927 = nval;
var G__6928 = (n + (1));
val = G__6927;
n = G__6928;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6923 = val__$1;
var G__6924 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6923,G__6924) : f.call(null,G__6923,G__6924));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6929 = nval;
var G__6930 = (n + (1));
val__$1 = G__6929;
n = G__6930;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6925 = val__$1;
var G__6926 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6925,G__6926) : f.call(null,G__6925,G__6926));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6931 = nval;
var G__6932 = (n + (1));
val__$1 = G__6931;
n = G__6932;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__6934 = x;
if(G__6934){
var bit__4445__auto__ = (G__6934.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4445__auto__) || (G__6934.cljs$core$ICounted$)){
return true;
} else {
if((!G__6934.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6934);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6934);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__6936 = x;
if(G__6936){
var bit__4445__auto__ = (G__6936.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4445__auto__) || (G__6936.cljs$core$IIndexed$)){
return true;
} else {
if((!G__6936.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6936);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6936);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6937 = coll__$1;
var G__6938 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6937,G__6938) : cljs.core.equiv_sequential.call(null,G__6937,G__6938));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6939 = o;
var G__6940 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6939,G__6940) : cljs.core.cons.call(null,G__6939,G__6940));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6943 = coll__$1;
var G__6944 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6943,G__6944) : cljs.core.equiv_sequential.call(null,G__6943,G__6944));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__6945 = cljs.core.List.EMPTY;
var G__6946 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6945,G__6946) : cljs.core.with_meta.call(null,G__6945,G__6946));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__6947 = f;
var G__6948 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__6947,G__6948) : cljs.core.seq_reduce.call(null,G__6947,G__6948));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__6949 = f;
var G__6950 = start;
var G__6951 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__6949,G__6950,G__6951) : cljs.core.seq_reduce.call(null,G__6949,G__6950,G__6951));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6952 = o;
var G__6953 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6952,G__6953) : cljs.core.cons.call(null,G__6952,G__6953));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__6954 = sn;
s = G__6954;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__6959__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__6960 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__6961 = cljs.core.first(xs);
var G__6962 = cljs.core.next(xs);
coll = G__6960;
x = G__6961;
xs = G__6962;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__6959 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__6963__i = 0, G__6963__a = new Array(arguments.length -  2);
while (G__6963__i < G__6963__a.length) {G__6963__a[G__6963__i] = arguments[G__6963__i + 2]; ++G__6963__i;}
  xs = new cljs.core.IndexedSeq(G__6963__a,0);
} 
return G__6959__delegate.call(this,coll,x,xs);};
G__6959.cljs$lang$maxFixedArity = 2;
G__6959.cljs$lang$applyTo = (function (arglist__6964){
var coll = cljs.core.first(arglist__6964);
arglist__6964 = cljs.core.next(arglist__6964);
var x = cljs.core.first(arglist__6964);
var xs = cljs.core.rest(arglist__6964);
return G__6959__delegate(coll,x,xs);
});
G__6959.cljs$core$IFn$_invoke$arity$variadic = G__6959__delegate;
return G__6959;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__6965 = null;
if (arguments.length > 2) {
var G__6966__i = 0, G__6966__a = new Array(arguments.length -  2);
while (G__6966__i < G__6966__a.length) {G__6966__a[G__6966__i] = arguments[G__6966__i + 2]; ++G__6966__i;}
G__6965 = new cljs.core.IndexedSeq(G__6966__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__6965);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__6967 = cljs.core.next(s);
var G__6968 = (acc + (1));
s = G__6967;
acc = G__6968;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__6970 = coll;
if(G__6970){
var bit__4438__auto__ = (G__6970.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4438__auto__) || (G__6970.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__6971 = cljs.core.next(coll);
var G__6972 = (n - (1));
coll = G__6971;
n = G__6972;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__6973 = cljs.core.next(coll);
var G__6974 = (n - (1));
var G__6975 = not_found;
coll = G__6973;
n = G__6974;
not_found = G__6975;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__6980 = coll;
if(G__6980){
var bit__4438__auto__ = (G__6980.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4438__auto__) || (G__6980.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6981 = coll;
if(G__6981){
var bit__4445__auto__ = (G__6981.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4445__auto__) || (G__6981.cljs$core$ISeq$)){
return true;
} else {
if((!G__6981.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6981);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6981);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__6982 = coll;
if(G__6982){
var bit__4438__auto__ = (G__6982.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4438__auto__) || (G__6982.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6983 = coll;
if(G__6983){
var bit__4445__auto__ = (G__6983.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4445__auto__) || (G__6983.cljs$core$ISeq$)){
return true;
} else {
if((!G__6983.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6983);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6983);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__6984 = (n__$1 - (1));
var G__6985 = cljs.core.rest(xs);
n__$1 = G__6984;
xs = G__6985;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__6988 = o;
if(G__6988){
var bit__4438__auto__ = (G__6988.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4438__auto__) || (G__6988.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__6989 = o;
if(G__6989){
var bit__4438__auto__ = (G__6989.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4438__auto__) || (G__6989.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__6993__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__6994 = ret;
var G__6995 = cljs.core.first(kvs);
var G__6996 = cljs.core.second(kvs);
var G__6997 = cljs.core.nnext(kvs);
coll = G__6994;
k = G__6995;
v = G__6996;
kvs = G__6997;
continue;
} else {
return ret;
}
break;
}
};
var G__6993 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6998__i = 0, G__6998__a = new Array(arguments.length -  3);
while (G__6998__i < G__6998__a.length) {G__6998__a[G__6998__i] = arguments[G__6998__i + 3]; ++G__6998__i;}
  kvs = new cljs.core.IndexedSeq(G__6998__a,0);
} 
return G__6993__delegate.call(this,coll,k,v,kvs);};
G__6993.cljs$lang$maxFixedArity = 3;
G__6993.cljs$lang$applyTo = (function (arglist__6999){
var coll = cljs.core.first(arglist__6999);
arglist__6999 = cljs.core.next(arglist__6999);
var k = cljs.core.first(arglist__6999);
arglist__6999 = cljs.core.next(arglist__6999);
var v = cljs.core.first(arglist__6999);
var kvs = cljs.core.rest(arglist__6999);
return G__6993__delegate(coll,k,v,kvs);
});
G__6993.cljs$core$IFn$_invoke$arity$variadic = G__6993__delegate;
return G__6993;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__7000 = null;
if (arguments.length > 3) {
var G__7001__i = 0, G__7001__a = new Array(arguments.length -  3);
while (G__7001__i < G__7001__a.length) {G__7001__a[G__7001__i] = arguments[G__7001__i + 3]; ++G__7001__i;}
G__7000 = new cljs.core.IndexedSeq(G__7001__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__7000);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__7004__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7005 = ret;
var G__7006 = cljs.core.first(ks);
var G__7007 = cljs.core.next(ks);
coll = G__7005;
k = G__7006;
ks = G__7007;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7004 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7008__i = 0, G__7008__a = new Array(arguments.length -  2);
while (G__7008__i < G__7008__a.length) {G__7008__a[G__7008__i] = arguments[G__7008__i + 2]; ++G__7008__i;}
  ks = new cljs.core.IndexedSeq(G__7008__a,0);
} 
return G__7004__delegate.call(this,coll,k,ks);};
G__7004.cljs$lang$maxFixedArity = 2;
G__7004.cljs$lang$applyTo = (function (arglist__7009){
var coll = cljs.core.first(arglist__7009);
arglist__7009 = cljs.core.next(arglist__7009);
var k = cljs.core.first(arglist__7009);
var ks = cljs.core.rest(arglist__7009);
return G__7004__delegate(coll,k,ks);
});
G__7004.cljs$core$IFn$_invoke$arity$variadic = G__7004__delegate;
return G__7004;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__7010 = null;
if (arguments.length > 2) {
var G__7011__i = 0, G__7011__a = new Array(arguments.length -  2);
while (G__7011__i < G__7011__a.length) {G__7011__a[G__7011__i] = arguments[G__7011__i + 2]; ++G__7011__i;}
G__7010 = new cljs.core.IndexedSeq(G__7011__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7010);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3764__auto__ = (function (){var G__7016 = f;
return goog.isFunction(G__7016);
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var G__7017 = f;
if(G__7017){
var bit__4445__auto__ = null;
if(cljs.core.truth_((function (){var or__3764__auto____$1 = bit__4445__auto__;
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
return G__7017.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__7017.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__7017);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__7017);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__7483 = null;
var G__7483__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__7483__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7019 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7019) : self__.afn.call(null,G__7019));
});
var G__7483__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7020 = a;
var G__7021 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7020,G__7021) : self__.afn.call(null,G__7020,G__7021));
});
var G__7483__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7022 = a;
var G__7023 = b;
var G__7024 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7022,G__7023,G__7024) : self__.afn.call(null,G__7022,G__7023,G__7024));
});
var G__7483__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7025 = a;
var G__7026 = b;
var G__7027 = c;
var G__7028 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7025,G__7026,G__7027,G__7028) : self__.afn.call(null,G__7025,G__7026,G__7027,G__7028));
});
var G__7483__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7029 = a;
var G__7030 = b;
var G__7031 = c;
var G__7032 = d;
var G__7033 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7029,G__7030,G__7031,G__7032,G__7033) : self__.afn.call(null,G__7029,G__7030,G__7031,G__7032,G__7033));
});
var G__7483__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7034 = a;
var G__7035 = b;
var G__7036 = c;
var G__7037 = d;
var G__7038 = e;
var G__7039 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7034,G__7035,G__7036,G__7037,G__7038,G__7039) : self__.afn.call(null,G__7034,G__7035,G__7036,G__7037,G__7038,G__7039));
});
var G__7483__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7040 = a;
var G__7041 = b;
var G__7042 = c;
var G__7043 = d;
var G__7044 = e;
var G__7045 = f;
var G__7046 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7040,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046) : self__.afn.call(null,G__7040,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046));
});
var G__7483__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7047 = a;
var G__7048 = b;
var G__7049 = c;
var G__7050 = d;
var G__7051 = e;
var G__7052 = f;
var G__7053 = g;
var G__7054 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7047,G__7048,G__7049,G__7050,G__7051,G__7052,G__7053,G__7054) : self__.afn.call(null,G__7047,G__7048,G__7049,G__7050,G__7051,G__7052,G__7053,G__7054));
});
var G__7483__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7055 = a;
var G__7056 = b;
var G__7057 = c;
var G__7058 = d;
var G__7059 = e;
var G__7060 = f;
var G__7061 = g;
var G__7062 = h;
var G__7063 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7055,G__7056,G__7057,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063) : self__.afn.call(null,G__7055,G__7056,G__7057,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063));
});
var G__7483__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7064 = a;
var G__7065 = b;
var G__7066 = c;
var G__7067 = d;
var G__7068 = e;
var G__7069 = f;
var G__7070 = g;
var G__7071 = h;
var G__7072 = i;
var G__7073 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7064,G__7065,G__7066,G__7067,G__7068,G__7069,G__7070,G__7071,G__7072,G__7073) : self__.afn.call(null,G__7064,G__7065,G__7066,G__7067,G__7068,G__7069,G__7070,G__7071,G__7072,G__7073));
});
var G__7483__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7074 = a;
var G__7075 = b;
var G__7076 = c;
var G__7077 = d;
var G__7078 = e;
var G__7079 = f;
var G__7080 = g;
var G__7081 = h;
var G__7082 = i;
var G__7083 = j;
var G__7084 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7074,G__7075,G__7076,G__7077,G__7078,G__7079,G__7080,G__7081,G__7082,G__7083,G__7084) : self__.afn.call(null,G__7074,G__7075,G__7076,G__7077,G__7078,G__7079,G__7080,G__7081,G__7082,G__7083,G__7084));
});
var G__7483__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7085 = a;
var G__7086 = b;
var G__7087 = c;
var G__7088 = d;
var G__7089 = e;
var G__7090 = f;
var G__7091 = g;
var G__7092 = h;
var G__7093 = i;
var G__7094 = j;
var G__7095 = k;
var G__7096 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7085,G__7086,G__7087,G__7088,G__7089,G__7090,G__7091,G__7092,G__7093,G__7094,G__7095,G__7096) : self__.afn.call(null,G__7085,G__7086,G__7087,G__7088,G__7089,G__7090,G__7091,G__7092,G__7093,G__7094,G__7095,G__7096));
});
var G__7483__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7097 = a;
var G__7098 = b;
var G__7099 = c;
var G__7100 = d;
var G__7101 = e;
var G__7102 = f;
var G__7103 = g;
var G__7104 = h;
var G__7105 = i;
var G__7106 = j;
var G__7107 = k;
var G__7108 = l;
var G__7109 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7097,G__7098,G__7099,G__7100,G__7101,G__7102,G__7103,G__7104,G__7105,G__7106,G__7107,G__7108,G__7109) : self__.afn.call(null,G__7097,G__7098,G__7099,G__7100,G__7101,G__7102,G__7103,G__7104,G__7105,G__7106,G__7107,G__7108,G__7109));
});
var G__7483__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7110 = a;
var G__7111 = b;
var G__7112 = c;
var G__7113 = d;
var G__7114 = e;
var G__7115 = f;
var G__7116 = g;
var G__7117 = h;
var G__7118 = i;
var G__7119 = j;
var G__7120 = k;
var G__7121 = l;
var G__7122 = m;
var G__7123 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7110,G__7111,G__7112,G__7113,G__7114,G__7115,G__7116,G__7117,G__7118,G__7119,G__7120,G__7121,G__7122,G__7123) : self__.afn.call(null,G__7110,G__7111,G__7112,G__7113,G__7114,G__7115,G__7116,G__7117,G__7118,G__7119,G__7120,G__7121,G__7122,G__7123));
});
var G__7483__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7124 = a;
var G__7125 = b;
var G__7126 = c;
var G__7127 = d;
var G__7128 = e;
var G__7129 = f;
var G__7130 = g;
var G__7131 = h;
var G__7132 = i;
var G__7133 = j;
var G__7134 = k;
var G__7135 = l;
var G__7136 = m;
var G__7137 = n;
var G__7138 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7124,G__7125,G__7126,G__7127,G__7128,G__7129,G__7130,G__7131,G__7132,G__7133,G__7134,G__7135,G__7136,G__7137,G__7138) : self__.afn.call(null,G__7124,G__7125,G__7126,G__7127,G__7128,G__7129,G__7130,G__7131,G__7132,G__7133,G__7134,G__7135,G__7136,G__7137,G__7138));
});
var G__7483__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7139 = a;
var G__7140 = b;
var G__7141 = c;
var G__7142 = d;
var G__7143 = e;
var G__7144 = f;
var G__7145 = g;
var G__7146 = h;
var G__7147 = i;
var G__7148 = j;
var G__7149 = k;
var G__7150 = l;
var G__7151 = m;
var G__7152 = n;
var G__7153 = o;
var G__7154 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7139,G__7140,G__7141,G__7142,G__7143,G__7144,G__7145,G__7146,G__7147,G__7148,G__7149,G__7150,G__7151,G__7152,G__7153,G__7154) : self__.afn.call(null,G__7139,G__7140,G__7141,G__7142,G__7143,G__7144,G__7145,G__7146,G__7147,G__7148,G__7149,G__7150,G__7151,G__7152,G__7153,G__7154));
});
var G__7483__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7155 = a;
var G__7156 = b;
var G__7157 = c;
var G__7158 = d;
var G__7159 = e;
var G__7160 = f;
var G__7161 = g;
var G__7162 = h;
var G__7163 = i;
var G__7164 = j;
var G__7165 = k;
var G__7166 = l;
var G__7167 = m;
var G__7168 = n;
var G__7169 = o;
var G__7170 = p;
var G__7171 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7155,G__7156,G__7157,G__7158,G__7159,G__7160,G__7161,G__7162,G__7163,G__7164,G__7165,G__7166,G__7167,G__7168,G__7169,G__7170,G__7171) : self__.afn.call(null,G__7155,G__7156,G__7157,G__7158,G__7159,G__7160,G__7161,G__7162,G__7163,G__7164,G__7165,G__7166,G__7167,G__7168,G__7169,G__7170,G__7171));
});
var G__7483__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7172 = a;
var G__7173 = b;
var G__7174 = c;
var G__7175 = d;
var G__7176 = e;
var G__7177 = f;
var G__7178 = g;
var G__7179 = h;
var G__7180 = i;
var G__7181 = j;
var G__7182 = k;
var G__7183 = l;
var G__7184 = m;
var G__7185 = n;
var G__7186 = o;
var G__7187 = p;
var G__7188 = q;
var G__7189 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7172,G__7173,G__7174,G__7175,G__7176,G__7177,G__7178,G__7179,G__7180,G__7181,G__7182,G__7183,G__7184,G__7185,G__7186,G__7187,G__7188,G__7189) : self__.afn.call(null,G__7172,G__7173,G__7174,G__7175,G__7176,G__7177,G__7178,G__7179,G__7180,G__7181,G__7182,G__7183,G__7184,G__7185,G__7186,G__7187,G__7188,G__7189));
});
var G__7483__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7190 = a;
var G__7191 = b;
var G__7192 = c;
var G__7193 = d;
var G__7194 = e;
var G__7195 = f;
var G__7196 = g;
var G__7197 = h;
var G__7198 = i;
var G__7199 = j;
var G__7200 = k;
var G__7201 = l;
var G__7202 = m;
var G__7203 = n;
var G__7204 = o;
var G__7205 = p;
var G__7206 = q;
var G__7207 = r;
var G__7208 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7190,G__7191,G__7192,G__7193,G__7194,G__7195,G__7196,G__7197,G__7198,G__7199,G__7200,G__7201,G__7202,G__7203,G__7204,G__7205,G__7206,G__7207,G__7208) : self__.afn.call(null,G__7190,G__7191,G__7192,G__7193,G__7194,G__7195,G__7196,G__7197,G__7198,G__7199,G__7200,G__7201,G__7202,G__7203,G__7204,G__7205,G__7206,G__7207,G__7208));
});
var G__7483__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7209 = a;
var G__7210 = b;
var G__7211 = c;
var G__7212 = d;
var G__7213 = e;
var G__7214 = f;
var G__7215 = g;
var G__7216 = h;
var G__7217 = i;
var G__7218 = j;
var G__7219 = k;
var G__7220 = l;
var G__7221 = m;
var G__7222 = n;
var G__7223 = o;
var G__7224 = p;
var G__7225 = q;
var G__7226 = r;
var G__7227 = s;
var G__7228 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7209,G__7210,G__7211,G__7212,G__7213,G__7214,G__7215,G__7216,G__7217,G__7218,G__7219,G__7220,G__7221,G__7222,G__7223,G__7224,G__7225,G__7226,G__7227,G__7228) : self__.afn.call(null,G__7209,G__7210,G__7211,G__7212,G__7213,G__7214,G__7215,G__7216,G__7217,G__7218,G__7219,G__7220,G__7221,G__7222,G__7223,G__7224,G__7225,G__7226,G__7227,G__7228));
});
var G__7483__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7229 = self__.afn;
var G__7230 = a;
var G__7231 = b;
var G__7232 = c;
var G__7233 = d;
var G__7234 = e;
var G__7235 = f;
var G__7236 = g;
var G__7237 = h;
var G__7238 = i;
var G__7239 = j;
var G__7240 = k;
var G__7241 = l;
var G__7242 = m;
var G__7243 = n;
var G__7244 = o;
var G__7245 = p;
var G__7246 = q;
var G__7247 = r;
var G__7248 = s;
var G__7249 = t;
var G__7250 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7229,G__7230,G__7231,G__7232,G__7233,G__7234,G__7235,G__7236,G__7237,G__7238,G__7239,G__7240,G__7241,G__7242,G__7243,G__7244,G__7245,G__7246,G__7247,G__7248,G__7249,G__7250) : cljs.core.apply.call(null,G__7229,G__7230,G__7231,G__7232,G__7233,G__7234,G__7235,G__7236,G__7237,G__7238,G__7239,G__7240,G__7241,G__7242,G__7243,G__7244,G__7245,G__7246,G__7247,G__7248,G__7249,G__7250));
});
G__7483 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__7483__1.call(this,self__);
case 2:
return G__7483__2.call(this,self__,a);
case 3:
return G__7483__3.call(this,self__,a,b);
case 4:
return G__7483__4.call(this,self__,a,b,c);
case 5:
return G__7483__5.call(this,self__,a,b,c,d);
case 6:
return G__7483__6.call(this,self__,a,b,c,d,e);
case 7:
return G__7483__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__7483__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__7483__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__7483__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__7483__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__7483__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__7483__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__7483__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__7483__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__7483__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__7483__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__7483__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__7483__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__7483__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__7483__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__7483__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7483.cljs$core$IFn$_invoke$arity$1 = G__7483__1;
G__7483.cljs$core$IFn$_invoke$arity$2 = G__7483__2;
G__7483.cljs$core$IFn$_invoke$arity$3 = G__7483__3;
G__7483.cljs$core$IFn$_invoke$arity$4 = G__7483__4;
G__7483.cljs$core$IFn$_invoke$arity$5 = G__7483__5;
G__7483.cljs$core$IFn$_invoke$arity$6 = G__7483__6;
G__7483.cljs$core$IFn$_invoke$arity$7 = G__7483__7;
G__7483.cljs$core$IFn$_invoke$arity$8 = G__7483__8;
G__7483.cljs$core$IFn$_invoke$arity$9 = G__7483__9;
G__7483.cljs$core$IFn$_invoke$arity$10 = G__7483__10;
G__7483.cljs$core$IFn$_invoke$arity$11 = G__7483__11;
G__7483.cljs$core$IFn$_invoke$arity$12 = G__7483__12;
G__7483.cljs$core$IFn$_invoke$arity$13 = G__7483__13;
G__7483.cljs$core$IFn$_invoke$arity$14 = G__7483__14;
G__7483.cljs$core$IFn$_invoke$arity$15 = G__7483__15;
G__7483.cljs$core$IFn$_invoke$arity$16 = G__7483__16;
G__7483.cljs$core$IFn$_invoke$arity$17 = G__7483__17;
G__7483.cljs$core$IFn$_invoke$arity$18 = G__7483__18;
G__7483.cljs$core$IFn$_invoke$arity$19 = G__7483__19;
G__7483.cljs$core$IFn$_invoke$arity$20 = G__7483__20;
G__7483.cljs$core$IFn$_invoke$arity$21 = G__7483__21;
G__7483.cljs$core$IFn$_invoke$arity$22 = G__7483__22;
return G__7483;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args7018){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7018)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__7251 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7251) : self__.afn.call(null,G__7251));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__7252 = a;
var G__7253 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7252,G__7253) : self__.afn.call(null,G__7252,G__7253));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__7254 = a;
var G__7255 = b;
var G__7256 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7254,G__7255,G__7256) : self__.afn.call(null,G__7254,G__7255,G__7256));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__7257 = a;
var G__7258 = b;
var G__7259 = c;
var G__7260 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7257,G__7258,G__7259,G__7260) : self__.afn.call(null,G__7257,G__7258,G__7259,G__7260));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__7261 = a;
var G__7262 = b;
var G__7263 = c;
var G__7264 = d;
var G__7265 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7261,G__7262,G__7263,G__7264,G__7265) : self__.afn.call(null,G__7261,G__7262,G__7263,G__7264,G__7265));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__7266 = a;
var G__7267 = b;
var G__7268 = c;
var G__7269 = d;
var G__7270 = e;
var G__7271 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7266,G__7267,G__7268,G__7269,G__7270,G__7271) : self__.afn.call(null,G__7266,G__7267,G__7268,G__7269,G__7270,G__7271));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__7272 = a;
var G__7273 = b;
var G__7274 = c;
var G__7275 = d;
var G__7276 = e;
var G__7277 = f;
var G__7278 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7272,G__7273,G__7274,G__7275,G__7276,G__7277,G__7278) : self__.afn.call(null,G__7272,G__7273,G__7274,G__7275,G__7276,G__7277,G__7278));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__7279 = a;
var G__7280 = b;
var G__7281 = c;
var G__7282 = d;
var G__7283 = e;
var G__7284 = f;
var G__7285 = g;
var G__7286 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7279,G__7280,G__7281,G__7282,G__7283,G__7284,G__7285,G__7286) : self__.afn.call(null,G__7279,G__7280,G__7281,G__7282,G__7283,G__7284,G__7285,G__7286));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__7287 = a;
var G__7288 = b;
var G__7289 = c;
var G__7290 = d;
var G__7291 = e;
var G__7292 = f;
var G__7293 = g;
var G__7294 = h;
var G__7295 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7287,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295) : self__.afn.call(null,G__7287,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__7296 = a;
var G__7297 = b;
var G__7298 = c;
var G__7299 = d;
var G__7300 = e;
var G__7301 = f;
var G__7302 = g;
var G__7303 = h;
var G__7304 = i;
var G__7305 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7296,G__7297,G__7298,G__7299,G__7300,G__7301,G__7302,G__7303,G__7304,G__7305) : self__.afn.call(null,G__7296,G__7297,G__7298,G__7299,G__7300,G__7301,G__7302,G__7303,G__7304,G__7305));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__7306 = a;
var G__7307 = b;
var G__7308 = c;
var G__7309 = d;
var G__7310 = e;
var G__7311 = f;
var G__7312 = g;
var G__7313 = h;
var G__7314 = i;
var G__7315 = j;
var G__7316 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7306,G__7307,G__7308,G__7309,G__7310,G__7311,G__7312,G__7313,G__7314,G__7315,G__7316) : self__.afn.call(null,G__7306,G__7307,G__7308,G__7309,G__7310,G__7311,G__7312,G__7313,G__7314,G__7315,G__7316));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__7317 = a;
var G__7318 = b;
var G__7319 = c;
var G__7320 = d;
var G__7321 = e;
var G__7322 = f;
var G__7323 = g;
var G__7324 = h;
var G__7325 = i;
var G__7326 = j;
var G__7327 = k;
var G__7328 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7317,G__7318,G__7319,G__7320,G__7321,G__7322,G__7323,G__7324,G__7325,G__7326,G__7327,G__7328) : self__.afn.call(null,G__7317,G__7318,G__7319,G__7320,G__7321,G__7322,G__7323,G__7324,G__7325,G__7326,G__7327,G__7328));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__7329 = a;
var G__7330 = b;
var G__7331 = c;
var G__7332 = d;
var G__7333 = e;
var G__7334 = f;
var G__7335 = g;
var G__7336 = h;
var G__7337 = i;
var G__7338 = j;
var G__7339 = k;
var G__7340 = l;
var G__7341 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7329,G__7330,G__7331,G__7332,G__7333,G__7334,G__7335,G__7336,G__7337,G__7338,G__7339,G__7340,G__7341) : self__.afn.call(null,G__7329,G__7330,G__7331,G__7332,G__7333,G__7334,G__7335,G__7336,G__7337,G__7338,G__7339,G__7340,G__7341));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__7342 = a;
var G__7343 = b;
var G__7344 = c;
var G__7345 = d;
var G__7346 = e;
var G__7347 = f;
var G__7348 = g;
var G__7349 = h;
var G__7350 = i;
var G__7351 = j;
var G__7352 = k;
var G__7353 = l;
var G__7354 = m;
var G__7355 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7342,G__7343,G__7344,G__7345,G__7346,G__7347,G__7348,G__7349,G__7350,G__7351,G__7352,G__7353,G__7354,G__7355) : self__.afn.call(null,G__7342,G__7343,G__7344,G__7345,G__7346,G__7347,G__7348,G__7349,G__7350,G__7351,G__7352,G__7353,G__7354,G__7355));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__7356 = a;
var G__7357 = b;
var G__7358 = c;
var G__7359 = d;
var G__7360 = e;
var G__7361 = f;
var G__7362 = g;
var G__7363 = h;
var G__7364 = i;
var G__7365 = j;
var G__7366 = k;
var G__7367 = l;
var G__7368 = m;
var G__7369 = n;
var G__7370 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7356,G__7357,G__7358,G__7359,G__7360,G__7361,G__7362,G__7363,G__7364,G__7365,G__7366,G__7367,G__7368,G__7369,G__7370) : self__.afn.call(null,G__7356,G__7357,G__7358,G__7359,G__7360,G__7361,G__7362,G__7363,G__7364,G__7365,G__7366,G__7367,G__7368,G__7369,G__7370));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__7371 = a;
var G__7372 = b;
var G__7373 = c;
var G__7374 = d;
var G__7375 = e;
var G__7376 = f;
var G__7377 = g;
var G__7378 = h;
var G__7379 = i;
var G__7380 = j;
var G__7381 = k;
var G__7382 = l;
var G__7383 = m;
var G__7384 = n;
var G__7385 = o;
var G__7386 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7371,G__7372,G__7373,G__7374,G__7375,G__7376,G__7377,G__7378,G__7379,G__7380,G__7381,G__7382,G__7383,G__7384,G__7385,G__7386) : self__.afn.call(null,G__7371,G__7372,G__7373,G__7374,G__7375,G__7376,G__7377,G__7378,G__7379,G__7380,G__7381,G__7382,G__7383,G__7384,G__7385,G__7386));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__7387 = a;
var G__7388 = b;
var G__7389 = c;
var G__7390 = d;
var G__7391 = e;
var G__7392 = f;
var G__7393 = g;
var G__7394 = h;
var G__7395 = i;
var G__7396 = j;
var G__7397 = k;
var G__7398 = l;
var G__7399 = m;
var G__7400 = n;
var G__7401 = o;
var G__7402 = p;
var G__7403 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7387,G__7388,G__7389,G__7390,G__7391,G__7392,G__7393,G__7394,G__7395,G__7396,G__7397,G__7398,G__7399,G__7400,G__7401,G__7402,G__7403) : self__.afn.call(null,G__7387,G__7388,G__7389,G__7390,G__7391,G__7392,G__7393,G__7394,G__7395,G__7396,G__7397,G__7398,G__7399,G__7400,G__7401,G__7402,G__7403));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__7404 = a;
var G__7405 = b;
var G__7406 = c;
var G__7407 = d;
var G__7408 = e;
var G__7409 = f;
var G__7410 = g;
var G__7411 = h;
var G__7412 = i;
var G__7413 = j;
var G__7414 = k;
var G__7415 = l;
var G__7416 = m;
var G__7417 = n;
var G__7418 = o;
var G__7419 = p;
var G__7420 = q;
var G__7421 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7404,G__7405,G__7406,G__7407,G__7408,G__7409,G__7410,G__7411,G__7412,G__7413,G__7414,G__7415,G__7416,G__7417,G__7418,G__7419,G__7420,G__7421) : self__.afn.call(null,G__7404,G__7405,G__7406,G__7407,G__7408,G__7409,G__7410,G__7411,G__7412,G__7413,G__7414,G__7415,G__7416,G__7417,G__7418,G__7419,G__7420,G__7421));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__7422 = a;
var G__7423 = b;
var G__7424 = c;
var G__7425 = d;
var G__7426 = e;
var G__7427 = f;
var G__7428 = g;
var G__7429 = h;
var G__7430 = i;
var G__7431 = j;
var G__7432 = k;
var G__7433 = l;
var G__7434 = m;
var G__7435 = n;
var G__7436 = o;
var G__7437 = p;
var G__7438 = q;
var G__7439 = r;
var G__7440 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7422,G__7423,G__7424,G__7425,G__7426,G__7427,G__7428,G__7429,G__7430,G__7431,G__7432,G__7433,G__7434,G__7435,G__7436,G__7437,G__7438,G__7439,G__7440) : self__.afn.call(null,G__7422,G__7423,G__7424,G__7425,G__7426,G__7427,G__7428,G__7429,G__7430,G__7431,G__7432,G__7433,G__7434,G__7435,G__7436,G__7437,G__7438,G__7439,G__7440));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__7441 = a;
var G__7442 = b;
var G__7443 = c;
var G__7444 = d;
var G__7445 = e;
var G__7446 = f;
var G__7447 = g;
var G__7448 = h;
var G__7449 = i;
var G__7450 = j;
var G__7451 = k;
var G__7452 = l;
var G__7453 = m;
var G__7454 = n;
var G__7455 = o;
var G__7456 = p;
var G__7457 = q;
var G__7458 = r;
var G__7459 = s;
var G__7460 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7441,G__7442,G__7443,G__7444,G__7445,G__7446,G__7447,G__7448,G__7449,G__7450,G__7451,G__7452,G__7453,G__7454,G__7455,G__7456,G__7457,G__7458,G__7459,G__7460) : self__.afn.call(null,G__7441,G__7442,G__7443,G__7444,G__7445,G__7446,G__7447,G__7448,G__7449,G__7450,G__7451,G__7452,G__7453,G__7454,G__7455,G__7456,G__7457,G__7458,G__7459,G__7460));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__7461 = self__.afn;
var G__7462 = a;
var G__7463 = b;
var G__7464 = c;
var G__7465 = d;
var G__7466 = e;
var G__7467 = f;
var G__7468 = g;
var G__7469 = h;
var G__7470 = i;
var G__7471 = j;
var G__7472 = k;
var G__7473 = l;
var G__7474 = m;
var G__7475 = n;
var G__7476 = o;
var G__7477 = p;
var G__7478 = q;
var G__7479 = r;
var G__7480 = s;
var G__7481 = t;
var G__7482 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7461,G__7462,G__7463,G__7464,G__7465,G__7466,G__7467,G__7468,G__7469,G__7470,G__7471,G__7472,G__7473,G__7474,G__7475,G__7476,G__7477,G__7478,G__7479,G__7480,G__7481,G__7482) : cljs.core.apply.call(null,G__7461,G__7462,G__7463,G__7464,G__7465,G__7466,G__7467,G__7468,G__7469,G__7470,G__7471,G__7472,G__7473,G__7474,G__7475,G__7476,G__7477,G__7478,G__7479,G__7480,G__7481,G__7482));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__7487 = o;
if(G__7487){
var bit__4445__auto__ = (G__7487.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4445__auto__) || (G__7487.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__7487.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7487);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7487);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3752__auto__ = !((o == null));
if(and__3752__auto__){
var G__7491 = o;
if(G__7491){
var bit__4445__auto__ = (G__7491.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4445__auto__) || (G__7491.cljs$core$IMeta$)){
return true;
} else {
if((!G__7491.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7491);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7491);
}
} else {
return and__3752__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__7494__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7495 = ret;
var G__7496 = cljs.core.first(ks);
var G__7497 = cljs.core.next(ks);
coll = G__7495;
k = G__7496;
ks = G__7497;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7494 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7498__i = 0, G__7498__a = new Array(arguments.length -  2);
while (G__7498__i < G__7498__a.length) {G__7498__a[G__7498__i] = arguments[G__7498__i + 2]; ++G__7498__i;}
  ks = new cljs.core.IndexedSeq(G__7498__a,0);
} 
return G__7494__delegate.call(this,coll,k,ks);};
G__7494.cljs$lang$maxFixedArity = 2;
G__7494.cljs$lang$applyTo = (function (arglist__7499){
var coll = cljs.core.first(arglist__7499);
arglist__7499 = cljs.core.next(arglist__7499);
var k = cljs.core.first(arglist__7499);
var ks = cljs.core.rest(arglist__7499);
return G__7494__delegate(coll,k,ks);
});
G__7494.cljs$core$IFn$_invoke$arity$variadic = G__7494__delegate;
return G__7494;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__7500 = null;
if (arguments.length > 2) {
var G__7501__i = 0, G__7501__a = new Array(arguments.length -  2);
while (G__7501__i < G__7501__a.length) {G__7501__a[G__7501__i] = arguments[G__7501__i + 2]; ++G__7501__i;}
G__7500 = new cljs.core.IndexedSeq(G__7501__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7500);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7503 = x;
if(G__7503){
var bit__4445__auto__ = (G__7503.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4445__auto__) || (G__7503.cljs$core$ICollection$)){
return true;
} else {
if((!G__7503.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7503);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7503);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7505 = x;
if(G__7505){
var bit__4445__auto__ = (G__7505.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4445__auto__) || (G__7505.cljs$core$ISet$)){
return true;
} else {
if((!G__7505.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7505);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7505);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__7507 = x;
if(G__7507){
var bit__4445__auto__ = (G__7507.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4445__auto__) || (G__7507.cljs$core$IAssociative$)){
return true;
} else {
if((!G__7507.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7507);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7507);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__7509 = x;
if(G__7509){
var bit__4445__auto__ = (G__7509.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4445__auto__) || (G__7509.cljs$core$ISequential$)){
return true;
} else {
if((!G__7509.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7509);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7509);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__7511 = x;
if(G__7511){
var bit__4445__auto__ = (G__7511.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4445__auto__) || (G__7511.cljs$core$ISorted$)){
return true;
} else {
if((!G__7511.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7511);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7511);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__7513 = x;
if(G__7513){
var bit__4445__auto__ = (G__7513.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4445__auto__) || (G__7513.cljs$core$IReduce$)){
return true;
} else {
if((!G__7513.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7513);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7513);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7515 = x;
if(G__7515){
var bit__4445__auto__ = (G__7515.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4445__auto__) || (G__7515.cljs$core$IMap$)){
return true;
} else {
if((!G__7515.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7515);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7515);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__7517 = x;
if(G__7517){
var bit__4445__auto__ = (G__7517.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4445__auto__) || (G__7517.cljs$core$IVector$)){
return true;
} else {
if((!G__7517.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7517);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7517);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__7519 = x;
if(G__7519){
var bit__4438__auto__ = (G__7519.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4438__auto__) || (G__7519.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj7525 = {};
return obj7525;
});
var js_obj__1 = (function() { 
var G__7528__delegate = function (keyvals){
var G__7526 = goog.object.create;
var G__7527 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__7526,G__7527) : cljs.core.apply.call(null,G__7526,G__7527));
};
var G__7528 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__7529__i = 0, G__7529__a = new Array(arguments.length -  0);
while (G__7529__i < G__7529__a.length) {G__7529__a[G__7529__i] = arguments[G__7529__i + 0]; ++G__7529__i;}
  keyvals = new cljs.core.IndexedSeq(G__7529__a,0);
} 
return G__7528__delegate.call(this,keyvals);};
G__7528.cljs$lang$maxFixedArity = 0;
G__7528.cljs$lang$applyTo = (function (arglist__7530){
var keyvals = cljs.core.seq(arglist__7530);
return G__7528__delegate(keyvals);
});
G__7528.cljs$core$IFn$_invoke$arity$variadic = G__7528__delegate;
return G__7528;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__7531 = null;
if (arguments.length > 0) {
var G__7532__i = 0, G__7532__a = new Array(arguments.length -  0);
while (G__7532__i < G__7532__a.length) {G__7532__a[G__7532__i] = arguments[G__7532__i + 0]; ++G__7532__i;}
G__7531 = new cljs.core.IndexedSeq(G__7532__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__7531);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__7535_7537 = obj;
var G__7536_7538 = ((function (G__7535_7537,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__7535_7537,keys))
;
goog.object.forEach(G__7535_7537,G__7536_7538);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7539 = (i__$1 + (1));
var G__7540 = (j__$1 + (1));
var G__7541 = (len__$1 - (1));
i__$1 = G__7539;
j__$1 = G__7540;
len__$1 = G__7541;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7542 = (i__$1 - (1));
var G__7543 = (j__$1 - (1));
var G__7544 = (len__$1 - (1));
i__$1 = G__7542;
j__$1 = G__7543;
len__$1 = G__7544;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj7546 = {};
return obj7546;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__7548 = s;
if(G__7548){
var bit__4445__auto__ = (G__7548.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4445__auto__) || (G__7548.cljs$core$ISeq$)){
return true;
} else {
if((!G__7548.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7548);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7548);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__7550 = s;
if(G__7550){
var bit__4445__auto__ = (G__7550.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4445__auto__) || (G__7550.cljs$core$ISeqable$)){
return true;
} else {
if((!G__7550.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7550);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7550);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3764__auto__ = cljs.core.fn_QMARK_(f);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var G__7554 = f;
if(G__7554){
var bit__4445__auto__ = (G__7554.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4445__auto__) || (G__7554.cljs$core$IFn$)){
return true;
} else {
if((!G__7554.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7554);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7554);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__7567 = n;
return isNaN(G__7567);
})())) && (!((n === Infinity))) && (((function (){var G__7568 = n;
return parseFloat(G__7568);
})() === (function (){var G__7569 = n;
var G__7570 = (10);
return parseInt(G__7569,G__7570);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__7571__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__7572 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__7573 = etc;
s = G__7572;
xs = G__7573;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__7571 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7574__i = 0, G__7574__a = new Array(arguments.length -  2);
while (G__7574__i < G__7574__a.length) {G__7574__a[G__7574__i] = arguments[G__7574__i + 2]; ++G__7574__i;}
  more = new cljs.core.IndexedSeq(G__7574__a,0);
} 
return G__7571__delegate.call(this,x,y,more);};
G__7571.cljs$lang$maxFixedArity = 2;
G__7571.cljs$lang$applyTo = (function (arglist__7575){
var x = cljs.core.first(arglist__7575);
arglist__7575 = cljs.core.next(arglist__7575);
var y = cljs.core.first(arglist__7575);
var more = cljs.core.rest(arglist__7575);
return G__7571__delegate(x,y,more);
});
G__7571.cljs$core$IFn$_invoke$arity$variadic = G__7571__delegate;
return G__7571;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__7576 = null;
if (arguments.length > 2) {
var G__7577__i = 0, G__7577__a = new Array(arguments.length -  2);
while (G__7577__i < G__7577__a.length) {G__7577__a[G__7577__i] = arguments[G__7577__i + 2]; ++G__7577__i;}
G__7576 = new cljs.core.IndexedSeq(G__7577__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7576);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__7581 = x;
if(G__7581){
var bit__4438__auto__ = (G__7581.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4438__auto__) || (G__7581.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__7582 = x;
var G__7583 = y;
return goog.array.defaultCompare(G__7582,G__7583);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__7588 = xs;
var G__7589 = ys;
var G__7590 = len;
var G__7591 = (n + (1));
xs = G__7588;
ys = G__7589;
len = G__7590;
n = G__7591;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__7596 = x;
var G__7597 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7596,G__7597) : f.call(null,G__7596,G__7597));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__7598 = y;
var G__7599 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7598,G__7599) : f.call(null,G__7598,G__7599));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__7605 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7605) : cljs.core.to_array.call(null,G__7605));
})();
var G__7606_7608 = a;
var G__7607_7609 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__7606_7608,G__7607_7609);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__7615 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7615) : keyfn.call(null,G__7615));
})(),(function (){var G__7616 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7616) : keyfn.call(null,G__7616));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__7622 = f;
var G__7623 = cljs.core.first(s);
var G__7624 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7622,G__7623,G__7624) : cljs.core.reduce.call(null,G__7622,G__7623,G__7624));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__7625 = val__$1;
var G__7626 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7625,G__7626) : f.call(null,G__7625,G__7626));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7627 = nval;
var G__7628 = cljs.core.next(coll__$1);
val__$1 = G__7627;
coll__$1 = G__7628;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__7632 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7632) : cljs.core.to_array.call(null,G__7632));
})();
var G__7633_7635 = a;
goog.array.shuffle(G__7633_7635);

var G__7634 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__7634) : cljs.core.vec.call(null,G__7634));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__7638 = coll;
if(G__7638){
var bit__4438__auto__ = (G__7638.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4438__auto__) || (G__7638.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__7639 = coll;
if(G__7639){
var bit__4438__auto__ = (G__7639.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4438__auto__) || (G__7639.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__7648 = null;
var G__7648__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__7648__1 = (function (x){
var G__7645 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__7645) : cf.call(null,G__7645));
});
var G__7648__2 = (function (x,y){
var G__7646 = x;
var G__7647 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7646,G__7647) : f.call(null,G__7646,G__7647));
});
G__7648 = function(x,y){
switch(arguments.length){
case 0:
return G__7648__0.call(this);
case 1:
return G__7648__1.call(this,x);
case 2:
return G__7648__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7648.cljs$core$IFn$_invoke$arity$0 = G__7648__0;
G__7648.cljs$core$IFn$_invoke$arity$1 = G__7648__1;
G__7648.cljs$core$IFn$_invoke$arity$2 = G__7648__2;
return G__7648;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__7655 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7655) : xform.call(null,G__7655));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__7656 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__7656) : f__$1.call(null,G__7656));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__7657__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__7657 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7658__i = 0, G__7658__a = new Array(arguments.length -  2);
while (G__7658__i < G__7658__a.length) {G__7658__a[G__7658__i] = arguments[G__7658__i + 2]; ++G__7658__i;}
  more = new cljs.core.IndexedSeq(G__7658__a,0);
} 
return G__7657__delegate.call(this,x,y,more);};
G__7657.cljs$lang$maxFixedArity = 2;
G__7657.cljs$lang$applyTo = (function (arglist__7659){
var x = cljs.core.first(arglist__7659);
arglist__7659 = cljs.core.next(arglist__7659);
var y = cljs.core.first(arglist__7659);
var more = cljs.core.rest(arglist__7659);
return G__7657__delegate(x,y,more);
});
G__7657.cljs$core$IFn$_invoke$arity$variadic = G__7657__delegate;
return G__7657;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__7660 = null;
if (arguments.length > 2) {
var G__7661__i = 0, G__7661__a = new Array(arguments.length -  2);
while (G__7661__i < G__7661__a.length) {G__7661__a[G__7661__i] = arguments[G__7661__i + 2]; ++G__7661__i;}
G__7660 = new cljs.core.IndexedSeq(G__7661__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7660);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__7662__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__7662 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7663__i = 0, G__7663__a = new Array(arguments.length -  2);
while (G__7663__i < G__7663__a.length) {G__7663__a[G__7663__i] = arguments[G__7663__i + 2]; ++G__7663__i;}
  more = new cljs.core.IndexedSeq(G__7663__a,0);
} 
return G__7662__delegate.call(this,x,y,more);};
G__7662.cljs$lang$maxFixedArity = 2;
G__7662.cljs$lang$applyTo = (function (arglist__7664){
var x = cljs.core.first(arglist__7664);
arglist__7664 = cljs.core.next(arglist__7664);
var y = cljs.core.first(arglist__7664);
var more = cljs.core.rest(arglist__7664);
return G__7662__delegate(x,y,more);
});
G__7662.cljs$core$IFn$_invoke$arity$variadic = G__7662__delegate;
return G__7662;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__7665 = null;
if (arguments.length > 2) {
var G__7666__i = 0, G__7666__a = new Array(arguments.length -  2);
while (G__7666__i < G__7666__a.length) {G__7666__a[G__7666__i] = arguments[G__7666__i + 2]; ++G__7666__i;}
G__7665 = new cljs.core.IndexedSeq(G__7666__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7665);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__7667__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__7667 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7668__i = 0, G__7668__a = new Array(arguments.length -  2);
while (G__7668__i < G__7668__a.length) {G__7668__a[G__7668__i] = arguments[G__7668__i + 2]; ++G__7668__i;}
  more = new cljs.core.IndexedSeq(G__7668__a,0);
} 
return G__7667__delegate.call(this,x,y,more);};
G__7667.cljs$lang$maxFixedArity = 2;
G__7667.cljs$lang$applyTo = (function (arglist__7669){
var x = cljs.core.first(arglist__7669);
arglist__7669 = cljs.core.next(arglist__7669);
var y = cljs.core.first(arglist__7669);
var more = cljs.core.rest(arglist__7669);
return G__7667__delegate(x,y,more);
});
G__7667.cljs$core$IFn$_invoke$arity$variadic = G__7667__delegate;
return G__7667;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__7670 = null;
if (arguments.length > 2) {
var G__7671__i = 0, G__7671__a = new Array(arguments.length -  2);
while (G__7671__i < G__7671__a.length) {G__7671__a[G__7671__i] = arguments[G__7671__i + 2]; ++G__7671__i;}
G__7670 = new cljs.core.IndexedSeq(G__7671__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__7676__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7676 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7677__i = 0, G__7677__a = new Array(arguments.length -  2);
while (G__7677__i < G__7677__a.length) {G__7677__a[G__7677__i] = arguments[G__7677__i + 2]; ++G__7677__i;}
  more = new cljs.core.IndexedSeq(G__7677__a,0);
} 
return G__7676__delegate.call(this,x,y,more);};
G__7676.cljs$lang$maxFixedArity = 2;
G__7676.cljs$lang$applyTo = (function (arglist__7678){
var x = cljs.core.first(arglist__7678);
arglist__7678 = cljs.core.next(arglist__7678);
var y = cljs.core.first(arglist__7678);
var more = cljs.core.rest(arglist__7678);
return G__7676__delegate(x,y,more);
});
G__7676.cljs$core$IFn$_invoke$arity$variadic = G__7676__delegate;
return G__7676;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__7679 = null;
if (arguments.length > 2) {
var G__7680__i = 0, G__7680__a = new Array(arguments.length -  2);
while (G__7680__i < G__7680__a.length) {G__7680__a[G__7680__i] = arguments[G__7680__i + 2]; ++G__7680__i;}
G__7679 = new cljs.core.IndexedSeq(G__7680__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7679);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__7681__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__7682 = y;
var G__7683 = cljs.core.first(more);
var G__7684 = cljs.core.next(more);
x = G__7682;
y = G__7683;
more = G__7684;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7681 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7685__i = 0, G__7685__a = new Array(arguments.length -  2);
while (G__7685__i < G__7685__a.length) {G__7685__a[G__7685__i] = arguments[G__7685__i + 2]; ++G__7685__i;}
  more = new cljs.core.IndexedSeq(G__7685__a,0);
} 
return G__7681__delegate.call(this,x,y,more);};
G__7681.cljs$lang$maxFixedArity = 2;
G__7681.cljs$lang$applyTo = (function (arglist__7686){
var x = cljs.core.first(arglist__7686);
arglist__7686 = cljs.core.next(arglist__7686);
var y = cljs.core.first(arglist__7686);
var more = cljs.core.rest(arglist__7686);
return G__7681__delegate(x,y,more);
});
G__7681.cljs$core$IFn$_invoke$arity$variadic = G__7681__delegate;
return G__7681;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__7687 = null;
if (arguments.length > 2) {
var G__7688__i = 0, G__7688__a = new Array(arguments.length -  2);
while (G__7688__i < G__7688__a.length) {G__7688__a[G__7688__i] = arguments[G__7688__i + 2]; ++G__7688__i;}
G__7687 = new cljs.core.IndexedSeq(G__7688__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7687);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__7689__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__7690 = y;
var G__7691 = cljs.core.first(more);
var G__7692 = cljs.core.next(more);
x = G__7690;
y = G__7691;
more = G__7692;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7689 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7693__i = 0, G__7693__a = new Array(arguments.length -  2);
while (G__7693__i < G__7693__a.length) {G__7693__a[G__7693__i] = arguments[G__7693__i + 2]; ++G__7693__i;}
  more = new cljs.core.IndexedSeq(G__7693__a,0);
} 
return G__7689__delegate.call(this,x,y,more);};
G__7689.cljs$lang$maxFixedArity = 2;
G__7689.cljs$lang$applyTo = (function (arglist__7694){
var x = cljs.core.first(arglist__7694);
arglist__7694 = cljs.core.next(arglist__7694);
var y = cljs.core.first(arglist__7694);
var more = cljs.core.rest(arglist__7694);
return G__7689__delegate(x,y,more);
});
G__7689.cljs$core$IFn$_invoke$arity$variadic = G__7689__delegate;
return G__7689;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__7695 = null;
if (arguments.length > 2) {
var G__7696__i = 0, G__7696__a = new Array(arguments.length -  2);
while (G__7696__i < G__7696__a.length) {G__7696__a[G__7696__i] = arguments[G__7696__i + 2]; ++G__7696__i;}
G__7695 = new cljs.core.IndexedSeq(G__7696__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__7697__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__7698 = y;
var G__7699 = cljs.core.first(more);
var G__7700 = cljs.core.next(more);
x = G__7698;
y = G__7699;
more = G__7700;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7697 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7701__i = 0, G__7701__a = new Array(arguments.length -  2);
while (G__7701__i < G__7701__a.length) {G__7701__a[G__7701__i] = arguments[G__7701__i + 2]; ++G__7701__i;}
  more = new cljs.core.IndexedSeq(G__7701__a,0);
} 
return G__7697__delegate.call(this,x,y,more);};
G__7697.cljs$lang$maxFixedArity = 2;
G__7697.cljs$lang$applyTo = (function (arglist__7702){
var x = cljs.core.first(arglist__7702);
arglist__7702 = cljs.core.next(arglist__7702);
var y = cljs.core.first(arglist__7702);
var more = cljs.core.rest(arglist__7702);
return G__7697__delegate(x,y,more);
});
G__7697.cljs$core$IFn$_invoke$arity$variadic = G__7697__delegate;
return G__7697;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__7703 = null;
if (arguments.length > 2) {
var G__7704__i = 0, G__7704__a = new Array(arguments.length -  2);
while (G__7704__i < G__7704__a.length) {G__7704__a[G__7704__i] = arguments[G__7704__i + 2]; ++G__7704__i;}
G__7703 = new cljs.core.IndexedSeq(G__7704__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7703);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__7705__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__7706 = y;
var G__7707 = cljs.core.first(more);
var G__7708 = cljs.core.next(more);
x = G__7706;
y = G__7707;
more = G__7708;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7705 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7709__i = 0, G__7709__a = new Array(arguments.length -  2);
while (G__7709__i < G__7709__a.length) {G__7709__a[G__7709__i] = arguments[G__7709__i + 2]; ++G__7709__i;}
  more = new cljs.core.IndexedSeq(G__7709__a,0);
} 
return G__7705__delegate.call(this,x,y,more);};
G__7705.cljs$lang$maxFixedArity = 2;
G__7705.cljs$lang$applyTo = (function (arglist__7710){
var x = cljs.core.first(arglist__7710);
arglist__7710 = cljs.core.next(arglist__7710);
var y = cljs.core.first(arglist__7710);
var more = cljs.core.rest(arglist__7710);
return G__7705__delegate(x,y,more);
});
G__7705.cljs$core$IFn$_invoke$arity$variadic = G__7705__delegate;
return G__7705;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__7711 = null;
if (arguments.length > 2) {
var G__7712__i = 0, G__7712__a = new Array(arguments.length -  2);
while (G__7712__i < G__7712__a.length) {G__7712__a[G__7712__i] = arguments[G__7712__i + 2]; ++G__7712__i;}
G__7711 = new cljs.core.IndexedSeq(G__7712__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7711);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4081__auto__ = x;
var y__4082__auto__ = y;
return ((x__4081__auto__ > y__4082__auto__) ? x__4081__auto__ : y__4082__auto__);
});
var max__3 = (function() { 
var G__7713__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4081__auto__ = x;
var y__4082__auto__ = y;
return ((x__4081__auto__ > y__4082__auto__) ? x__4081__auto__ : y__4082__auto__);
})(),more);
};
var G__7713 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7714__i = 0, G__7714__a = new Array(arguments.length -  2);
while (G__7714__i < G__7714__a.length) {G__7714__a[G__7714__i] = arguments[G__7714__i + 2]; ++G__7714__i;}
  more = new cljs.core.IndexedSeq(G__7714__a,0);
} 
return G__7713__delegate.call(this,x,y,more);};
G__7713.cljs$lang$maxFixedArity = 2;
G__7713.cljs$lang$applyTo = (function (arglist__7715){
var x = cljs.core.first(arglist__7715);
arglist__7715 = cljs.core.next(arglist__7715);
var y = cljs.core.first(arglist__7715);
var more = cljs.core.rest(arglist__7715);
return G__7713__delegate(x,y,more);
});
G__7713.cljs$core$IFn$_invoke$arity$variadic = G__7713__delegate;
return G__7713;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__7716 = null;
if (arguments.length > 2) {
var G__7717__i = 0, G__7717__a = new Array(arguments.length -  2);
while (G__7717__i < G__7717__a.length) {G__7717__a[G__7717__i] = arguments[G__7717__i + 2]; ++G__7717__i;}
G__7716 = new cljs.core.IndexedSeq(G__7717__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7716);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4088__auto__ = x;
var y__4089__auto__ = y;
return ((x__4088__auto__ < y__4089__auto__) ? x__4088__auto__ : y__4089__auto__);
});
var min__3 = (function() { 
var G__7718__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4088__auto__ = x;
var y__4089__auto__ = y;
return ((x__4088__auto__ < y__4089__auto__) ? x__4088__auto__ : y__4089__auto__);
})(),more);
};
var G__7718 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7719__i = 0, G__7719__a = new Array(arguments.length -  2);
while (G__7719__i < G__7719__a.length) {G__7719__a[G__7719__i] = arguments[G__7719__i + 2]; ++G__7719__i;}
  more = new cljs.core.IndexedSeq(G__7719__a,0);
} 
return G__7718__delegate.call(this,x,y,more);};
G__7718.cljs$lang$maxFixedArity = 2;
G__7718.cljs$lang$applyTo = (function (arglist__7720){
var x = cljs.core.first(arglist__7720);
arglist__7720 = cljs.core.next(arglist__7720);
var y = cljs.core.first(arglist__7720);
var more = cljs.core.rest(arglist__7720);
return G__7718__delegate(x,y,more);
});
G__7718.cljs$core$IFn$_invoke$arity$variadic = G__7718__delegate;
return G__7718;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__7721 = null;
if (arguments.length > 2) {
var G__7722__i = 0, G__7722__a = new Array(arguments.length -  2);
while (G__7722__i < G__7722__a.length) {G__7722__a[G__7722__i] = arguments[G__7722__i + 2]; ++G__7722__i;}
G__7721 = new cljs.core.IndexedSeq(G__7722__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7721);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__7723__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__7723 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7724__i = 0, G__7724__a = new Array(arguments.length -  2);
while (G__7724__i < G__7724__a.length) {G__7724__a[G__7724__i] = arguments[G__7724__i + 2]; ++G__7724__i;}
  more = new cljs.core.IndexedSeq(G__7724__a,0);
} 
return G__7723__delegate.call(this,x,y,more);};
G__7723.cljs$lang$maxFixedArity = 2;
G__7723.cljs$lang$applyTo = (function (arglist__7725){
var x = cljs.core.first(arglist__7725);
arglist__7725 = cljs.core.next(arglist__7725);
var y = cljs.core.first(arglist__7725);
var more = cljs.core.rest(arglist__7725);
return G__7723__delegate(x,y,more);
});
G__7723.cljs$core$IFn$_invoke$arity$variadic = G__7723__delegate;
return G__7723;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__7726 = null;
if (arguments.length > 2) {
var G__7727__i = 0, G__7727__a = new Array(arguments.length -  2);
while (G__7727__i < G__7727__a.length) {G__7727__a[G__7727__i] = arguments[G__7727__i + 2]; ++G__7727__i;}
G__7726 = new cljs.core.IndexedSeq(G__7727__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7726);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__7728__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__7728 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7729__i = 0, G__7729__a = new Array(arguments.length -  2);
while (G__7729__i < G__7729__a.length) {G__7729__a[G__7729__i] = arguments[G__7729__i + 2]; ++G__7729__i;}
  more = new cljs.core.IndexedSeq(G__7729__a,0);
} 
return G__7728__delegate.call(this,x,y,more);};
G__7728.cljs$lang$maxFixedArity = 2;
G__7728.cljs$lang$applyTo = (function (arglist__7730){
var x = cljs.core.first(arglist__7730);
arglist__7730 = cljs.core.next(arglist__7730);
var y = cljs.core.first(arglist__7730);
var more = cljs.core.rest(arglist__7730);
return G__7728__delegate(x,y,more);
});
G__7728.cljs$core$IFn$_invoke$arity$variadic = G__7728__delegate;
return G__7728;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__7731 = null;
if (arguments.length > 2) {
var G__7732__i = 0, G__7732__a = new Array(arguments.length -  2);
while (G__7732__i < G__7732__a.length) {G__7732__a[G__7732__i] = arguments[G__7732__i + 2]; ++G__7732__i;}
G__7731 = new cljs.core.IndexedSeq(G__7732__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7731);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__7737__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7737 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7738__i = 0, G__7738__a = new Array(arguments.length -  2);
while (G__7738__i < G__7738__a.length) {G__7738__a[G__7738__i] = arguments[G__7738__i + 2]; ++G__7738__i;}
  more = new cljs.core.IndexedSeq(G__7738__a,0);
} 
return G__7737__delegate.call(this,x,y,more);};
G__7737.cljs$lang$maxFixedArity = 2;
G__7737.cljs$lang$applyTo = (function (arglist__7739){
var x = cljs.core.first(arglist__7739);
arglist__7739 = cljs.core.next(arglist__7739);
var y = cljs.core.first(arglist__7739);
var more = cljs.core.rest(arglist__7739);
return G__7737__delegate(x,y,more);
});
G__7737.cljs$core$IFn$_invoke$arity$variadic = G__7737__delegate;
return G__7737;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__7740 = null;
if (arguments.length > 2) {
var G__7741__i = 0, G__7741__a = new Array(arguments.length -  2);
while (G__7741__i < G__7741__a.length) {G__7741__a[G__7741__i] = arguments[G__7741__i + 2]; ++G__7741__i;}
G__7740 = new cljs.core.IndexedSeq(G__7741__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7740);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__7742__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__7742 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7743__i = 0, G__7743__a = new Array(arguments.length -  2);
while (G__7743__i < G__7743__a.length) {G__7743__a[G__7743__i] = arguments[G__7743__i + 2]; ++G__7743__i;}
  more = new cljs.core.IndexedSeq(G__7743__a,0);
} 
return G__7742__delegate.call(this,x,y,more);};
G__7742.cljs$lang$maxFixedArity = 2;
G__7742.cljs$lang$applyTo = (function (arglist__7744){
var x = cljs.core.first(arglist__7744);
arglist__7744 = cljs.core.next(arglist__7744);
var y = cljs.core.first(arglist__7744);
var more = cljs.core.rest(arglist__7744);
return G__7742__delegate(x,y,more);
});
G__7742.cljs$core$IFn$_invoke$arity$variadic = G__7742__delegate;
return G__7742;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__7745 = null;
if (arguments.length > 2) {
var G__7746__i = 0, G__7746__a = new Array(arguments.length -  2);
while (G__7746__i < G__7746__a.length) {G__7746__a[G__7746__i] = arguments[G__7746__i + 2]; ++G__7746__i;}
G__7745 = new cljs.core.IndexedSeq(G__7746__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7745);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__7747__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__7747 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7748__i = 0, G__7748__a = new Array(arguments.length -  2);
while (G__7748__i < G__7748__a.length) {G__7748__a[G__7748__i] = arguments[G__7748__i + 2]; ++G__7748__i;}
  more = new cljs.core.IndexedSeq(G__7748__a,0);
} 
return G__7747__delegate.call(this,x,y,more);};
G__7747.cljs$lang$maxFixedArity = 2;
G__7747.cljs$lang$applyTo = (function (arglist__7749){
var x = cljs.core.first(arglist__7749);
arglist__7749 = cljs.core.next(arglist__7749);
var y = cljs.core.first(arglist__7749);
var more = cljs.core.rest(arglist__7749);
return G__7747__delegate(x,y,more);
});
G__7747.cljs$core$IFn$_invoke$arity$variadic = G__7747__delegate;
return G__7747;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__7750 = null;
if (arguments.length > 2) {
var G__7751__i = 0, G__7751__a = new Array(arguments.length -  2);
while (G__7751__i < G__7751__a.length) {G__7751__a[G__7751__i] = arguments[G__7751__i + 2]; ++G__7751__i;}
G__7750 = new cljs.core.IndexedSeq(G__7751__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7750);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__7754 = x;
var G__7755 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__7754,G__7755) : cljs.core.mod.call(null,G__7754,G__7755));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__7756__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__7756 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7757__i = 0, G__7757__a = new Array(arguments.length -  2);
while (G__7757__i < G__7757__a.length) {G__7757__a[G__7757__i] = arguments[G__7757__i + 2]; ++G__7757__i;}
  more = new cljs.core.IndexedSeq(G__7757__a,0);
} 
return G__7756__delegate.call(this,x,y,more);};
G__7756.cljs$lang$maxFixedArity = 2;
G__7756.cljs$lang$applyTo = (function (arglist__7758){
var x = cljs.core.first(arglist__7758);
arglist__7758 = cljs.core.next(arglist__7758);
var y = cljs.core.first(arglist__7758);
var more = cljs.core.rest(arglist__7758);
return G__7756__delegate(x,y,more);
});
G__7756.cljs$core$IFn$_invoke$arity$variadic = G__7756__delegate;
return G__7756;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__7759 = null;
if (arguments.length > 2) {
var G__7760__i = 0, G__7760__a = new Array(arguments.length -  2);
while (G__7760__i < G__7760__a.length) {G__7760__a[G__7760__i] = arguments[G__7760__i + 2]; ++G__7760__i;}
G__7759 = new cljs.core.IndexedSeq(G__7760__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7759);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__7761__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__7761 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7762__i = 0, G__7762__a = new Array(arguments.length -  2);
while (G__7762__i < G__7762__a.length) {G__7762__a[G__7762__i] = arguments[G__7762__i + 2]; ++G__7762__i;}
  more = new cljs.core.IndexedSeq(G__7762__a,0);
} 
return G__7761__delegate.call(this,x,y,more);};
G__7761.cljs$lang$maxFixedArity = 2;
G__7761.cljs$lang$applyTo = (function (arglist__7763){
var x = cljs.core.first(arglist__7763);
arglist__7763 = cljs.core.next(arglist__7763);
var y = cljs.core.first(arglist__7763);
var more = cljs.core.rest(arglist__7763);
return G__7761__delegate(x,y,more);
});
G__7761.cljs$core$IFn$_invoke$arity$variadic = G__7761__delegate;
return G__7761;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__7764 = null;
if (arguments.length > 2) {
var G__7765__i = 0, G__7765__a = new Array(arguments.length -  2);
while (G__7765__i < G__7765__a.length) {G__7765__a[G__7765__i] = arguments[G__7765__i + 2]; ++G__7765__i;}
G__7764 = new cljs.core.IndexedSeq(G__7765__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7764);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__7768 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7768) : Math.floor.call(null,G__7768));
} else {
var G__7769 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__7769) : Math.ceil.call(null,G__7769));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__7770__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__7770 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7771__i = 0, G__7771__a = new Array(arguments.length -  2);
while (G__7771__i < G__7771__a.length) {G__7771__a[G__7771__i] = arguments[G__7771__i + 2]; ++G__7771__i;}
  more = new cljs.core.IndexedSeq(G__7771__a,0);
} 
return G__7770__delegate.call(this,x,y,more);};
G__7770.cljs$lang$maxFixedArity = 2;
G__7770.cljs$lang$applyTo = (function (arglist__7772){
var x = cljs.core.first(arglist__7772);
arglist__7772 = cljs.core.next(arglist__7772);
var y = cljs.core.first(arglist__7772);
var more = cljs.core.rest(arglist__7772);
return G__7770__delegate(x,y,more);
});
G__7770.cljs$core$IFn$_invoke$arity$variadic = G__7770__delegate;
return G__7770;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__7773 = null;
if (arguments.length > 2) {
var G__7774__i = 0, G__7774__a = new Array(arguments.length -  2);
while (G__7774__i < G__7774__a.length) {G__7774__a[G__7774__i] = arguments[G__7774__i + 2]; ++G__7774__i;}
G__7773 = new cljs.core.IndexedSeq(G__7774__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__7775__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__7775 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7776__i = 0, G__7776__a = new Array(arguments.length -  2);
while (G__7776__i < G__7776__a.length) {G__7776__a[G__7776__i] = arguments[G__7776__i + 2]; ++G__7776__i;}
  more = new cljs.core.IndexedSeq(G__7776__a,0);
} 
return G__7775__delegate.call(this,x,y,more);};
G__7775.cljs$lang$maxFixedArity = 2;
G__7775.cljs$lang$applyTo = (function (arglist__7777){
var x = cljs.core.first(arglist__7777);
arglist__7777 = cljs.core.next(arglist__7777);
var y = cljs.core.first(arglist__7777);
var more = cljs.core.rest(arglist__7777);
return G__7775__delegate(x,y,more);
});
G__7775.cljs$core$IFn$_invoke$arity$variadic = G__7775__delegate;
return G__7775;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__7778 = null;
if (arguments.length > 2) {
var G__7779__i = 0, G__7779__a = new Array(arguments.length -  2);
while (G__7779__i < G__7779__a.length) {G__7779__a[G__7779__i] = arguments[G__7779__i + 2]; ++G__7779__i;}
G__7778 = new cljs.core.IndexedSeq(G__7779__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7778);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__7780__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__7780 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7781__i = 0, G__7781__a = new Array(arguments.length -  2);
while (G__7781__i < G__7781__a.length) {G__7781__a[G__7781__i] = arguments[G__7781__i + 2]; ++G__7781__i;}
  more = new cljs.core.IndexedSeq(G__7781__a,0);
} 
return G__7780__delegate.call(this,x,y,more);};
G__7780.cljs$lang$maxFixedArity = 2;
G__7780.cljs$lang$applyTo = (function (arglist__7782){
var x = cljs.core.first(arglist__7782);
arglist__7782 = cljs.core.next(arglist__7782);
var y = cljs.core.first(arglist__7782);
var more = cljs.core.rest(arglist__7782);
return G__7780__delegate(x,y,more);
});
G__7780.cljs$core$IFn$_invoke$arity$variadic = G__7780__delegate;
return G__7780;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__7783 = null;
if (arguments.length > 2) {
var G__7784__i = 0, G__7784__a = new Array(arguments.length -  2);
while (G__7784__i < G__7784__a.length) {G__7784__a[G__7784__i] = arguments[G__7784__i + 2]; ++G__7784__i;}
G__7783 = new cljs.core.IndexedSeq(G__7784__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7783);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__7785__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__7785 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7786__i = 0, G__7786__a = new Array(arguments.length -  2);
while (G__7786__i < G__7786__a.length) {G__7786__a[G__7786__i] = arguments[G__7786__i + 2]; ++G__7786__i;}
  more = new cljs.core.IndexedSeq(G__7786__a,0);
} 
return G__7785__delegate.call(this,x,y,more);};
G__7785.cljs$lang$maxFixedArity = 2;
G__7785.cljs$lang$applyTo = (function (arglist__7787){
var x = cljs.core.first(arglist__7787);
arglist__7787 = cljs.core.next(arglist__7787);
var y = cljs.core.first(arglist__7787);
var more = cljs.core.rest(arglist__7787);
return G__7785__delegate(x,y,more);
});
G__7785.cljs$core$IFn$_invoke$arity$variadic = G__7785__delegate;
return G__7785;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__7788 = null;
if (arguments.length > 2) {
var G__7789__i = 0, G__7789__a = new Array(arguments.length -  2);
while (G__7789__i < G__7789__a.length) {G__7789__a[G__7789__i] = arguments[G__7789__i + 2]; ++G__7789__i;}
G__7788 = new cljs.core.IndexedSeq(G__7789__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7788);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__7794__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7795 = y;
var G__7796 = cljs.core.first(more);
var G__7797 = cljs.core.next(more);
x = G__7795;
y = G__7796;
more = G__7797;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7794 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7798__i = 0, G__7798__a = new Array(arguments.length -  2);
while (G__7798__i < G__7798__a.length) {G__7798__a[G__7798__i] = arguments[G__7798__i + 2]; ++G__7798__i;}
  more = new cljs.core.IndexedSeq(G__7798__a,0);
} 
return G__7794__delegate.call(this,x,y,more);};
G__7794.cljs$lang$maxFixedArity = 2;
G__7794.cljs$lang$applyTo = (function (arglist__7799){
var x = cljs.core.first(arglist__7799);
arglist__7799 = cljs.core.next(arglist__7799);
var y = cljs.core.first(arglist__7799);
var more = cljs.core.rest(arglist__7799);
return G__7794__delegate(x,y,more);
});
G__7794.cljs$core$IFn$_invoke$arity$variadic = G__7794__delegate;
return G__7794;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__7800 = null;
if (arguments.length > 2) {
var G__7801__i = 0, G__7801__a = new Array(arguments.length -  2);
while (G__7801__i < G__7801__a.length) {G__7801__a[G__7801__i] = arguments[G__7801__i + 2]; ++G__7801__i;}
G__7800 = new cljs.core.IndexedSeq(G__7801__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7800);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__7802 = (n__$1 - (1));
var G__7803 = cljs.core.next(xs);
n__$1 = G__7802;
xs = G__7803;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__7807 = x;
return goog.string.buildString(G__7807);
}
});
var str__2 = (function() { 
var G__7808__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__7809 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__7810 = cljs.core.next(more);
sb = G__7809;
more = G__7810;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__7808 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__7811__i = 0, G__7811__a = new Array(arguments.length -  1);
while (G__7811__i < G__7811__a.length) {G__7811__a[G__7811__i] = arguments[G__7811__i + 1]; ++G__7811__i;}
  ys = new cljs.core.IndexedSeq(G__7811__a,0);
} 
return G__7808__delegate.call(this,x,ys);};
G__7808.cljs$lang$maxFixedArity = 1;
G__7808.cljs$lang$applyTo = (function (arglist__7812){
var x = cljs.core.first(arglist__7812);
var ys = cljs.core.rest(arglist__7812);
return G__7808__delegate(x,ys);
});
G__7808.cljs$core$IFn$_invoke$arity$variadic = G__7808__delegate;
return G__7808;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__7813 = null;
if (arguments.length > 1) {
var G__7814__i = 0, G__7814__a = new Array(arguments.length -  1);
while (G__7814__i < G__7814__a.length) {G__7814__a[G__7814__i] = arguments[G__7814__i + 1]; ++G__7814__i;}
G__7813 = new cljs.core.IndexedSeq(G__7814__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7813);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__7815 = cljs.core.next(xs);
var G__7816 = cljs.core.next(ys);
xs = G__7815;
ys = G__7816;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__7817 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__7818 = cljs.core.next(s);
res = G__7817;
s = G__7818;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__7823 = ((h + (cljs.core.hash((function (){var G__7821 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__7821) : cljs.core.key.call(null,G__7821));
})()) ^ cljs.core.hash((function (){var G__7822 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__7822) : cljs.core.val.call(null,G__7822));
})()))) % (4503599627370496));
var G__7824 = cljs.core.next(s);
h = G__7823;
s = G__7824;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__7825 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__7826 = cljs.core.next(s__$1);
h = G__7825;
s__$1 = G__7826;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__7837_7847 = cljs.core.seq(fn_map);
var chunk__7838_7848 = null;
var count__7839_7849 = (0);
var i__7840_7850 = (0);
while(true){
if((i__7840_7850 < count__7839_7849)){
var vec__7841_7851 = chunk__7838_7848.cljs$core$IIndexed$_nth$arity$2(null,i__7840_7850);
var key_name_7852 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7841_7851,(0),null);
var f_7853 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7841_7851,(1),null);
var str_name_7854 = (function (){var G__7842 = key_name_7852;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7842) : cljs.core.name.call(null,G__7842));
})();
(obj[str_name_7854] = f_7853);

var G__7855 = seq__7837_7847;
var G__7856 = chunk__7838_7848;
var G__7857 = count__7839_7849;
var G__7858 = (i__7840_7850 + (1));
seq__7837_7847 = G__7855;
chunk__7838_7848 = G__7856;
count__7839_7849 = G__7857;
i__7840_7850 = G__7858;
continue;
} else {
var temp__4126__auto___7859 = cljs.core.seq(seq__7837_7847);
if(temp__4126__auto___7859){
var seq__7837_7860__$1 = temp__4126__auto___7859;
if(cljs.core.chunked_seq_QMARK_(seq__7837_7860__$1)){
var c__4551__auto___7861 = (function (){var G__7843 = seq__7837_7860__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__7843) : cljs.core.chunk_first.call(null,G__7843));
})();
var G__7862 = (function (){var G__7844 = seq__7837_7860__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__7844) : cljs.core.chunk_rest.call(null,G__7844));
})();
var G__7863 = c__4551__auto___7861;
var G__7864 = cljs.core.count(c__4551__auto___7861);
var G__7865 = (0);
seq__7837_7847 = G__7862;
chunk__7838_7848 = G__7863;
count__7839_7849 = G__7864;
i__7840_7850 = G__7865;
continue;
} else {
var vec__7845_7866 = cljs.core.first(seq__7837_7860__$1);
var key_name_7867 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7845_7866,(0),null);
var f_7868 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7845_7866,(1),null);
var str_name_7869 = (function (){var G__7846 = key_name_7867;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7846) : cljs.core.name.call(null,G__7846));
})();
(obj[str_name_7869] = f_7868);

var G__7870 = cljs.core.next(seq__7837_7860__$1);
var G__7871 = null;
var G__7872 = (0);
var G__7873 = (0);
seq__7837_7847 = G__7870;
chunk__7838_7848 = G__7871;
count__7839_7849 = G__7872;
i__7840_7850 = G__7873;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__7875 = coll;
if(G__7875){
var bit__4445__auto__ = (G__7875.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4445__auto__) || (G__7875.cljs$core$IReversible$)){
return true;
} else {
if((!G__7875.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7875);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7875);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__7876 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__7876;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__7877 = (i - (1));
var G__7878 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__7877;
r = G__7878;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__7879__i = 0, G__7879__a = new Array(arguments.length -  0);
while (G__7879__i < G__7879__a.length) {G__7879__a[G__7879__i] = arguments[G__7879__i + 0]; ++G__7879__i;}
  xs = new cljs.core.IndexedSeq(G__7879__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__7880){
var xs = cljs.core.seq(arglist__7880);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3764__auto__ = (coll == null);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var G__7884 = coll;
if(G__7884){
var bit__4438__auto__ = (G__7884.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4438__auto__) || (G__7884.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__7886 = x;
if(G__7886){
var bit__4445__auto__ = (G__7886.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4445__auto__) || (G__7886.cljs$core$IList$)){
return true;
} else {
if((!G__7886.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7886);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7886);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3752__auto__ = cljs.core.not(a.ns);
if(and__3752__auto__){
return b.ns;
} else {
return and__3752__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7893 = a.ns;
var G__7894 = b.ns;
return goog.array.defaultCompare(G__7893,G__7894);
})();
if(((0) === nsc)){
var G__7895 = a.name;
var G__7896 = b.name;
return goog.array.defaultCompare(G__7895,G__7896);
} else {
return nsc;
}
}
} else {
var G__7897 = a.name;
var G__7898 = b.name;
return goog.array.defaultCompare(G__7897,G__7898);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4185__auto__ = self__._hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__7900 = null;
var G__7900__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__7900__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__7900 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7900__2.call(this,self__,coll);
case 3:
return G__7900__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7900.cljs$core$IFn$_invoke$arity$2 = G__7900__2;
G__7900.cljs$core$IFn$_invoke$arity$3 = G__7900__3;
return G__7900;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args7899){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7899)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__7902 = x;
if(G__7902){
var bit__4438__auto__ = (G__7902.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4438__auto__) || (G__7902.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__7904 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7904) : cljs.core.name.call(null,G__7904));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__7905 = ls.sval();
ls = G__7905;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__7907 = s;
if(G__7907){
var bit__4438__auto__ = (G__7907.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4438__auto__) || (G__7907.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__7908 = cljs.core.next(s__$1);
s__$1 = G__7908;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_7909 = (0);
var xs_7910 = cljs.core.seq(coll);
while(true){
if(xs_7910){
(ret[i_7909] = cljs.core.to_array(cljs.core.first(xs_7910)));

var G__7911 = (i_7909 + (1));
var G__7912 = cljs.core.next(xs_7910);
i_7909 = G__7911;
xs_7910 = G__7912;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7915 = (i + (1));
var G__7916 = cljs.core.next(s__$1);
i = G__7915;
s__$1 = G__7916;
continue;
} else {
return a;
}
break;
}
} else {
var n__4651__auto___7917 = size;
var i_7918 = (0);
while(true){
if((i_7918 < n__4651__auto___7917)){
(a[i_7918] = init_val_or_seq);

var G__7919 = (i_7918 + (1));
i_7918 = G__7919;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7922 = (i + (1));
var G__7923 = cljs.core.next(s__$1);
i = G__7922;
s__$1 = G__7923;
continue;
} else {
return a;
}
break;
}
} else {
var n__4651__auto___7924 = size;
var i_7925 = (0);
while(true){
if((i_7925 < n__4651__auto___7924)){
(a[i_7925] = init_val_or_seq);

var G__7926 = (i_7925 + (1));
i_7925 = G__7926;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7929 = (i + (1));
var G__7930 = cljs.core.next(s__$1);
i = G__7929;
s__$1 = G__7930;
continue;
} else {
return a;
}
break;
}
} else {
var n__4651__auto___7931 = size;
var i_7932 = (0);
while(true){
if((i_7932 < n__4651__auto___7931)){
(a[i_7932] = init_val_or_seq);

var G__7933 = (i_7932 + (1));
i_7932 = G__7933;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7936 = (i + (1));
var G__7937 = cljs.core.next(s__$1);
i = G__7936;
s__$1 = G__7937;
continue;
} else {
return a;
}
break;
}
} else {
var n__4651__auto___7938 = size;
var i_7939 = (0);
while(true){
if((i_7939 < n__4651__auto___7938)){
(a[i_7939] = init_val_or_seq);

var G__7940 = (i_7939 + (1));
i_7939 = G__7940;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__7941 = cljs.core.next(s__$1);
var G__7942 = (i - (1));
var G__7943 = (sum + (1));
s__$1 = G__7941;
i = G__7942;
sum = G__7943;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__7963__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__7963 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7964__i = 0, G__7964__a = new Array(arguments.length -  2);
while (G__7964__i < G__7964__a.length) {G__7964__a[G__7964__i] = arguments[G__7964__i + 2]; ++G__7964__i;}
  zs = new cljs.core.IndexedSeq(G__7964__a,0);
} 
return G__7963__delegate.call(this,x,y,zs);};
G__7963.cljs$lang$maxFixedArity = 2;
G__7963.cljs$lang$applyTo = (function (arglist__7965){
var x = cljs.core.first(arglist__7965);
arglist__7965 = cljs.core.next(arglist__7965);
var y = cljs.core.first(arglist__7965);
var zs = cljs.core.rest(arglist__7965);
return G__7963__delegate(x,y,zs);
});
G__7963.cljs$core$IFn$_invoke$arity$variadic = G__7963__delegate;
return G__7963;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__7966 = null;
if (arguments.length > 2) {
var G__7967__i = 0, G__7967__a = new Array(arguments.length -  2);
while (G__7967__i < G__7967__a.length) {G__7967__a[G__7967__i] = arguments[G__7967__i + 2]; ++G__7967__i;}
G__7966 = new cljs.core.IndexedSeq(G__7967__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7966);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__7968__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__7968 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__7969__i = 0, G__7969__a = new Array(arguments.length -  4);
while (G__7969__i < G__7969__a.length) {G__7969__a[G__7969__i] = arguments[G__7969__i + 4]; ++G__7969__i;}
  more = new cljs.core.IndexedSeq(G__7969__a,0);
} 
return G__7968__delegate.call(this,a,b,c,d,more);};
G__7968.cljs$lang$maxFixedArity = 4;
G__7968.cljs$lang$applyTo = (function (arglist__7970){
var a = cljs.core.first(arglist__7970);
arglist__7970 = cljs.core.next(arglist__7970);
var b = cljs.core.first(arglist__7970);
arglist__7970 = cljs.core.next(arglist__7970);
var c = cljs.core.first(arglist__7970);
arglist__7970 = cljs.core.next(arglist__7970);
var d = cljs.core.first(arglist__7970);
var more = cljs.core.rest(arglist__7970);
return G__7968__delegate(a,b,c,d,more);
});
G__7968.cljs$core$IFn$_invoke$arity$variadic = G__7968__delegate;
return G__7968;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__7971 = null;
if (arguments.length > 4) {
var G__7972__i = 0, G__7972__a = new Array(arguments.length -  4);
while (G__7972__i < G__7972__a.length) {G__7972__a[G__7972__i] = arguments[G__7972__i + 4]; ++G__7972__i;}
G__7971 = new cljs.core.IndexedSeq(G__7972__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__7971);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__7973__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7974 = ntcoll;
var G__7975 = cljs.core.first(vals);
var G__7976 = cljs.core.next(vals);
tcoll = G__7974;
val = G__7975;
vals = G__7976;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7973 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7977__i = 0, G__7977__a = new Array(arguments.length -  2);
while (G__7977__i < G__7977__a.length) {G__7977__a[G__7977__i] = arguments[G__7977__i + 2]; ++G__7977__i;}
  vals = new cljs.core.IndexedSeq(G__7977__a,0);
} 
return G__7973__delegate.call(this,tcoll,val,vals);};
G__7973.cljs$lang$maxFixedArity = 2;
G__7973.cljs$lang$applyTo = (function (arglist__7978){
var tcoll = cljs.core.first(arglist__7978);
arglist__7978 = cljs.core.next(arglist__7978);
var val = cljs.core.first(arglist__7978);
var vals = cljs.core.rest(arglist__7978);
return G__7973__delegate(tcoll,val,vals);
});
G__7973.cljs$core$IFn$_invoke$arity$variadic = G__7973__delegate;
return G__7973;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__7979 = null;
if (arguments.length > 2) {
var G__7980__i = 0, G__7980__a = new Array(arguments.length -  2);
while (G__7980__i < G__7980__a.length) {G__7980__a[G__7980__i] = arguments[G__7980__i + 2]; ++G__7980__i;}
G__7979 = new cljs.core.IndexedSeq(G__7980__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7979);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__7981__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__7982 = ntcoll;
var G__7983 = cljs.core.first(kvs);
var G__7984 = cljs.core.second(kvs);
var G__7985 = cljs.core.nnext(kvs);
tcoll = G__7982;
key = G__7983;
val = G__7984;
kvs = G__7985;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7981 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7986__i = 0, G__7986__a = new Array(arguments.length -  3);
while (G__7986__i < G__7986__a.length) {G__7986__a[G__7986__i] = arguments[G__7986__i + 3]; ++G__7986__i;}
  kvs = new cljs.core.IndexedSeq(G__7986__a,0);
} 
return G__7981__delegate.call(this,tcoll,key,val,kvs);};
G__7981.cljs$lang$maxFixedArity = 3;
G__7981.cljs$lang$applyTo = (function (arglist__7987){
var tcoll = cljs.core.first(arglist__7987);
arglist__7987 = cljs.core.next(arglist__7987);
var key = cljs.core.first(arglist__7987);
arglist__7987 = cljs.core.next(arglist__7987);
var val = cljs.core.first(arglist__7987);
var kvs = cljs.core.rest(arglist__7987);
return G__7981__delegate(tcoll,key,val,kvs);
});
G__7981.cljs$core$IFn$_invoke$arity$variadic = G__7981__delegate;
return G__7981;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__7988 = null;
if (arguments.length > 3) {
var G__7989__i = 0, G__7989__a = new Array(arguments.length -  3);
while (G__7989__i < G__7989__a.length) {G__7989__a[G__7989__i] = arguments[G__7989__i + 3]; ++G__7989__i;}
G__7988 = new cljs.core.IndexedSeq(G__7989__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__7988);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__7990__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__7991 = ntcoll;
var G__7992 = cljs.core.first(ks);
var G__7993 = cljs.core.next(ks);
tcoll = G__7991;
key = G__7992;
ks = G__7993;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7990 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7994__i = 0, G__7994__a = new Array(arguments.length -  2);
while (G__7994__i < G__7994__a.length) {G__7994__a[G__7994__i] = arguments[G__7994__i + 2]; ++G__7994__i;}
  ks = new cljs.core.IndexedSeq(G__7994__a,0);
} 
return G__7990__delegate.call(this,tcoll,key,ks);};
G__7990.cljs$lang$maxFixedArity = 2;
G__7990.cljs$lang$applyTo = (function (arglist__7995){
var tcoll = cljs.core.first(arglist__7995);
arglist__7995 = cljs.core.next(arglist__7995);
var key = cljs.core.first(arglist__7995);
var ks = cljs.core.rest(arglist__7995);
return G__7990__delegate(tcoll,key,ks);
});
G__7990.cljs$core$IFn$_invoke$arity$variadic = G__7990__delegate;
return G__7990;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__7996 = null;
if (arguments.length > 2) {
var G__7997__i = 0, G__7997__a = new Array(arguments.length -  2);
while (G__7997__i < G__7997__a.length) {G__7997__a[G__7997__i] = arguments[G__7997__i + 2]; ++G__7997__i;}
G__7996 = new cljs.core.IndexedSeq(G__7997__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__7996);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__7998__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7999 = ntcoll;
var G__8000 = cljs.core.first(vals);
var G__8001 = cljs.core.next(vals);
tcoll = G__7999;
val = G__8000;
vals = G__8001;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7998 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__8002__i = 0, G__8002__a = new Array(arguments.length -  2);
while (G__8002__i < G__8002__a.length) {G__8002__a[G__8002__i] = arguments[G__8002__i + 2]; ++G__8002__i;}
  vals = new cljs.core.IndexedSeq(G__8002__a,0);
} 
return G__7998__delegate.call(this,tcoll,val,vals);};
G__7998.cljs$lang$maxFixedArity = 2;
G__7998.cljs$lang$applyTo = (function (arglist__8003){
var tcoll = cljs.core.first(arglist__8003);
arglist__8003 = cljs.core.next(arglist__8003);
var val = cljs.core.first(arglist__8003);
var vals = cljs.core.rest(arglist__8003);
return G__7998__delegate(tcoll,val,vals);
});
G__7998.cljs$core$IFn$_invoke$arity$variadic = G__7998__delegate;
return G__7998;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__8004 = null;
if (arguments.length > 2) {
var G__8005__i = 0, G__8005__a = new Array(arguments.length -  2);
while (G__8005__i < G__8005__a.length) {G__8005__a[G__8005__i] = arguments[G__8005__i + 2]; ++G__8005__i;}
G__8004 = new cljs.core.IndexedSeq(G__8005__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__8004);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4695 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4695);
} else {
var G__8216 = a4695;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8216) : f.call(null,G__8216));
}
} else {
var b4696 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4695,b4696);
} else {
var G__8217 = a4695;
var G__8218 = b4696;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8217,G__8218) : f.call(null,G__8217,G__8218));
}
} else {
var c4697 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4695,b4696,c4697);
} else {
var G__8219 = a4695;
var G__8220 = b4696;
var G__8221 = c4697;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8219,G__8220,G__8221) : f.call(null,G__8219,G__8220,G__8221));
}
} else {
var d4698 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4695,b4696,c4697,d4698);
} else {
var G__8222 = a4695;
var G__8223 = b4696;
var G__8224 = c4697;
var G__8225 = d4698;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8222,G__8223,G__8224,G__8225) : f.call(null,G__8222,G__8223,G__8224,G__8225));
}
} else {
var e4699 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4695,b4696,c4697,d4698,e4699);
} else {
var G__8226 = a4695;
var G__8227 = b4696;
var G__8228 = c4697;
var G__8229 = d4698;
var G__8230 = e4699;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8226,G__8227,G__8228,G__8229,G__8230) : f.call(null,G__8226,G__8227,G__8228,G__8229,G__8230));
}
} else {
var f4700 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4695,b4696,c4697,d4698,e4699,f4700);
} else {
var G__8231 = a4695;
var G__8232 = b4696;
var G__8233 = c4697;
var G__8234 = d4698;
var G__8235 = e4699;
var G__8236 = f4700;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8231,G__8232,G__8233,G__8234,G__8235,G__8236) : f.call(null,G__8231,G__8232,G__8233,G__8234,G__8235,G__8236));
}
} else {
var g4701 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4695,b4696,c4697,d4698,e4699,f4700,g4701);
} else {
var G__8237 = a4695;
var G__8238 = b4696;
var G__8239 = c4697;
var G__8240 = d4698;
var G__8241 = e4699;
var G__8242 = f4700;
var G__8243 = g4701;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__8237,G__8238,G__8239,G__8240,G__8241,G__8242,G__8243) : f.call(null,G__8237,G__8238,G__8239,G__8240,G__8241,G__8242,G__8243));
}
} else {
var h4702 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702);
} else {
var G__8244 = a4695;
var G__8245 = b4696;
var G__8246 = c4697;
var G__8247 = d4698;
var G__8248 = e4699;
var G__8249 = f4700;
var G__8250 = g4701;
var G__8251 = h4702;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__8244,G__8245,G__8246,G__8247,G__8248,G__8249,G__8250,G__8251) : f.call(null,G__8244,G__8245,G__8246,G__8247,G__8248,G__8249,G__8250,G__8251));
}
} else {
var i4703 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703);
} else {
var G__8252 = a4695;
var G__8253 = b4696;
var G__8254 = c4697;
var G__8255 = d4698;
var G__8256 = e4699;
var G__8257 = f4700;
var G__8258 = g4701;
var G__8259 = h4702;
var G__8260 = i4703;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__8252,G__8253,G__8254,G__8255,G__8256,G__8257,G__8258,G__8259,G__8260) : f.call(null,G__8252,G__8253,G__8254,G__8255,G__8256,G__8257,G__8258,G__8259,G__8260));
}
} else {
var j4704 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704);
} else {
var G__8261 = a4695;
var G__8262 = b4696;
var G__8263 = c4697;
var G__8264 = d4698;
var G__8265 = e4699;
var G__8266 = f4700;
var G__8267 = g4701;
var G__8268 = h4702;
var G__8269 = i4703;
var G__8270 = j4704;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__8261,G__8262,G__8263,G__8264,G__8265,G__8266,G__8267,G__8268,G__8269,G__8270) : f.call(null,G__8261,G__8262,G__8263,G__8264,G__8265,G__8266,G__8267,G__8268,G__8269,G__8270));
}
} else {
var k4705 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705);
} else {
var G__8271 = a4695;
var G__8272 = b4696;
var G__8273 = c4697;
var G__8274 = d4698;
var G__8275 = e4699;
var G__8276 = f4700;
var G__8277 = g4701;
var G__8278 = h4702;
var G__8279 = i4703;
var G__8280 = j4704;
var G__8281 = k4705;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__8271,G__8272,G__8273,G__8274,G__8275,G__8276,G__8277,G__8278,G__8279,G__8280,G__8281) : f.call(null,G__8271,G__8272,G__8273,G__8274,G__8275,G__8276,G__8277,G__8278,G__8279,G__8280,G__8281));
}
} else {
var l4706 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706);
} else {
var G__8282 = a4695;
var G__8283 = b4696;
var G__8284 = c4697;
var G__8285 = d4698;
var G__8286 = e4699;
var G__8287 = f4700;
var G__8288 = g4701;
var G__8289 = h4702;
var G__8290 = i4703;
var G__8291 = j4704;
var G__8292 = k4705;
var G__8293 = l4706;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__8282,G__8283,G__8284,G__8285,G__8286,G__8287,G__8288,G__8289,G__8290,G__8291,G__8292,G__8293) : f.call(null,G__8282,G__8283,G__8284,G__8285,G__8286,G__8287,G__8288,G__8289,G__8290,G__8291,G__8292,G__8293));
}
} else {
var m4707 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707);
} else {
var G__8294 = a4695;
var G__8295 = b4696;
var G__8296 = c4697;
var G__8297 = d4698;
var G__8298 = e4699;
var G__8299 = f4700;
var G__8300 = g4701;
var G__8301 = h4702;
var G__8302 = i4703;
var G__8303 = j4704;
var G__8304 = k4705;
var G__8305 = l4706;
var G__8306 = m4707;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__8294,G__8295,G__8296,G__8297,G__8298,G__8299,G__8300,G__8301,G__8302,G__8303,G__8304,G__8305,G__8306) : f.call(null,G__8294,G__8295,G__8296,G__8297,G__8298,G__8299,G__8300,G__8301,G__8302,G__8303,G__8304,G__8305,G__8306));
}
} else {
var n4708 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707,n4708);
} else {
var G__8307 = a4695;
var G__8308 = b4696;
var G__8309 = c4697;
var G__8310 = d4698;
var G__8311 = e4699;
var G__8312 = f4700;
var G__8313 = g4701;
var G__8314 = h4702;
var G__8315 = i4703;
var G__8316 = j4704;
var G__8317 = k4705;
var G__8318 = l4706;
var G__8319 = m4707;
var G__8320 = n4708;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__8307,G__8308,G__8309,G__8310,G__8311,G__8312,G__8313,G__8314,G__8315,G__8316,G__8317,G__8318,G__8319,G__8320) : f.call(null,G__8307,G__8308,G__8309,G__8310,G__8311,G__8312,G__8313,G__8314,G__8315,G__8316,G__8317,G__8318,G__8319,G__8320));
}
} else {
var o4709 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707,n4708,o4709);
} else {
var G__8321 = a4695;
var G__8322 = b4696;
var G__8323 = c4697;
var G__8324 = d4698;
var G__8325 = e4699;
var G__8326 = f4700;
var G__8327 = g4701;
var G__8328 = h4702;
var G__8329 = i4703;
var G__8330 = j4704;
var G__8331 = k4705;
var G__8332 = l4706;
var G__8333 = m4707;
var G__8334 = n4708;
var G__8335 = o4709;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__8321,G__8322,G__8323,G__8324,G__8325,G__8326,G__8327,G__8328,G__8329,G__8330,G__8331,G__8332,G__8333,G__8334,G__8335) : f.call(null,G__8321,G__8322,G__8323,G__8324,G__8325,G__8326,G__8327,G__8328,G__8329,G__8330,G__8331,G__8332,G__8333,G__8334,G__8335));
}
} else {
var p4710 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707,n4708,o4709,p4710);
} else {
var G__8336 = a4695;
var G__8337 = b4696;
var G__8338 = c4697;
var G__8339 = d4698;
var G__8340 = e4699;
var G__8341 = f4700;
var G__8342 = g4701;
var G__8343 = h4702;
var G__8344 = i4703;
var G__8345 = j4704;
var G__8346 = k4705;
var G__8347 = l4706;
var G__8348 = m4707;
var G__8349 = n4708;
var G__8350 = o4709;
var G__8351 = p4710;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__8336,G__8337,G__8338,G__8339,G__8340,G__8341,G__8342,G__8343,G__8344,G__8345,G__8346,G__8347,G__8348,G__8349,G__8350,G__8351) : f.call(null,G__8336,G__8337,G__8338,G__8339,G__8340,G__8341,G__8342,G__8343,G__8344,G__8345,G__8346,G__8347,G__8348,G__8349,G__8350,G__8351));
}
} else {
var q4711 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707,n4708,o4709,p4710,q4711);
} else {
var G__8352 = a4695;
var G__8353 = b4696;
var G__8354 = c4697;
var G__8355 = d4698;
var G__8356 = e4699;
var G__8357 = f4700;
var G__8358 = g4701;
var G__8359 = h4702;
var G__8360 = i4703;
var G__8361 = j4704;
var G__8362 = k4705;
var G__8363 = l4706;
var G__8364 = m4707;
var G__8365 = n4708;
var G__8366 = o4709;
var G__8367 = p4710;
var G__8368 = q4711;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__8352,G__8353,G__8354,G__8355,G__8356,G__8357,G__8358,G__8359,G__8360,G__8361,G__8362,G__8363,G__8364,G__8365,G__8366,G__8367,G__8368) : f.call(null,G__8352,G__8353,G__8354,G__8355,G__8356,G__8357,G__8358,G__8359,G__8360,G__8361,G__8362,G__8363,G__8364,G__8365,G__8366,G__8367,G__8368));
}
} else {
var r4712 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707,n4708,o4709,p4710,q4711,r4712);
} else {
var G__8369 = a4695;
var G__8370 = b4696;
var G__8371 = c4697;
var G__8372 = d4698;
var G__8373 = e4699;
var G__8374 = f4700;
var G__8375 = g4701;
var G__8376 = h4702;
var G__8377 = i4703;
var G__8378 = j4704;
var G__8379 = k4705;
var G__8380 = l4706;
var G__8381 = m4707;
var G__8382 = n4708;
var G__8383 = o4709;
var G__8384 = p4710;
var G__8385 = q4711;
var G__8386 = r4712;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__8369,G__8370,G__8371,G__8372,G__8373,G__8374,G__8375,G__8376,G__8377,G__8378,G__8379,G__8380,G__8381,G__8382,G__8383,G__8384,G__8385,G__8386) : f.call(null,G__8369,G__8370,G__8371,G__8372,G__8373,G__8374,G__8375,G__8376,G__8377,G__8378,G__8379,G__8380,G__8381,G__8382,G__8383,G__8384,G__8385,G__8386));
}
} else {
var s4713 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707,n4708,o4709,p4710,q4711,r4712,s4713);
} else {
var G__8387 = a4695;
var G__8388 = b4696;
var G__8389 = c4697;
var G__8390 = d4698;
var G__8391 = e4699;
var G__8392 = f4700;
var G__8393 = g4701;
var G__8394 = h4702;
var G__8395 = i4703;
var G__8396 = j4704;
var G__8397 = k4705;
var G__8398 = l4706;
var G__8399 = m4707;
var G__8400 = n4708;
var G__8401 = o4709;
var G__8402 = p4710;
var G__8403 = q4711;
var G__8404 = r4712;
var G__8405 = s4713;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__8387,G__8388,G__8389,G__8390,G__8391,G__8392,G__8393,G__8394,G__8395,G__8396,G__8397,G__8398,G__8399,G__8400,G__8401,G__8402,G__8403,G__8404,G__8405) : f.call(null,G__8387,G__8388,G__8389,G__8390,G__8391,G__8392,G__8393,G__8394,G__8395,G__8396,G__8397,G__8398,G__8399,G__8400,G__8401,G__8402,G__8403,G__8404,G__8405));
}
} else {
var t4714 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707,n4708,o4709,p4710,q4711,r4712,s4713,t4714);
} else {
var G__8406 = a4695;
var G__8407 = b4696;
var G__8408 = c4697;
var G__8409 = d4698;
var G__8410 = e4699;
var G__8411 = f4700;
var G__8412 = g4701;
var G__8413 = h4702;
var G__8414 = i4703;
var G__8415 = j4704;
var G__8416 = k4705;
var G__8417 = l4706;
var G__8418 = m4707;
var G__8419 = n4708;
var G__8420 = o4709;
var G__8421 = p4710;
var G__8422 = q4711;
var G__8423 = r4712;
var G__8424 = s4713;
var G__8425 = t4714;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__8406,G__8407,G__8408,G__8409,G__8410,G__8411,G__8412,G__8413,G__8414,G__8415,G__8416,G__8417,G__8418,G__8419,G__8420,G__8421,G__8422,G__8423,G__8424,G__8425) : f.call(null,G__8406,G__8407,G__8408,G__8409,G__8410,G__8411,G__8412,G__8413,G__8414,G__8415,G__8416,G__8417,G__8418,G__8419,G__8420,G__8421,G__8422,G__8423,G__8424,G__8425));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__8426__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__8426 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__8427__i = 0, G__8427__a = new Array(arguments.length -  5);
while (G__8427__i < G__8427__a.length) {G__8427__a[G__8427__i] = arguments[G__8427__i + 5]; ++G__8427__i;}
  args = new cljs.core.IndexedSeq(G__8427__a,0);
} 
return G__8426__delegate.call(this,f,a,b,c,d,args);};
G__8426.cljs$lang$maxFixedArity = 5;
G__8426.cljs$lang$applyTo = (function (arglist__8428){
var f = cljs.core.first(arglist__8428);
arglist__8428 = cljs.core.next(arglist__8428);
var a = cljs.core.first(arglist__8428);
arglist__8428 = cljs.core.next(arglist__8428);
var b = cljs.core.first(arglist__8428);
arglist__8428 = cljs.core.next(arglist__8428);
var c = cljs.core.first(arglist__8428);
arglist__8428 = cljs.core.next(arglist__8428);
var d = cljs.core.first(arglist__8428);
var args = cljs.core.rest(arglist__8428);
return G__8426__delegate(f,a,b,c,d,args);
});
G__8426.cljs$core$IFn$_invoke$arity$variadic = G__8426__delegate;
return G__8426;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__8429 = null;
if (arguments.length > 5) {
var G__8430__i = 0, G__8430__a = new Array(arguments.length -  5);
while (G__8430__i < G__8430__a.length) {G__8430__a[G__8430__i] = arguments[G__8430__i + 5]; ++G__8430__i;}
G__8429 = new cljs.core.IndexedSeq(G__8430__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__8429);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__8446 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8446) : f.call(null,G__8446));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__8447 = cljs.core.meta(obj);
var G__8448 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8447,G__8448) : f.call(null,G__8447,G__8448));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__8449 = cljs.core.meta(obj);
var G__8450 = a;
var G__8451 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8449,G__8450,G__8451) : f.call(null,G__8449,G__8450,G__8451));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__8452 = cljs.core.meta(obj);
var G__8453 = a;
var G__8454 = b;
var G__8455 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8452,G__8453,G__8454,G__8455) : f.call(null,G__8452,G__8453,G__8454,G__8455));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__8456 = cljs.core.meta(obj);
var G__8457 = a;
var G__8458 = b;
var G__8459 = c;
var G__8460 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8456,G__8457,G__8458,G__8459,G__8460) : f.call(null,G__8456,G__8457,G__8458,G__8459,G__8460));
})());
});
var vary_meta__7 = (function() { 
var G__8461__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__8461 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__8462__i = 0, G__8462__a = new Array(arguments.length -  6);
while (G__8462__i < G__8462__a.length) {G__8462__a[G__8462__i] = arguments[G__8462__i + 6]; ++G__8462__i;}
  args = new cljs.core.IndexedSeq(G__8462__a,0);
} 
return G__8461__delegate.call(this,obj,f,a,b,c,d,args);};
G__8461.cljs$lang$maxFixedArity = 6;
G__8461.cljs$lang$applyTo = (function (arglist__8463){
var obj = cljs.core.first(arglist__8463);
arglist__8463 = cljs.core.next(arglist__8463);
var f = cljs.core.first(arglist__8463);
arglist__8463 = cljs.core.next(arglist__8463);
var a = cljs.core.first(arglist__8463);
arglist__8463 = cljs.core.next(arglist__8463);
var b = cljs.core.first(arglist__8463);
arglist__8463 = cljs.core.next(arglist__8463);
var c = cljs.core.first(arglist__8463);
arglist__8463 = cljs.core.next(arglist__8463);
var d = cljs.core.first(arglist__8463);
var args = cljs.core.rest(arglist__8463);
return G__8461__delegate(obj,f,a,b,c,d,args);
});
G__8461.cljs$core$IFn$_invoke$arity$variadic = G__8461__delegate;
return G__8461;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__8464 = null;
if (arguments.length > 6) {
var G__8465__i = 0, G__8465__a = new Array(arguments.length -  6);
while (G__8465__i < G__8465__a.length) {G__8465__a[G__8465__i] = arguments[G__8465__i + 6]; ++G__8465__i;}
G__8464 = new cljs.core.IndexedSeq(G__8465__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__8464);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__8466__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__8466 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8467__i = 0, G__8467__a = new Array(arguments.length -  2);
while (G__8467__i < G__8467__a.length) {G__8467__a[G__8467__i] = arguments[G__8467__i + 2]; ++G__8467__i;}
  more = new cljs.core.IndexedSeq(G__8467__a,0);
} 
return G__8466__delegate.call(this,x,y,more);};
G__8466.cljs$lang$maxFixedArity = 2;
G__8466.cljs$lang$applyTo = (function (arglist__8468){
var x = cljs.core.first(arglist__8468);
arglist__8468 = cljs.core.next(arglist__8468);
var y = cljs.core.first(arglist__8468);
var more = cljs.core.rest(arglist__8468);
return G__8466__delegate(x,y,more);
});
G__8466.cljs$core$IFn$_invoke$arity$variadic = G__8466__delegate;
return G__8466;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__8469 = null;
if (arguments.length > 2) {
var G__8470__i = 0, G__8470__a = new Array(arguments.length -  2);
while (G__8470__i < G__8470__a.length) {G__8470__a[G__8470__i] = arguments[G__8470__i + 2]; ++G__8470__i;}
G__8469 = new cljs.core.IndexedSeq(G__8470__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8469);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t8474 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t8474 = (function (nil_iter,meta8475){
this.nil_iter = nil_iter;
this.meta8475 = meta8475;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t8474.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t8474.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t8474.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t8474.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_8476){
var self__ = this;
var _8476__$1 = this;
return self__.meta8475;
});

cljs.core.t8474.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_8476,meta8475__$1){
var self__ = this;
var _8476__$1 = this;
return (new cljs.core.t8474(self__.nil_iter,meta8475__$1));
});

cljs.core.t8474.cljs$lang$type = true;

cljs.core.t8474.cljs$lang$ctorStr = "cljs.core/t8474";

cljs.core.t8474.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/t8474");
});

cljs.core.__GT_t8474 = (function __GT_t8474(nil_iter__$1,meta8475){
return (new cljs.core.t8474(nil_iter__$1,meta8475));
});

}

return (new cljs.core.t8474(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3067,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3063,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/bsima/.boot/cache/tmp/home/bsima/workspace/nebula/nebulabio.github.io/4ai/-c2j1g4/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3752__auto__ = !((lt.stepper == null));
if(and__3752__auto__){
return self__.iter.hasNext();
} else {
return and__3752__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__8477 = lt;
var G__8478 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__8477,G__8478) : self__.xform.call(null,G__8477,G__8478));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8479 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8479) : self__.xform.call(null,G__8479));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__8481 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8481) : xform.call(null,G__8481));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__8483 = cljs.core.next(iters__$1);
iters__$1 = G__8483;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4651__auto___8484 = self__.iters.length;
var i_8485 = (0);
while(true){
if((i_8485 < n__4651__auto___8484)){
(self__.nexts[i_8485] = (self__.iters[i_8485]).next());

var G__8486 = (i_8485 + (1));
i_8485 = G__8486;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3752__auto__ = !((lt.stepper == null));
if(and__3752__auto__){
return this$.hasNext();
} else {
return and__3752__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8482 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8482) : self__.xform.call(null,G__8482));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__8491 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8491) : xform.call(null,G__8491));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__8492_8496 = cljs.core.seq(colls);
var chunk__8493_8497 = null;
var count__8494_8498 = (0);
var i__8495_8499 = (0);
while(true){
if((i__8495_8499 < count__8494_8498)){
var coll_8500 = chunk__8493_8497.cljs$core$IIndexed$_nth$arity$2(null,i__8495_8499);
iters.push(cljs.core.iter(coll_8500));

var G__8501 = seq__8492_8496;
var G__8502 = chunk__8493_8497;
var G__8503 = count__8494_8498;
var G__8504 = (i__8495_8499 + (1));
seq__8492_8496 = G__8501;
chunk__8493_8497 = G__8502;
count__8494_8498 = G__8503;
i__8495_8499 = G__8504;
continue;
} else {
var temp__4126__auto___8505 = cljs.core.seq(seq__8492_8496);
if(temp__4126__auto___8505){
var seq__8492_8506__$1 = temp__4126__auto___8505;
if(cljs.core.chunked_seq_QMARK_(seq__8492_8506__$1)){
var c__4551__auto___8507 = cljs.core.chunk_first(seq__8492_8506__$1);
var G__8508 = cljs.core.chunk_rest(seq__8492_8506__$1);
var G__8509 = c__4551__auto___8507;
var G__8510 = cljs.core.count(c__4551__auto___8507);
var G__8511 = (0);
seq__8492_8496 = G__8508;
chunk__8493_8497 = G__8509;
count__8494_8498 = G__8510;
i__8495_8499 = G__8511;
continue;
} else {
var coll_8512 = cljs.core.first(seq__8492_8506__$1);
iters.push(cljs.core.iter(coll_8512));

var G__8513 = cljs.core.next(seq__8492_8506__$1);
var G__8514 = null;
var G__8515 = (0);
var G__8516 = (0);
seq__8492_8496 = G__8513;
chunk__8493_8497 = G__8514;
count__8494_8498 = G__8515;
i__8495_8499 = G__8516;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3764__auto__ = cljs.core.seq(coll);
if(or__3764__auto__){
return or__3764__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__8517__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__8517 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8518__i = 0, G__8518__a = new Array(arguments.length -  2);
while (G__8518__i < G__8518__a.length) {G__8518__a[G__8518__i] = arguments[G__8518__i + 2]; ++G__8518__i;}
  colls = new cljs.core.IndexedSeq(G__8518__a,0);
} 
return G__8517__delegate.call(this,xform,coll,colls);};
G__8517.cljs$lang$maxFixedArity = 2;
G__8517.cljs$lang$applyTo = (function (arglist__8519){
var xform = cljs.core.first(arglist__8519);
arglist__8519 = cljs.core.next(arglist__8519);
var coll = cljs.core.first(arglist__8519);
var colls = cljs.core.rest(arglist__8519);
return G__8517__delegate(xform,coll,colls);
});
G__8517.cljs$core$IFn$_invoke$arity$variadic = G__8517__delegate;
return G__8517;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__8520 = null;
if (arguments.length > 2) {
var G__8521__i = 0, G__8521__a = new Array(arguments.length -  2);
while (G__8521__i < G__8521__a.length) {G__8521__a[G__8521__i] = arguments[G__8521__i + 2]; ++G__8521__i;}
G__8520 = new cljs.core.IndexedSeq(G__8521__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__8520);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__8523 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8523) : pred.call(null,G__8523));
})())){
var G__8524 = pred;
var G__8525 = cljs.core.next(coll);
pred = G__8524;
coll = G__8525;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3764__auto__ = (function (){var G__8529 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8529) : pred.call(null,G__8529));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var G__8530 = pred;
var G__8531 = cljs.core.next(coll);
pred = G__8530;
coll = G__8531;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__8538 = null;
var G__8538__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__8538__1 = (function (x){
return cljs.core.not((function (){var G__8535 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8535) : f.call(null,G__8535));
})());
});
var G__8538__2 = (function (x,y){
return cljs.core.not((function (){var G__8536 = x;
var G__8537 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8536,G__8537) : f.call(null,G__8536,G__8537));
})());
});
var G__8538__3 = (function() { 
var G__8539__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__8539 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8540__i = 0, G__8540__a = new Array(arguments.length -  2);
while (G__8540__i < G__8540__a.length) {G__8540__a[G__8540__i] = arguments[G__8540__i + 2]; ++G__8540__i;}
  zs = new cljs.core.IndexedSeq(G__8540__a,0);
} 
return G__8539__delegate.call(this,x,y,zs);};
G__8539.cljs$lang$maxFixedArity = 2;
G__8539.cljs$lang$applyTo = (function (arglist__8541){
var x = cljs.core.first(arglist__8541);
arglist__8541 = cljs.core.next(arglist__8541);
var y = cljs.core.first(arglist__8541);
var zs = cljs.core.rest(arglist__8541);
return G__8539__delegate(x,y,zs);
});
G__8539.cljs$core$IFn$_invoke$arity$variadic = G__8539__delegate;
return G__8539;
})()
;
G__8538 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__8538__0.call(this);
case 1:
return G__8538__1.call(this,x);
case 2:
return G__8538__2.call(this,x,y);
default:
var G__8542 = null;
if (arguments.length > 2) {
var G__8543__i = 0, G__8543__a = new Array(arguments.length -  2);
while (G__8543__i < G__8543__a.length) {G__8543__a[G__8543__i] = arguments[G__8543__i + 2]; ++G__8543__i;}
G__8542 = new cljs.core.IndexedSeq(G__8543__a,0);
}
return G__8538__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8542);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8538.cljs$lang$maxFixedArity = 2;
G__8538.cljs$lang$applyTo = G__8538__3.cljs$lang$applyTo;
G__8538.cljs$core$IFn$_invoke$arity$0 = G__8538__0;
G__8538.cljs$core$IFn$_invoke$arity$1 = G__8538__1;
G__8538.cljs$core$IFn$_invoke$arity$2 = G__8538__2;
G__8538.cljs$core$IFn$_invoke$arity$variadic = G__8538__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8538;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__8544__delegate = function (args){
return x;
};
var G__8544 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8545__i = 0, G__8545__a = new Array(arguments.length -  0);
while (G__8545__i < G__8545__a.length) {G__8545__a[G__8545__i] = arguments[G__8545__i + 0]; ++G__8545__i;}
  args = new cljs.core.IndexedSeq(G__8545__a,0);
} 
return G__8544__delegate.call(this,args);};
G__8544.cljs$lang$maxFixedArity = 0;
G__8544.cljs$lang$applyTo = (function (arglist__8546){
var args = cljs.core.seq(arglist__8546);
return G__8544__delegate(args);
});
G__8544.cljs$core$IFn$_invoke$arity$variadic = G__8544__delegate;
return G__8544;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__8601 = null;
var G__8601__0 = (function (){
var G__8574 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8574) : f.call(null,G__8574));
});
var G__8601__1 = (function (x){
var G__8575 = (function (){var G__8576 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8576) : g.call(null,G__8576));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8575) : f.call(null,G__8575));
});
var G__8601__2 = (function (x,y){
var G__8577 = (function (){var G__8578 = x;
var G__8579 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__8578,G__8579) : g.call(null,G__8578,G__8579));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8577) : f.call(null,G__8577));
});
var G__8601__3 = (function (x,y,z){
var G__8580 = (function (){var G__8581 = x;
var G__8582 = y;
var G__8583 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__8581,G__8582,G__8583) : g.call(null,G__8581,G__8582,G__8583));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8580) : f.call(null,G__8580));
});
var G__8601__4 = (function() { 
var G__8602__delegate = function (x,y,z,args){
var G__8584 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8584) : f.call(null,G__8584));
};
var G__8602 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8603__i = 0, G__8603__a = new Array(arguments.length -  3);
while (G__8603__i < G__8603__a.length) {G__8603__a[G__8603__i] = arguments[G__8603__i + 3]; ++G__8603__i;}
  args = new cljs.core.IndexedSeq(G__8603__a,0);
} 
return G__8602__delegate.call(this,x,y,z,args);};
G__8602.cljs$lang$maxFixedArity = 3;
G__8602.cljs$lang$applyTo = (function (arglist__8604){
var x = cljs.core.first(arglist__8604);
arglist__8604 = cljs.core.next(arglist__8604);
var y = cljs.core.first(arglist__8604);
arglist__8604 = cljs.core.next(arglist__8604);
var z = cljs.core.first(arglist__8604);
var args = cljs.core.rest(arglist__8604);
return G__8602__delegate(x,y,z,args);
});
G__8602.cljs$core$IFn$_invoke$arity$variadic = G__8602__delegate;
return G__8602;
})()
;
G__8601 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8601__0.call(this);
case 1:
return G__8601__1.call(this,x);
case 2:
return G__8601__2.call(this,x,y);
case 3:
return G__8601__3.call(this,x,y,z);
default:
var G__8605 = null;
if (arguments.length > 3) {
var G__8606__i = 0, G__8606__a = new Array(arguments.length -  3);
while (G__8606__i < G__8606__a.length) {G__8606__a[G__8606__i] = arguments[G__8606__i + 3]; ++G__8606__i;}
G__8605 = new cljs.core.IndexedSeq(G__8606__a,0);
}
return G__8601__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8605);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8601.cljs$lang$maxFixedArity = 3;
G__8601.cljs$lang$applyTo = G__8601__4.cljs$lang$applyTo;
G__8601.cljs$core$IFn$_invoke$arity$0 = G__8601__0;
G__8601.cljs$core$IFn$_invoke$arity$1 = G__8601__1;
G__8601.cljs$core$IFn$_invoke$arity$2 = G__8601__2;
G__8601.cljs$core$IFn$_invoke$arity$3 = G__8601__3;
G__8601.cljs$core$IFn$_invoke$arity$variadic = G__8601__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8601;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__8607 = null;
var G__8607__0 = (function (){
var G__8585 = (function (){var G__8586 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8586) : g.call(null,G__8586));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8585) : f.call(null,G__8585));
});
var G__8607__1 = (function (x){
var G__8587 = (function (){var G__8588 = (function (){var G__8589 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__8589) : h.call(null,G__8589));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8588) : g.call(null,G__8588));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8587) : f.call(null,G__8587));
});
var G__8607__2 = (function (x,y){
var G__8590 = (function (){var G__8591 = (function (){var G__8592 = x;
var G__8593 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__8592,G__8593) : h.call(null,G__8592,G__8593));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8591) : g.call(null,G__8591));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8590) : f.call(null,G__8590));
});
var G__8607__3 = (function (x,y,z){
var G__8594 = (function (){var G__8595 = (function (){var G__8596 = x;
var G__8597 = y;
var G__8598 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__8596,G__8597,G__8598) : h.call(null,G__8596,G__8597,G__8598));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8595) : g.call(null,G__8595));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8594) : f.call(null,G__8594));
});
var G__8607__4 = (function() { 
var G__8608__delegate = function (x,y,z,args){
var G__8599 = (function (){var G__8600 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8600) : g.call(null,G__8600));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8599) : f.call(null,G__8599));
};
var G__8608 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8609__i = 0, G__8609__a = new Array(arguments.length -  3);
while (G__8609__i < G__8609__a.length) {G__8609__a[G__8609__i] = arguments[G__8609__i + 3]; ++G__8609__i;}
  args = new cljs.core.IndexedSeq(G__8609__a,0);
} 
return G__8608__delegate.call(this,x,y,z,args);};
G__8608.cljs$lang$maxFixedArity = 3;
G__8608.cljs$lang$applyTo = (function (arglist__8610){
var x = cljs.core.first(arglist__8610);
arglist__8610 = cljs.core.next(arglist__8610);
var y = cljs.core.first(arglist__8610);
arglist__8610 = cljs.core.next(arglist__8610);
var z = cljs.core.first(arglist__8610);
var args = cljs.core.rest(arglist__8610);
return G__8608__delegate(x,y,z,args);
});
G__8608.cljs$core$IFn$_invoke$arity$variadic = G__8608__delegate;
return G__8608;
})()
;
G__8607 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8607__0.call(this);
case 1:
return G__8607__1.call(this,x);
case 2:
return G__8607__2.call(this,x,y);
case 3:
return G__8607__3.call(this,x,y,z);
default:
var G__8611 = null;
if (arguments.length > 3) {
var G__8612__i = 0, G__8612__a = new Array(arguments.length -  3);
while (G__8612__i < G__8612__a.length) {G__8612__a[G__8612__i] = arguments[G__8612__i + 3]; ++G__8612__i;}
G__8611 = new cljs.core.IndexedSeq(G__8612__a,0);
}
return G__8607__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8611);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8607.cljs$lang$maxFixedArity = 3;
G__8607.cljs$lang$applyTo = G__8607__4.cljs$lang$applyTo;
G__8607.cljs$core$IFn$_invoke$arity$0 = G__8607__0;
G__8607.cljs$core$IFn$_invoke$arity$1 = G__8607__1;
G__8607.cljs$core$IFn$_invoke$arity$2 = G__8607__2;
G__8607.cljs$core$IFn$_invoke$arity$3 = G__8607__3;
G__8607.cljs$core$IFn$_invoke$arity$variadic = G__8607__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8607;
})()
});
var comp__4 = (function() { 
var G__8613__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__8614__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__8615 = cljs.core.first(fs__$2).call(null,ret);
var G__8616 = cljs.core.next(fs__$2);
ret = G__8615;
fs__$2 = G__8616;
continue;
} else {
return ret;
}
break;
}
};
var G__8614 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8617__i = 0, G__8617__a = new Array(arguments.length -  0);
while (G__8617__i < G__8617__a.length) {G__8617__a[G__8617__i] = arguments[G__8617__i + 0]; ++G__8617__i;}
  args = new cljs.core.IndexedSeq(G__8617__a,0);
} 
return G__8614__delegate.call(this,args);};
G__8614.cljs$lang$maxFixedArity = 0;
G__8614.cljs$lang$applyTo = (function (arglist__8618){
var args = cljs.core.seq(arglist__8618);
return G__8614__delegate(args);
});
G__8614.cljs$core$IFn$_invoke$arity$variadic = G__8614__delegate;
return G__8614;
})()
;
;})(fs__$1))
};
var G__8613 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__8619__i = 0, G__8619__a = new Array(arguments.length -  3);
while (G__8619__i < G__8619__a.length) {G__8619__a[G__8619__i] = arguments[G__8619__i + 3]; ++G__8619__i;}
  fs = new cljs.core.IndexedSeq(G__8619__a,0);
} 
return G__8613__delegate.call(this,f1,f2,f3,fs);};
G__8613.cljs$lang$maxFixedArity = 3;
G__8613.cljs$lang$applyTo = (function (arglist__8620){
var f1 = cljs.core.first(arglist__8620);
arglist__8620 = cljs.core.next(arglist__8620);
var f2 = cljs.core.first(arglist__8620);
arglist__8620 = cljs.core.next(arglist__8620);
var f3 = cljs.core.first(arglist__8620);
var fs = cljs.core.rest(arglist__8620);
return G__8613__delegate(f1,f2,f3,fs);
});
G__8613.cljs$core$IFn$_invoke$arity$variadic = G__8613__delegate;
return G__8613;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__8621 = null;
if (arguments.length > 3) {
var G__8622__i = 0, G__8622__a = new Array(arguments.length -  3);
while (G__8622__i < G__8622__a.length) {G__8622__a[G__8622__i] = arguments[G__8622__i + 3]; ++G__8622__i;}
G__8621 = new cljs.core.IndexedSeq(G__8622__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__8621);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__8707 = null;
var G__8707__0 = (function (){
var G__8665 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8665) : f.call(null,G__8665));
});
var G__8707__1 = (function (x){
var G__8666 = arg1;
var G__8667 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8666,G__8667) : f.call(null,G__8666,G__8667));
});
var G__8707__2 = (function (x,y){
var G__8668 = arg1;
var G__8669 = x;
var G__8670 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8668,G__8669,G__8670) : f.call(null,G__8668,G__8669,G__8670));
});
var G__8707__3 = (function (x,y,z){
var G__8671 = arg1;
var G__8672 = x;
var G__8673 = y;
var G__8674 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8671,G__8672,G__8673,G__8674) : f.call(null,G__8671,G__8672,G__8673,G__8674));
});
var G__8707__4 = (function() { 
var G__8708__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__8708 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8709__i = 0, G__8709__a = new Array(arguments.length -  3);
while (G__8709__i < G__8709__a.length) {G__8709__a[G__8709__i] = arguments[G__8709__i + 3]; ++G__8709__i;}
  args = new cljs.core.IndexedSeq(G__8709__a,0);
} 
return G__8708__delegate.call(this,x,y,z,args);};
G__8708.cljs$lang$maxFixedArity = 3;
G__8708.cljs$lang$applyTo = (function (arglist__8710){
var x = cljs.core.first(arglist__8710);
arglist__8710 = cljs.core.next(arglist__8710);
var y = cljs.core.first(arglist__8710);
arglist__8710 = cljs.core.next(arglist__8710);
var z = cljs.core.first(arglist__8710);
var args = cljs.core.rest(arglist__8710);
return G__8708__delegate(x,y,z,args);
});
G__8708.cljs$core$IFn$_invoke$arity$variadic = G__8708__delegate;
return G__8708;
})()
;
G__8707 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8707__0.call(this);
case 1:
return G__8707__1.call(this,x);
case 2:
return G__8707__2.call(this,x,y);
case 3:
return G__8707__3.call(this,x,y,z);
default:
var G__8711 = null;
if (arguments.length > 3) {
var G__8712__i = 0, G__8712__a = new Array(arguments.length -  3);
while (G__8712__i < G__8712__a.length) {G__8712__a[G__8712__i] = arguments[G__8712__i + 3]; ++G__8712__i;}
G__8711 = new cljs.core.IndexedSeq(G__8712__a,0);
}
return G__8707__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8711);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8707.cljs$lang$maxFixedArity = 3;
G__8707.cljs$lang$applyTo = G__8707__4.cljs$lang$applyTo;
G__8707.cljs$core$IFn$_invoke$arity$0 = G__8707__0;
G__8707.cljs$core$IFn$_invoke$arity$1 = G__8707__1;
G__8707.cljs$core$IFn$_invoke$arity$2 = G__8707__2;
G__8707.cljs$core$IFn$_invoke$arity$3 = G__8707__3;
G__8707.cljs$core$IFn$_invoke$arity$variadic = G__8707__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8707;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__8713 = null;
var G__8713__0 = (function (){
var G__8675 = arg1;
var G__8676 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8675,G__8676) : f.call(null,G__8675,G__8676));
});
var G__8713__1 = (function (x){
var G__8677 = arg1;
var G__8678 = arg2;
var G__8679 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8677,G__8678,G__8679) : f.call(null,G__8677,G__8678,G__8679));
});
var G__8713__2 = (function (x,y){
var G__8680 = arg1;
var G__8681 = arg2;
var G__8682 = x;
var G__8683 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8680,G__8681,G__8682,G__8683) : f.call(null,G__8680,G__8681,G__8682,G__8683));
});
var G__8713__3 = (function (x,y,z){
var G__8684 = arg1;
var G__8685 = arg2;
var G__8686 = x;
var G__8687 = y;
var G__8688 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8684,G__8685,G__8686,G__8687,G__8688) : f.call(null,G__8684,G__8685,G__8686,G__8687,G__8688));
});
var G__8713__4 = (function() { 
var G__8714__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__8714 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8715__i = 0, G__8715__a = new Array(arguments.length -  3);
while (G__8715__i < G__8715__a.length) {G__8715__a[G__8715__i] = arguments[G__8715__i + 3]; ++G__8715__i;}
  args = new cljs.core.IndexedSeq(G__8715__a,0);
} 
return G__8714__delegate.call(this,x,y,z,args);};
G__8714.cljs$lang$maxFixedArity = 3;
G__8714.cljs$lang$applyTo = (function (arglist__8716){
var x = cljs.core.first(arglist__8716);
arglist__8716 = cljs.core.next(arglist__8716);
var y = cljs.core.first(arglist__8716);
arglist__8716 = cljs.core.next(arglist__8716);
var z = cljs.core.first(arglist__8716);
var args = cljs.core.rest(arglist__8716);
return G__8714__delegate(x,y,z,args);
});
G__8714.cljs$core$IFn$_invoke$arity$variadic = G__8714__delegate;
return G__8714;
})()
;
G__8713 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8713__0.call(this);
case 1:
return G__8713__1.call(this,x);
case 2:
return G__8713__2.call(this,x,y);
case 3:
return G__8713__3.call(this,x,y,z);
default:
var G__8717 = null;
if (arguments.length > 3) {
var G__8718__i = 0, G__8718__a = new Array(arguments.length -  3);
while (G__8718__i < G__8718__a.length) {G__8718__a[G__8718__i] = arguments[G__8718__i + 3]; ++G__8718__i;}
G__8717 = new cljs.core.IndexedSeq(G__8718__a,0);
}
return G__8713__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8717);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8713.cljs$lang$maxFixedArity = 3;
G__8713.cljs$lang$applyTo = G__8713__4.cljs$lang$applyTo;
G__8713.cljs$core$IFn$_invoke$arity$0 = G__8713__0;
G__8713.cljs$core$IFn$_invoke$arity$1 = G__8713__1;
G__8713.cljs$core$IFn$_invoke$arity$2 = G__8713__2;
G__8713.cljs$core$IFn$_invoke$arity$3 = G__8713__3;
G__8713.cljs$core$IFn$_invoke$arity$variadic = G__8713__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8713;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__8719 = null;
var G__8719__0 = (function (){
var G__8689 = arg1;
var G__8690 = arg2;
var G__8691 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8689,G__8690,G__8691) : f.call(null,G__8689,G__8690,G__8691));
});
var G__8719__1 = (function (x){
var G__8692 = arg1;
var G__8693 = arg2;
var G__8694 = arg3;
var G__8695 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8692,G__8693,G__8694,G__8695) : f.call(null,G__8692,G__8693,G__8694,G__8695));
});
var G__8719__2 = (function (x,y){
var G__8696 = arg1;
var G__8697 = arg2;
var G__8698 = arg3;
var G__8699 = x;
var G__8700 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8696,G__8697,G__8698,G__8699,G__8700) : f.call(null,G__8696,G__8697,G__8698,G__8699,G__8700));
});
var G__8719__3 = (function (x,y,z){
var G__8701 = arg1;
var G__8702 = arg2;
var G__8703 = arg3;
var G__8704 = x;
var G__8705 = y;
var G__8706 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8701,G__8702,G__8703,G__8704,G__8705,G__8706) : f.call(null,G__8701,G__8702,G__8703,G__8704,G__8705,G__8706));
});
var G__8719__4 = (function() { 
var G__8720__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__8720 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8721__i = 0, G__8721__a = new Array(arguments.length -  3);
while (G__8721__i < G__8721__a.length) {G__8721__a[G__8721__i] = arguments[G__8721__i + 3]; ++G__8721__i;}
  args = new cljs.core.IndexedSeq(G__8721__a,0);
} 
return G__8720__delegate.call(this,x,y,z,args);};
G__8720.cljs$lang$maxFixedArity = 3;
G__8720.cljs$lang$applyTo = (function (arglist__8722){
var x = cljs.core.first(arglist__8722);
arglist__8722 = cljs.core.next(arglist__8722);
var y = cljs.core.first(arglist__8722);
arglist__8722 = cljs.core.next(arglist__8722);
var z = cljs.core.first(arglist__8722);
var args = cljs.core.rest(arglist__8722);
return G__8720__delegate(x,y,z,args);
});
G__8720.cljs$core$IFn$_invoke$arity$variadic = G__8720__delegate;
return G__8720;
})()
;
G__8719 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8719__0.call(this);
case 1:
return G__8719__1.call(this,x);
case 2:
return G__8719__2.call(this,x,y);
case 3:
return G__8719__3.call(this,x,y,z);
default:
var G__8723 = null;
if (arguments.length > 3) {
var G__8724__i = 0, G__8724__a = new Array(arguments.length -  3);
while (G__8724__i < G__8724__a.length) {G__8724__a[G__8724__i] = arguments[G__8724__i + 3]; ++G__8724__i;}
G__8723 = new cljs.core.IndexedSeq(G__8724__a,0);
}
return G__8719__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8719.cljs$lang$maxFixedArity = 3;
G__8719.cljs$lang$applyTo = G__8719__4.cljs$lang$applyTo;
G__8719.cljs$core$IFn$_invoke$arity$0 = G__8719__0;
G__8719.cljs$core$IFn$_invoke$arity$1 = G__8719__1;
G__8719.cljs$core$IFn$_invoke$arity$2 = G__8719__2;
G__8719.cljs$core$IFn$_invoke$arity$3 = G__8719__3;
G__8719.cljs$core$IFn$_invoke$arity$variadic = G__8719__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8719;
})()
});
var partial__5 = (function() { 
var G__8725__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__8726__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__8726 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8727__i = 0, G__8727__a = new Array(arguments.length -  0);
while (G__8727__i < G__8727__a.length) {G__8727__a[G__8727__i] = arguments[G__8727__i + 0]; ++G__8727__i;}
  args = new cljs.core.IndexedSeq(G__8727__a,0);
} 
return G__8726__delegate.call(this,args);};
G__8726.cljs$lang$maxFixedArity = 0;
G__8726.cljs$lang$applyTo = (function (arglist__8728){
var args = cljs.core.seq(arglist__8728);
return G__8726__delegate(args);
});
G__8726.cljs$core$IFn$_invoke$arity$variadic = G__8726__delegate;
return G__8726;
})()
;
};
var G__8725 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__8729__i = 0, G__8729__a = new Array(arguments.length -  4);
while (G__8729__i < G__8729__a.length) {G__8729__a[G__8729__i] = arguments[G__8729__i + 4]; ++G__8729__i;}
  more = new cljs.core.IndexedSeq(G__8729__a,0);
} 
return G__8725__delegate.call(this,f,arg1,arg2,arg3,more);};
G__8725.cljs$lang$maxFixedArity = 4;
G__8725.cljs$lang$applyTo = (function (arglist__8730){
var f = cljs.core.first(arglist__8730);
arglist__8730 = cljs.core.next(arglist__8730);
var arg1 = cljs.core.first(arglist__8730);
arglist__8730 = cljs.core.next(arglist__8730);
var arg2 = cljs.core.first(arglist__8730);
arglist__8730 = cljs.core.next(arglist__8730);
var arg3 = cljs.core.first(arglist__8730);
var more = cljs.core.rest(arglist__8730);
return G__8725__delegate(f,arg1,arg2,arg3,more);
});
G__8725.cljs$core$IFn$_invoke$arity$variadic = G__8725__delegate;
return G__8725;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__8731 = null;
if (arguments.length > 4) {
var G__8732__i = 0, G__8732__a = new Array(arguments.length -  4);
while (G__8732__i < G__8732__a.length) {G__8732__a[G__8732__i] = arguments[G__8732__i + 4]; ++G__8732__i;}
G__8731 = new cljs.core.IndexedSeq(G__8732__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__8731);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__8765 = null;
var G__8765__1 = (function (a){
var G__8749 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8749) : f.call(null,G__8749));
});
var G__8765__2 = (function (a,b){
var G__8750 = (((a == null))?x:a);
var G__8751 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8750,G__8751) : f.call(null,G__8750,G__8751));
});
var G__8765__3 = (function (a,b,c){
var G__8752 = (((a == null))?x:a);
var G__8753 = b;
var G__8754 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8752,G__8753,G__8754) : f.call(null,G__8752,G__8753,G__8754));
});
var G__8765__4 = (function() { 
var G__8766__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__8766 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8767__i = 0, G__8767__a = new Array(arguments.length -  3);
while (G__8767__i < G__8767__a.length) {G__8767__a[G__8767__i] = arguments[G__8767__i + 3]; ++G__8767__i;}
  ds = new cljs.core.IndexedSeq(G__8767__a,0);
} 
return G__8766__delegate.call(this,a,b,c,ds);};
G__8766.cljs$lang$maxFixedArity = 3;
G__8766.cljs$lang$applyTo = (function (arglist__8768){
var a = cljs.core.first(arglist__8768);
arglist__8768 = cljs.core.next(arglist__8768);
var b = cljs.core.first(arglist__8768);
arglist__8768 = cljs.core.next(arglist__8768);
var c = cljs.core.first(arglist__8768);
var ds = cljs.core.rest(arglist__8768);
return G__8766__delegate(a,b,c,ds);
});
G__8766.cljs$core$IFn$_invoke$arity$variadic = G__8766__delegate;
return G__8766;
})()
;
G__8765 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__8765__1.call(this,a);
case 2:
return G__8765__2.call(this,a,b);
case 3:
return G__8765__3.call(this,a,b,c);
default:
var G__8769 = null;
if (arguments.length > 3) {
var G__8770__i = 0, G__8770__a = new Array(arguments.length -  3);
while (G__8770__i < G__8770__a.length) {G__8770__a[G__8770__i] = arguments[G__8770__i + 3]; ++G__8770__i;}
G__8769 = new cljs.core.IndexedSeq(G__8770__a,0);
}
return G__8765__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8769);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8765.cljs$lang$maxFixedArity = 3;
G__8765.cljs$lang$applyTo = G__8765__4.cljs$lang$applyTo;
G__8765.cljs$core$IFn$_invoke$arity$1 = G__8765__1;
G__8765.cljs$core$IFn$_invoke$arity$2 = G__8765__2;
G__8765.cljs$core$IFn$_invoke$arity$3 = G__8765__3;
G__8765.cljs$core$IFn$_invoke$arity$variadic = G__8765__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8765;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__8771 = null;
var G__8771__2 = (function (a,b){
var G__8755 = (((a == null))?x:a);
var G__8756 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8755,G__8756) : f.call(null,G__8755,G__8756));
});
var G__8771__3 = (function (a,b,c){
var G__8757 = (((a == null))?x:a);
var G__8758 = (((b == null))?y:b);
var G__8759 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8757,G__8758,G__8759) : f.call(null,G__8757,G__8758,G__8759));
});
var G__8771__4 = (function() { 
var G__8772__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__8772 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8773__i = 0, G__8773__a = new Array(arguments.length -  3);
while (G__8773__i < G__8773__a.length) {G__8773__a[G__8773__i] = arguments[G__8773__i + 3]; ++G__8773__i;}
  ds = new cljs.core.IndexedSeq(G__8773__a,0);
} 
return G__8772__delegate.call(this,a,b,c,ds);};
G__8772.cljs$lang$maxFixedArity = 3;
G__8772.cljs$lang$applyTo = (function (arglist__8774){
var a = cljs.core.first(arglist__8774);
arglist__8774 = cljs.core.next(arglist__8774);
var b = cljs.core.first(arglist__8774);
arglist__8774 = cljs.core.next(arglist__8774);
var c = cljs.core.first(arglist__8774);
var ds = cljs.core.rest(arglist__8774);
return G__8772__delegate(a,b,c,ds);
});
G__8772.cljs$core$IFn$_invoke$arity$variadic = G__8772__delegate;
return G__8772;
})()
;
G__8771 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8771__2.call(this,a,b);
case 3:
return G__8771__3.call(this,a,b,c);
default:
var G__8775 = null;
if (arguments.length > 3) {
var G__8776__i = 0, G__8776__a = new Array(arguments.length -  3);
while (G__8776__i < G__8776__a.length) {G__8776__a[G__8776__i] = arguments[G__8776__i + 3]; ++G__8776__i;}
G__8775 = new cljs.core.IndexedSeq(G__8776__a,0);
}
return G__8771__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8775);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8771.cljs$lang$maxFixedArity = 3;
G__8771.cljs$lang$applyTo = G__8771__4.cljs$lang$applyTo;
G__8771.cljs$core$IFn$_invoke$arity$2 = G__8771__2;
G__8771.cljs$core$IFn$_invoke$arity$3 = G__8771__3;
G__8771.cljs$core$IFn$_invoke$arity$variadic = G__8771__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8771;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__8777 = null;
var G__8777__2 = (function (a,b){
var G__8760 = (((a == null))?x:a);
var G__8761 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8760,G__8761) : f.call(null,G__8760,G__8761));
});
var G__8777__3 = (function (a,b,c){
var G__8762 = (((a == null))?x:a);
var G__8763 = (((b == null))?y:b);
var G__8764 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8762,G__8763,G__8764) : f.call(null,G__8762,G__8763,G__8764));
});
var G__8777__4 = (function() { 
var G__8778__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__8778 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8779__i = 0, G__8779__a = new Array(arguments.length -  3);
while (G__8779__i < G__8779__a.length) {G__8779__a[G__8779__i] = arguments[G__8779__i + 3]; ++G__8779__i;}
  ds = new cljs.core.IndexedSeq(G__8779__a,0);
} 
return G__8778__delegate.call(this,a,b,c,ds);};
G__8778.cljs$lang$maxFixedArity = 3;
G__8778.cljs$lang$applyTo = (function (arglist__8780){
var a = cljs.core.first(arglist__8780);
arglist__8780 = cljs.core.next(arglist__8780);
var b = cljs.core.first(arglist__8780);
arglist__8780 = cljs.core.next(arglist__8780);
var c = cljs.core.first(arglist__8780);
var ds = cljs.core.rest(arglist__8780);
return G__8778__delegate(a,b,c,ds);
});
G__8778.cljs$core$IFn$_invoke$arity$variadic = G__8778__delegate;
return G__8778;
})()
;
G__8777 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8777__2.call(this,a,b);
case 3:
return G__8777__3.call(this,a,b,c);
default:
var G__8781 = null;
if (arguments.length > 3) {
var G__8782__i = 0, G__8782__a = new Array(arguments.length -  3);
while (G__8782__i < G__8782__a.length) {G__8782__a[G__8782__i] = arguments[G__8782__i + 3]; ++G__8782__i;}
G__8781 = new cljs.core.IndexedSeq(G__8782__a,0);
}
return G__8777__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8781);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8777.cljs$lang$maxFixedArity = 3;
G__8777.cljs$lang$applyTo = G__8777__4.cljs$lang$applyTo;
G__8777.cljs$core$IFn$_invoke$arity$2 = G__8777__2;
G__8777.cljs$core$IFn$_invoke$arity$3 = G__8777__3;
G__8777.cljs$core$IFn$_invoke$arity$variadic = G__8777__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8777;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__8813 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__8813) : cljs.core.volatile_BANG_.call(null,G__8813));
})();
return ((function (i){
return (function() {
var G__8843 = null;
var G__8843__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8843__1 = (function (result){
var G__8814 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8814) : rf.call(null,G__8814));
});
var G__8843__2 = (function (result,input){
var G__8815 = result;
var G__8816 = (function (){var G__8817 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__8818 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8817,G__8818) : f.call(null,G__8817,G__8818));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8815,G__8816) : rf.call(null,G__8815,G__8816));
});
G__8843 = function(result,input){
switch(arguments.length){
case 0:
return G__8843__0.call(this);
case 1:
return G__8843__1.call(this,result);
case 2:
return G__8843__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8843.cljs$core$IFn$_invoke$arity$0 = G__8843__0;
G__8843.cljs$core$IFn$_invoke$arity$1 = G__8843__1;
G__8843.cljs$core$IFn$_invoke$arity$2 = G__8843__2;
return G__8843;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4651__auto___8844 = size;
var i_8845 = (0);
while(true){
if((i_8845 < n__4651__auto___8844)){
cljs.core.chunk_append(b,(function (){var G__8839 = (idx + i_8845);
var G__8840 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8845);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8839,G__8840) : f.call(null,G__8839,G__8840));
})());

var G__8846 = (i_8845 + (1));
i_8845 = G__8846;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8841 = idx;
var G__8842 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8841,G__8842) : f.call(null,G__8841,G__8842));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__8865 = null;
var G__8865__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8865__1 = (function (result){
var G__8859 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8859) : rf.call(null,G__8859));
});
var G__8865__2 = (function (result,input){
var v = (function (){var G__8860 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8860) : f.call(null,G__8860));
})();
if((v == null)){
return result;
} else {
var G__8861 = result;
var G__8862 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8861,G__8862) : rf.call(null,G__8861,G__8862));
}
});
G__8865 = function(result,input){
switch(arguments.length){
case 0:
return G__8865__0.call(this);
case 1:
return G__8865__1.call(this,result);
case 2:
return G__8865__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8865.cljs$core$IFn$_invoke$arity$0 = G__8865__0;
G__8865.cljs$core$IFn$_invoke$arity$1 = G__8865__1;
G__8865.cljs$core$IFn$_invoke$arity$2 = G__8865__2;
return G__8865;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4651__auto___8866 = size;
var i_8867 = (0);
while(true){
if((i_8867 < n__4651__auto___8866)){
var x_8868 = (function (){var G__8863 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8867);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8863) : f.call(null,G__8863));
})();
if((x_8868 == null)){
} else {
cljs.core.chunk_append(b,x_8868);
}

var G__8869 = (i_8867 + (1));
i_8867 = G__8869;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8864 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8864) : f.call(null,G__8864));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__8870 = this$__$1;
return goog.getUid(G__8870);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__8871 = cljs.core.seq(self__.watches);
var chunk__8872 = null;
var count__8873 = (0);
var i__8874 = (0);
while(true){
if((i__8874 < count__8873)){
var vec__8875 = chunk__8872.cljs$core$IIndexed$_nth$arity$2(null,i__8874);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8875,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8875,(1),null);
var G__8876_8885 = key;
var G__8877_8886 = this$__$1;
var G__8878_8887 = oldval;
var G__8879_8888 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8876_8885,G__8877_8886,G__8878_8887,G__8879_8888) : f.call(null,G__8876_8885,G__8877_8886,G__8878_8887,G__8879_8888));

var G__8889 = seq__8871;
var G__8890 = chunk__8872;
var G__8891 = count__8873;
var G__8892 = (i__8874 + (1));
seq__8871 = G__8889;
chunk__8872 = G__8890;
count__8873 = G__8891;
i__8874 = G__8892;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__8871);
if(temp__4126__auto__){
var seq__8871__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8871__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__8871__$1);
var G__8893 = cljs.core.chunk_rest(seq__8871__$1);
var G__8894 = c__4551__auto__;
var G__8895 = cljs.core.count(c__4551__auto__);
var G__8896 = (0);
seq__8871 = G__8893;
chunk__8872 = G__8894;
count__8873 = G__8895;
i__8874 = G__8896;
continue;
} else {
var vec__8880 = cljs.core.first(seq__8871__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8880,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8880,(1),null);
var G__8881_8897 = key;
var G__8882_8898 = this$__$1;
var G__8883_8899 = oldval;
var G__8884_8900 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8881_8897,G__8882_8898,G__8883_8899,G__8884_8900) : f.call(null,G__8881_8897,G__8882_8898,G__8883_8899,G__8884_8900));

var G__8901 = cljs.core.next(seq__8871__$1);
var G__8902 = null;
var G__8903 = (0);
var G__8904 = (0);
seq__8871 = G__8901;
chunk__8872 = G__8902;
count__8873 = G__8903;
i__8874 = G__8904;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__8908__delegate = function (x,p__8905){
var map__8907 = p__8905;
var map__8907__$1 = ((cljs.core.seq_QMARK_(map__8907))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__8907):map__8907);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8907__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8907__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__8908 = function (x,var_args){
var p__8905 = null;
if (arguments.length > 1) {
var G__8909__i = 0, G__8909__a = new Array(arguments.length -  1);
while (G__8909__i < G__8909__a.length) {G__8909__a[G__8909__i] = arguments[G__8909__i + 1]; ++G__8909__i;}
  p__8905 = new cljs.core.IndexedSeq(G__8909__a,0);
} 
return G__8908__delegate.call(this,x,p__8905);};
G__8908.cljs$lang$maxFixedArity = 1;
G__8908.cljs$lang$applyTo = (function (arglist__8910){
var x = cljs.core.first(arglist__8910);
var p__8905 = cljs.core.rest(arglist__8910);
return G__8908__delegate(x,p__8905);
});
G__8908.cljs$core$IFn$_invoke$arity$variadic = G__8908__delegate;
return G__8908;
})()
;
atom = function(x,var_args){
var p__8905 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__8911 = null;
if (arguments.length > 1) {
var G__8912__i = 0, G__8912__a = new Array(arguments.length -  1);
while (G__8912__i < G__8912__a.length) {G__8912__a[G__8912__i] = arguments[G__8912__i + 1]; ++G__8912__i;}
G__8911 = new cljs.core.IndexedSeq(G__8912__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8911);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__8915 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__8915) : validate.call(null,G__8915));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__8916 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8916) : cljs.core.pr_str.call(null,G__8916));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8923 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8923) : f.call(null,G__8923));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8924 = a.state;
var G__8925 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8924,G__8925) : f.call(null,G__8924,G__8925));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8926 = a.state;
var G__8927 = x;
var G__8928 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8926,G__8927,G__8928) : f.call(null,G__8926,G__8927,G__8928));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__8929__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__8929 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__8930__i = 0, G__8930__a = new Array(arguments.length -  4);
while (G__8930__i < G__8930__a.length) {G__8930__a[G__8930__i] = arguments[G__8930__i + 4]; ++G__8930__i;}
  more = new cljs.core.IndexedSeq(G__8930__a,0);
} 
return G__8929__delegate.call(this,a,f,x,y,more);};
G__8929.cljs$lang$maxFixedArity = 4;
G__8929.cljs$lang$applyTo = (function (arglist__8931){
var a = cljs.core.first(arglist__8931);
arglist__8931 = cljs.core.next(arglist__8931);
var f = cljs.core.first(arglist__8931);
arglist__8931 = cljs.core.next(arglist__8931);
var x = cljs.core.first(arglist__8931);
arglist__8931 = cljs.core.next(arglist__8931);
var y = cljs.core.first(arglist__8931);
var more = cljs.core.rest(arglist__8931);
return G__8929__delegate(a,f,x,y,more);
});
G__8929.cljs$core$IFn$_invoke$arity$variadic = G__8929__delegate;
return G__8929;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__8932 = null;
if (arguments.length > 4) {
var G__8933__i = 0, G__8933__a = new Array(arguments.length -  4);
while (G__8933__i < G__8933__a.length) {G__8933__a[G__8933__i] = arguments[G__8933__i + 4]; ++G__8933__i;}
G__8932 = new cljs.core.IndexedSeq(G__8933__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__8932);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__9000 = null;
var G__9000__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9000__1 = (function (result){
var G__8967 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8967) : rf.call(null,G__8967));
});
var G__9000__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__8968 = i;
var G__8969 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8968,G__8969) : f.call(null,G__8968,G__8969));
})();
if((v == null)){
return result;
} else {
var G__8970 = result;
var G__8971 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8970,G__8971) : rf.call(null,G__8970,G__8971));
}
});
G__9000 = function(result,input){
switch(arguments.length){
case 0:
return G__9000__0.call(this);
case 1:
return G__9000__1.call(this,result);
case 2:
return G__9000__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9000.cljs$core$IFn$_invoke$arity$0 = G__9000__0;
G__9000.cljs$core$IFn$_invoke$arity$1 = G__9000__1;
G__9000.cljs$core$IFn$_invoke$arity$2 = G__9000__2;
return G__9000;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4651__auto___9001 = size;
var i_9002 = (0);
while(true){
if((i_9002 < n__4651__auto___9001)){
var x_9003 = (function (){var G__8996 = (idx + i_9002);
var G__8997 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9002);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8996,G__8997) : f.call(null,G__8996,G__8997));
})();
if((x_9003 == null)){
} else {
cljs.core.chunk_append(b,x_9003);
}

var G__9004 = (i_9002 + (1));
i_9002 = G__9004;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8998 = idx;
var G__8999 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8998,G__8999) : f.call(null,G__8998,G__8999));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__9218 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9218) : p.call(null,G__9218));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__9220 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9220) : p.call(null,G__9220));
})();
if(cljs.core.truth_(and__3752__auto__)){
var G__9221 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9221) : p.call(null,G__9221));
} else {
return and__3752__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__9223 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9223) : p.call(null,G__9223));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__9225 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9225) : p.call(null,G__9225));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var G__9226 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9226) : p.call(null,G__9226));
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__9395__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__9395 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9396__i = 0, G__9396__a = new Array(arguments.length -  3);
while (G__9396__i < G__9396__a.length) {G__9396__a[G__9396__i] = arguments[G__9396__i + 3]; ++G__9396__i;}
  args = new cljs.core.IndexedSeq(G__9396__a,0);
} 
return G__9395__delegate.call(this,x,y,z,args);};
G__9395.cljs$lang$maxFixedArity = 3;
G__9395.cljs$lang$applyTo = (function (arglist__9397){
var x = cljs.core.first(arglist__9397);
arglist__9397 = cljs.core.next(arglist__9397);
var y = cljs.core.first(arglist__9397);
arglist__9397 = cljs.core.next(arglist__9397);
var z = cljs.core.first(arglist__9397);
var args = cljs.core.rest(arglist__9397);
return G__9395__delegate(x,y,z,args);
});
G__9395.cljs$core$IFn$_invoke$arity$variadic = G__9395__delegate;
return G__9395;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__9398 = null;
if (arguments.length > 3) {
var G__9399__i = 0, G__9399__a = new Array(arguments.length -  3);
while (G__9399__i < G__9399__a.length) {G__9399__a[G__9399__i] = arguments[G__9399__i + 3]; ++G__9399__i;}
G__9398 = new cljs.core.IndexedSeq(G__9399__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9398);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__9258 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9258) : p1.call(null,G__9258));
})();
if(cljs.core.truth_(and__3752__auto__)){
var G__9259 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9259) : p2.call(null,G__9259));
} else {
return and__3752__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__9261 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9261) : p1.call(null,G__9261));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__9263 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9263) : p1.call(null,G__9263));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var and__3752__auto____$2 = (function (){var G__9265 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9265) : p2.call(null,G__9265));
})();
if(cljs.core.truth_(and__3752__auto____$2)){
var G__9266 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9266) : p2.call(null,G__9266));
} else {
return and__3752__auto____$2;
}
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__9268 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9268) : p1.call(null,G__9268));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__9270 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9270) : p1.call(null,G__9270));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var and__3752__auto____$2 = (function (){var G__9272 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9272) : p1.call(null,G__9272));
})();
if(cljs.core.truth_(and__3752__auto____$2)){
var and__3752__auto____$3 = (function (){var G__9274 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9274) : p2.call(null,G__9274));
})();
if(cljs.core.truth_(and__3752__auto____$3)){
var and__3752__auto____$4 = (function (){var G__9276 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9276) : p2.call(null,G__9276));
})();
if(cljs.core.truth_(and__3752__auto____$4)){
var G__9277 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9277) : p2.call(null,G__9277));
} else {
return and__3752__auto____$4;
}
} else {
return and__3752__auto____$3;
}
} else {
return and__3752__auto____$2;
}
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__9400__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__9005_SHARP_){
var and__3752__auto__ = (function (){var G__9282 = p1__9005_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9282) : p1.call(null,G__9282));
})();
if(cljs.core.truth_(and__3752__auto__)){
var G__9283 = p1__9005_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9283) : p2.call(null,G__9283));
} else {
return and__3752__auto__;
}
}),args)));
};
var G__9400 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9401__i = 0, G__9401__a = new Array(arguments.length -  3);
while (G__9401__i < G__9401__a.length) {G__9401__a[G__9401__i] = arguments[G__9401__i + 3]; ++G__9401__i;}
  args = new cljs.core.IndexedSeq(G__9401__a,0);
} 
return G__9400__delegate.call(this,x,y,z,args);};
G__9400.cljs$lang$maxFixedArity = 3;
G__9400.cljs$lang$applyTo = (function (arglist__9402){
var x = cljs.core.first(arglist__9402);
arglist__9402 = cljs.core.next(arglist__9402);
var y = cljs.core.first(arglist__9402);
arglist__9402 = cljs.core.next(arglist__9402);
var z = cljs.core.first(arglist__9402);
var args = cljs.core.rest(arglist__9402);
return G__9400__delegate(x,y,z,args);
});
G__9400.cljs$core$IFn$_invoke$arity$variadic = G__9400__delegate;
return G__9400;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__9403 = null;
if (arguments.length > 3) {
var G__9404__i = 0, G__9404__a = new Array(arguments.length -  3);
while (G__9404__i < G__9404__a.length) {G__9404__a[G__9404__i] = arguments[G__9404__i + 3]; ++G__9404__i;}
G__9403 = new cljs.core.IndexedSeq(G__9404__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9403);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__9329 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9329) : p1.call(null,G__9329));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__9331 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9331) : p2.call(null,G__9331));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var G__9332 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9332) : p3.call(null,G__9332));
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__9334 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9334) : p1.call(null,G__9334));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__9336 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9336) : p2.call(null,G__9336));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var and__3752__auto____$2 = (function (){var G__9338 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9338) : p3.call(null,G__9338));
})();
if(cljs.core.truth_(and__3752__auto____$2)){
var and__3752__auto____$3 = (function (){var G__9340 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9340) : p1.call(null,G__9340));
})();
if(cljs.core.truth_(and__3752__auto____$3)){
var and__3752__auto____$4 = (function (){var G__9342 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9342) : p2.call(null,G__9342));
})();
if(cljs.core.truth_(and__3752__auto____$4)){
var G__9343 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9343) : p3.call(null,G__9343));
} else {
return and__3752__auto____$4;
}
} else {
return and__3752__auto____$3;
}
} else {
return and__3752__auto____$2;
}
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__9345 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9345) : p1.call(null,G__9345));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__9347 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9347) : p2.call(null,G__9347));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var and__3752__auto____$2 = (function (){var G__9349 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9349) : p3.call(null,G__9349));
})();
if(cljs.core.truth_(and__3752__auto____$2)){
var and__3752__auto____$3 = (function (){var G__9351 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9351) : p1.call(null,G__9351));
})();
if(cljs.core.truth_(and__3752__auto____$3)){
var and__3752__auto____$4 = (function (){var G__9353 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9353) : p2.call(null,G__9353));
})();
if(cljs.core.truth_(and__3752__auto____$4)){
var and__3752__auto____$5 = (function (){var G__9355 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9355) : p3.call(null,G__9355));
})();
if(cljs.core.truth_(and__3752__auto____$5)){
var and__3752__auto____$6 = (function (){var G__9357 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9357) : p1.call(null,G__9357));
})();
if(cljs.core.truth_(and__3752__auto____$6)){
var and__3752__auto____$7 = (function (){var G__9359 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9359) : p2.call(null,G__9359));
})();
if(cljs.core.truth_(and__3752__auto____$7)){
var G__9360 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9360) : p3.call(null,G__9360));
} else {
return and__3752__auto____$7;
}
} else {
return and__3752__auto____$6;
}
} else {
return and__3752__auto____$5;
}
} else {
return and__3752__auto____$4;
}
} else {
return and__3752__auto____$3;
}
} else {
return and__3752__auto____$2;
}
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__9405__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__9006_SHARP_){
var and__3752__auto__ = (function (){var G__9367 = p1__9006_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9367) : p1.call(null,G__9367));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__9369 = p1__9006_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9369) : p2.call(null,G__9369));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var G__9370 = p1__9006_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9370) : p3.call(null,G__9370));
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
}),args)));
};
var G__9405 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9406__i = 0, G__9406__a = new Array(arguments.length -  3);
while (G__9406__i < G__9406__a.length) {G__9406__a[G__9406__i] = arguments[G__9406__i + 3]; ++G__9406__i;}
  args = new cljs.core.IndexedSeq(G__9406__a,0);
} 
return G__9405__delegate.call(this,x,y,z,args);};
G__9405.cljs$lang$maxFixedArity = 3;
G__9405.cljs$lang$applyTo = (function (arglist__9407){
var x = cljs.core.first(arglist__9407);
arglist__9407 = cljs.core.next(arglist__9407);
var y = cljs.core.first(arglist__9407);
arglist__9407 = cljs.core.next(arglist__9407);
var z = cljs.core.first(arglist__9407);
var args = cljs.core.rest(arglist__9407);
return G__9405__delegate(x,y,z,args);
});
G__9405.cljs$core$IFn$_invoke$arity$variadic = G__9405__delegate;
return G__9405;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__9408 = null;
if (arguments.length > 3) {
var G__9409__i = 0, G__9409__a = new Array(arguments.length -  3);
while (G__9409__i < G__9409__a.length) {G__9409__a[G__9409__i] = arguments[G__9409__i + 3]; ++G__9409__i;}
G__9408 = new cljs.core.IndexedSeq(G__9409__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9408);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__9410__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9007_SHARP_){
var G__9386 = x;
return (p1__9007_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9007_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9386) : p1__9007_SHARP_.call(null,G__9386));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9008_SHARP_){
var and__3752__auto__ = (function (){var G__9388 = x;
return (p1__9008_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9008_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9388) : p1__9008_SHARP_.call(null,G__9388));
})();
if(cljs.core.truth_(and__3752__auto__)){
var G__9389 = y;
return (p1__9008_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9008_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9389) : p1__9008_SHARP_.call(null,G__9389));
} else {
return and__3752__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9009_SHARP_){
var and__3752__auto__ = (function (){var G__9391 = x;
return (p1__9009_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9009_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9391) : p1__9009_SHARP_.call(null,G__9391));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__9393 = y;
return (p1__9009_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9009_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9393) : p1__9009_SHARP_.call(null,G__9393));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var G__9394 = z;
return (p1__9009_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9009_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9394) : p1__9009_SHARP_.call(null,G__9394));
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__9411__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9010_SHARP_){
return cljs.core.every_QMARK_(p1__9010_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__9411 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9412__i = 0, G__9412__a = new Array(arguments.length -  3);
while (G__9412__i < G__9412__a.length) {G__9412__a[G__9412__i] = arguments[G__9412__i + 3]; ++G__9412__i;}
  args = new cljs.core.IndexedSeq(G__9412__a,0);
} 
return G__9411__delegate.call(this,x,y,z,args);};
G__9411.cljs$lang$maxFixedArity = 3;
G__9411.cljs$lang$applyTo = (function (arglist__9413){
var x = cljs.core.first(arglist__9413);
arglist__9413 = cljs.core.next(arglist__9413);
var y = cljs.core.first(arglist__9413);
arglist__9413 = cljs.core.next(arglist__9413);
var z = cljs.core.first(arglist__9413);
var args = cljs.core.rest(arglist__9413);
return G__9411__delegate(x,y,z,args);
});
G__9411.cljs$core$IFn$_invoke$arity$variadic = G__9411__delegate;
return G__9411;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__9414 = null;
if (arguments.length > 3) {
var G__9415__i = 0, G__9415__a = new Array(arguments.length -  3);
while (G__9415__i < G__9415__a.length) {G__9415__a[G__9415__i] = arguments[G__9415__i + 3]; ++G__9415__i;}
G__9414 = new cljs.core.IndexedSeq(G__9415__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9414);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__9410 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9416__i = 0, G__9416__a = new Array(arguments.length -  3);
while (G__9416__i < G__9416__a.length) {G__9416__a[G__9416__i] = arguments[G__9416__i + 3]; ++G__9416__i;}
  ps = new cljs.core.IndexedSeq(G__9416__a,0);
} 
return G__9410__delegate.call(this,p1,p2,p3,ps);};
G__9410.cljs$lang$maxFixedArity = 3;
G__9410.cljs$lang$applyTo = (function (arglist__9417){
var p1 = cljs.core.first(arglist__9417);
arglist__9417 = cljs.core.next(arglist__9417);
var p2 = cljs.core.first(arglist__9417);
arglist__9417 = cljs.core.next(arglist__9417);
var p3 = cljs.core.first(arglist__9417);
var ps = cljs.core.rest(arglist__9417);
return G__9410__delegate(p1,p2,p3,ps);
});
G__9410.cljs$core$IFn$_invoke$arity$variadic = G__9410__delegate;
return G__9410;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__9418 = null;
if (arguments.length > 3) {
var G__9419__i = 0, G__9419__a = new Array(arguments.length -  3);
while (G__9419__i < G__9419__a.length) {G__9419__a[G__9419__i] = arguments[G__9419__i + 3]; ++G__9419__i;}
G__9418 = new cljs.core.IndexedSeq(G__9419__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9418);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__9625 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9625) : p.call(null,G__9625));
});
var sp1__2 = (function (x,y){
var or__3764__auto__ = (function (){var G__9627 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9627) : p.call(null,G__9627));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var G__9628 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9628) : p.call(null,G__9628));
}
});
var sp1__3 = (function (x,y,z){
var or__3764__auto__ = (function (){var G__9630 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9630) : p.call(null,G__9630));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var G__9632 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9632) : p.call(null,G__9632));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var G__9633 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9633) : p.call(null,G__9633));
}
}
});
var sp1__4 = (function() { 
var G__9794__delegate = function (x,y,z,args){
var or__3764__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__9794 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9795__i = 0, G__9795__a = new Array(arguments.length -  3);
while (G__9795__i < G__9795__a.length) {G__9795__a[G__9795__i] = arguments[G__9795__i + 3]; ++G__9795__i;}
  args = new cljs.core.IndexedSeq(G__9795__a,0);
} 
return G__9794__delegate.call(this,x,y,z,args);};
G__9794.cljs$lang$maxFixedArity = 3;
G__9794.cljs$lang$applyTo = (function (arglist__9796){
var x = cljs.core.first(arglist__9796);
arglist__9796 = cljs.core.next(arglist__9796);
var y = cljs.core.first(arglist__9796);
arglist__9796 = cljs.core.next(arglist__9796);
var z = cljs.core.first(arglist__9796);
var args = cljs.core.rest(arglist__9796);
return G__9794__delegate(x,y,z,args);
});
G__9794.cljs$core$IFn$_invoke$arity$variadic = G__9794__delegate;
return G__9794;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__9797 = null;
if (arguments.length > 3) {
var G__9798__i = 0, G__9798__a = new Array(arguments.length -  3);
while (G__9798__i < G__9798__a.length) {G__9798__a[G__9798__i] = arguments[G__9798__i + 3]; ++G__9798__i;}
G__9797 = new cljs.core.IndexedSeq(G__9798__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9797);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3764__auto__ = (function (){var G__9665 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9665) : p1.call(null,G__9665));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var G__9666 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9666) : p2.call(null,G__9666));
}
});
var sp2__2 = (function (x,y){
var or__3764__auto__ = (function (){var G__9668 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9668) : p1.call(null,G__9668));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var G__9670 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9670) : p1.call(null,G__9670));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var or__3764__auto____$2 = (function (){var G__9672 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9672) : p2.call(null,G__9672));
})();
if(cljs.core.truth_(or__3764__auto____$2)){
return or__3764__auto____$2;
} else {
var G__9673 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9673) : p2.call(null,G__9673));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3764__auto__ = (function (){var G__9675 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9675) : p1.call(null,G__9675));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var G__9677 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9677) : p1.call(null,G__9677));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var or__3764__auto____$2 = (function (){var G__9679 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9679) : p1.call(null,G__9679));
})();
if(cljs.core.truth_(or__3764__auto____$2)){
return or__3764__auto____$2;
} else {
var or__3764__auto____$3 = (function (){var G__9681 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9681) : p2.call(null,G__9681));
})();
if(cljs.core.truth_(or__3764__auto____$3)){
return or__3764__auto____$3;
} else {
var or__3764__auto____$4 = (function (){var G__9683 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9683) : p2.call(null,G__9683));
})();
if(cljs.core.truth_(or__3764__auto____$4)){
return or__3764__auto____$4;
} else {
var G__9684 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9684) : p2.call(null,G__9684));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__9799__delegate = function (x,y,z,args){
var or__3764__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.some(((function (or__3764__auto__){
return (function (p1__9420_SHARP_){
var or__3764__auto____$1 = (function (){var G__9686 = p1__9420_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9686) : p1.call(null,G__9686));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var G__9687 = p1__9420_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9687) : p2.call(null,G__9687));
}
});})(or__3764__auto__))
,args);
}
};
var G__9799 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9800__i = 0, G__9800__a = new Array(arguments.length -  3);
while (G__9800__i < G__9800__a.length) {G__9800__a[G__9800__i] = arguments[G__9800__i + 3]; ++G__9800__i;}
  args = new cljs.core.IndexedSeq(G__9800__a,0);
} 
return G__9799__delegate.call(this,x,y,z,args);};
G__9799.cljs$lang$maxFixedArity = 3;
G__9799.cljs$lang$applyTo = (function (arglist__9801){
var x = cljs.core.first(arglist__9801);
arglist__9801 = cljs.core.next(arglist__9801);
var y = cljs.core.first(arglist__9801);
arglist__9801 = cljs.core.next(arglist__9801);
var z = cljs.core.first(arglist__9801);
var args = cljs.core.rest(arglist__9801);
return G__9799__delegate(x,y,z,args);
});
G__9799.cljs$core$IFn$_invoke$arity$variadic = G__9799__delegate;
return G__9799;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__9802 = null;
if (arguments.length > 3) {
var G__9803__i = 0, G__9803__a = new Array(arguments.length -  3);
while (G__9803__i < G__9803__a.length) {G__9803__a[G__9803__i] = arguments[G__9803__i + 3]; ++G__9803__i;}
G__9802 = new cljs.core.IndexedSeq(G__9803__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9802);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3764__auto__ = (function (){var G__9733 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9733) : p1.call(null,G__9733));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var G__9735 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9735) : p2.call(null,G__9735));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var G__9736 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9736) : p3.call(null,G__9736));
}
}
});
var sp3__2 = (function (x,y){
var or__3764__auto__ = (function (){var G__9738 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9738) : p1.call(null,G__9738));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var G__9740 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9740) : p2.call(null,G__9740));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var or__3764__auto____$2 = (function (){var G__9742 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9742) : p3.call(null,G__9742));
})();
if(cljs.core.truth_(or__3764__auto____$2)){
return or__3764__auto____$2;
} else {
var or__3764__auto____$3 = (function (){var G__9744 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9744) : p1.call(null,G__9744));
})();
if(cljs.core.truth_(or__3764__auto____$3)){
return or__3764__auto____$3;
} else {
var or__3764__auto____$4 = (function (){var G__9746 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9746) : p2.call(null,G__9746));
})();
if(cljs.core.truth_(or__3764__auto____$4)){
return or__3764__auto____$4;
} else {
var G__9747 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9747) : p3.call(null,G__9747));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3764__auto__ = (function (){var G__9749 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9749) : p1.call(null,G__9749));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var G__9751 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9751) : p2.call(null,G__9751));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var or__3764__auto____$2 = (function (){var G__9753 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9753) : p3.call(null,G__9753));
})();
if(cljs.core.truth_(or__3764__auto____$2)){
return or__3764__auto____$2;
} else {
var or__3764__auto____$3 = (function (){var G__9755 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9755) : p1.call(null,G__9755));
})();
if(cljs.core.truth_(or__3764__auto____$3)){
return or__3764__auto____$3;
} else {
var or__3764__auto____$4 = (function (){var G__9757 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9757) : p2.call(null,G__9757));
})();
if(cljs.core.truth_(or__3764__auto____$4)){
return or__3764__auto____$4;
} else {
var or__3764__auto____$5 = (function (){var G__9759 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9759) : p3.call(null,G__9759));
})();
if(cljs.core.truth_(or__3764__auto____$5)){
return or__3764__auto____$5;
} else {
var or__3764__auto____$6 = (function (){var G__9761 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9761) : p1.call(null,G__9761));
})();
if(cljs.core.truth_(or__3764__auto____$6)){
return or__3764__auto____$6;
} else {
var or__3764__auto____$7 = (function (){var G__9763 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9763) : p2.call(null,G__9763));
})();
if(cljs.core.truth_(or__3764__auto____$7)){
return or__3764__auto____$7;
} else {
var G__9764 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9764) : p3.call(null,G__9764));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__9804__delegate = function (x,y,z,args){
var or__3764__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.some(((function (or__3764__auto__){
return (function (p1__9421_SHARP_){
var or__3764__auto____$1 = (function (){var G__9766 = p1__9421_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9766) : p1.call(null,G__9766));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var or__3764__auto____$2 = (function (){var G__9768 = p1__9421_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9768) : p2.call(null,G__9768));
})();
if(cljs.core.truth_(or__3764__auto____$2)){
return or__3764__auto____$2;
} else {
var G__9769 = p1__9421_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9769) : p3.call(null,G__9769));
}
}
});})(or__3764__auto__))
,args);
}
};
var G__9804 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9805__i = 0, G__9805__a = new Array(arguments.length -  3);
while (G__9805__i < G__9805__a.length) {G__9805__a[G__9805__i] = arguments[G__9805__i + 3]; ++G__9805__i;}
  args = new cljs.core.IndexedSeq(G__9805__a,0);
} 
return G__9804__delegate.call(this,x,y,z,args);};
G__9804.cljs$lang$maxFixedArity = 3;
G__9804.cljs$lang$applyTo = (function (arglist__9806){
var x = cljs.core.first(arglist__9806);
arglist__9806 = cljs.core.next(arglist__9806);
var y = cljs.core.first(arglist__9806);
arglist__9806 = cljs.core.next(arglist__9806);
var z = cljs.core.first(arglist__9806);
var args = cljs.core.rest(arglist__9806);
return G__9804__delegate(x,y,z,args);
});
G__9804.cljs$core$IFn$_invoke$arity$variadic = G__9804__delegate;
return G__9804;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__9807 = null;
if (arguments.length > 3) {
var G__9808__i = 0, G__9808__a = new Array(arguments.length -  3);
while (G__9808__i < G__9808__a.length) {G__9808__a[G__9808__i] = arguments[G__9808__i + 3]; ++G__9808__i;}
G__9807 = new cljs.core.IndexedSeq(G__9808__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9807);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__9809__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__9422_SHARP_){
var G__9785 = x;
return (p1__9422_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9422_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9785) : p1__9422_SHARP_.call(null,G__9785));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__9423_SHARP_){
var or__3764__auto__ = (function (){var G__9787 = x;
return (p1__9423_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9423_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9787) : p1__9423_SHARP_.call(null,G__9787));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var G__9788 = y;
return (p1__9423_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9423_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9788) : p1__9423_SHARP_.call(null,G__9788));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__9424_SHARP_){
var or__3764__auto__ = (function (){var G__9790 = x;
return (p1__9424_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9424_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9790) : p1__9424_SHARP_.call(null,G__9790));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var G__9792 = y;
return (p1__9424_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9424_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9792) : p1__9424_SHARP_.call(null,G__9792));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var G__9793 = z;
return (p1__9424_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9424_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9793) : p1__9424_SHARP_.call(null,G__9793));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__9810__delegate = function (x,y,z,args){
var or__3764__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.some(((function (or__3764__auto__,ps__$1){
return (function (p1__9425_SHARP_){
return cljs.core.some(p1__9425_SHARP_,args);
});})(or__3764__auto__,ps__$1))
,ps__$1);
}
};
var G__9810 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9811__i = 0, G__9811__a = new Array(arguments.length -  3);
while (G__9811__i < G__9811__a.length) {G__9811__a[G__9811__i] = arguments[G__9811__i + 3]; ++G__9811__i;}
  args = new cljs.core.IndexedSeq(G__9811__a,0);
} 
return G__9810__delegate.call(this,x,y,z,args);};
G__9810.cljs$lang$maxFixedArity = 3;
G__9810.cljs$lang$applyTo = (function (arglist__9812){
var x = cljs.core.first(arglist__9812);
arglist__9812 = cljs.core.next(arglist__9812);
var y = cljs.core.first(arglist__9812);
arglist__9812 = cljs.core.next(arglist__9812);
var z = cljs.core.first(arglist__9812);
var args = cljs.core.rest(arglist__9812);
return G__9810__delegate(x,y,z,args);
});
G__9810.cljs$core$IFn$_invoke$arity$variadic = G__9810__delegate;
return G__9810;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__9813 = null;
if (arguments.length > 3) {
var G__9814__i = 0, G__9814__a = new Array(arguments.length -  3);
while (G__9814__i < G__9814__a.length) {G__9814__a[G__9814__i] = arguments[G__9814__i + 3]; ++G__9814__i;}
G__9813 = new cljs.core.IndexedSeq(G__9814__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9813);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__9809 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9815__i = 0, G__9815__a = new Array(arguments.length -  3);
while (G__9815__i < G__9815__a.length) {G__9815__a[G__9815__i] = arguments[G__9815__i + 3]; ++G__9815__i;}
  ps = new cljs.core.IndexedSeq(G__9815__a,0);
} 
return G__9809__delegate.call(this,p1,p2,p3,ps);};
G__9809.cljs$lang$maxFixedArity = 3;
G__9809.cljs$lang$applyTo = (function (arglist__9816){
var p1 = cljs.core.first(arglist__9816);
arglist__9816 = cljs.core.next(arglist__9816);
var p2 = cljs.core.first(arglist__9816);
arglist__9816 = cljs.core.next(arglist__9816);
var p3 = cljs.core.first(arglist__9816);
var ps = cljs.core.rest(arglist__9816);
return G__9809__delegate(p1,p2,p3,ps);
});
G__9809.cljs$core$IFn$_invoke$arity$variadic = G__9809__delegate;
return G__9809;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__9817 = null;
if (arguments.length > 3) {
var G__9818__i = 0, G__9818__a = new Array(arguments.length -  3);
while (G__9818__i < G__9818__a.length) {G__9818__a[G__9818__i] = arguments[G__9818__i + 3]; ++G__9818__i;}
G__9817 = new cljs.core.IndexedSeq(G__9818__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9817);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__9873 = null;
var G__9873__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9873__1 = (function (result){
var G__9859 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9859) : rf.call(null,G__9859));
});
var G__9873__2 = (function (result,input){
var G__9860 = result;
var G__9861 = (function (){var G__9862 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9862) : f.call(null,G__9862));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9860,G__9861) : rf.call(null,G__9860,G__9861));
});
var G__9873__3 = (function() { 
var G__9874__delegate = function (result,input,inputs){
var G__9863 = result;
var G__9864 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9863,G__9864) : rf.call(null,G__9863,G__9864));
};
var G__9874 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__9875__i = 0, G__9875__a = new Array(arguments.length -  2);
while (G__9875__i < G__9875__a.length) {G__9875__a[G__9875__i] = arguments[G__9875__i + 2]; ++G__9875__i;}
  inputs = new cljs.core.IndexedSeq(G__9875__a,0);
} 
return G__9874__delegate.call(this,result,input,inputs);};
G__9874.cljs$lang$maxFixedArity = 2;
G__9874.cljs$lang$applyTo = (function (arglist__9876){
var result = cljs.core.first(arglist__9876);
arglist__9876 = cljs.core.next(arglist__9876);
var input = cljs.core.first(arglist__9876);
var inputs = cljs.core.rest(arglist__9876);
return G__9874__delegate(result,input,inputs);
});
G__9874.cljs$core$IFn$_invoke$arity$variadic = G__9874__delegate;
return G__9874;
})()
;
G__9873 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__9873__0.call(this);
case 1:
return G__9873__1.call(this,result);
case 2:
return G__9873__2.call(this,result,input);
default:
var G__9877 = null;
if (arguments.length > 2) {
var G__9878__i = 0, G__9878__a = new Array(arguments.length -  2);
while (G__9878__i < G__9878__a.length) {G__9878__a[G__9878__i] = arguments[G__9878__i + 2]; ++G__9878__i;}
G__9877 = new cljs.core.IndexedSeq(G__9878__a,0);
}
return G__9873__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__9877);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9873.cljs$lang$maxFixedArity = 2;
G__9873.cljs$lang$applyTo = G__9873__3.cljs$lang$applyTo;
G__9873.cljs$core$IFn$_invoke$arity$0 = G__9873__0;
G__9873.cljs$core$IFn$_invoke$arity$1 = G__9873__1;
G__9873.cljs$core$IFn$_invoke$arity$2 = G__9873__2;
G__9873.cljs$core$IFn$_invoke$arity$variadic = G__9873__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9873;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4651__auto___9879 = size;
var i_9880 = (0);
while(true){
if((i_9880 < n__4651__auto___9879)){
cljs.core.chunk_append(b,(function (){var G__9865 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9880);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9865) : f.call(null,G__9865));
})());

var G__9881 = (i_9880 + (1));
i_9880 = G__9881;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9866 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9866) : f.call(null,G__9866));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__9867 = cljs.core.first(s1);
var G__9868 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9867,G__9868) : f.call(null,G__9867,G__9868));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__9869 = cljs.core.first(s1);
var G__9870 = cljs.core.first(s2);
var G__9871 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9869,G__9870,G__9871) : f.call(null,G__9869,G__9870,G__9871));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__9882__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__9819_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__9819_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__9882 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9883__i = 0, G__9883__a = new Array(arguments.length -  4);
while (G__9883__i < G__9883__a.length) {G__9883__a[G__9883__i] = arguments[G__9883__i + 4]; ++G__9883__i;}
  colls = new cljs.core.IndexedSeq(G__9883__a,0);
} 
return G__9882__delegate.call(this,f,c1,c2,c3,colls);};
G__9882.cljs$lang$maxFixedArity = 4;
G__9882.cljs$lang$applyTo = (function (arglist__9884){
var f = cljs.core.first(arglist__9884);
arglist__9884 = cljs.core.next(arglist__9884);
var c1 = cljs.core.first(arglist__9884);
arglist__9884 = cljs.core.next(arglist__9884);
var c2 = cljs.core.first(arglist__9884);
arglist__9884 = cljs.core.next(arglist__9884);
var c3 = cljs.core.first(arglist__9884);
var colls = cljs.core.rest(arglist__9884);
return G__9882__delegate(f,c1,c2,c3,colls);
});
G__9882.cljs$core$IFn$_invoke$arity$variadic = G__9882__delegate;
return G__9882;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__9885 = null;
if (arguments.length > 4) {
var G__9886__i = 0, G__9886__a = new Array(arguments.length -  4);
while (G__9886__i < G__9886__a.length) {G__9886__a[G__9886__i] = arguments[G__9886__i + 4]; ++G__9886__i;}
G__9885 = new cljs.core.IndexedSeq(G__9886__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9895 = null;
var G__9895__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9895__1 = (function (result){
var G__9892 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9892) : rf.call(null,G__9892));
});
var G__9895__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__9893 = result;
var G__9894 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9893,G__9894) : rf.call(null,G__9893,G__9894));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__9895 = function(result,input){
switch(arguments.length){
case 0:
return G__9895__0.call(this);
case 1:
return G__9895__1.call(this,result);
case 2:
return G__9895__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9895.cljs$core$IFn$_invoke$arity$0 = G__9895__0;
G__9895.cljs$core$IFn$_invoke$arity$1 = G__9895__1;
G__9895.cljs$core$IFn$_invoke$arity$2 = G__9895__2;
return G__9895;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9902 = null;
var G__9902__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9902__1 = (function (result){
var G__9899 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9899) : rf.call(null,G__9899));
});
var G__9902__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__9900 = result;
var G__9901 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9900,G__9901) : rf.call(null,G__9900,G__9901));
}
});
G__9902 = function(result,input){
switch(arguments.length){
case 0:
return G__9902__0.call(this);
case 1:
return G__9902__1.call(this,result);
case 2:
return G__9902__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9902.cljs$core$IFn$_invoke$arity$0 = G__9902__0;
G__9902.cljs$core$IFn$_invoke$arity$1 = G__9902__1;
G__9902.cljs$core$IFn$_invoke$arity$2 = G__9902__2;
return G__9902;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__9903 = (n__$1 - (1));
var G__9904 = cljs.core.rest(s);
n__$1 = G__9903;
coll__$1 = G__9904;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__9907 = cljs.core.next(s);
var G__9908 = cljs.core.next(lead);
s = G__9907;
lead = G__9908;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__9921 = null;
var G__9921__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9921__1 = (function (result){
var G__9915 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9915) : rf.call(null,G__9915));
});
var G__9921__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3752__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3752__auto__)){
var G__9916 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9916) : pred.call(null,G__9916));
} else {
return and__3752__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__9917 = result;
var G__9918 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9917,G__9918) : rf.call(null,G__9917,G__9918));
}
});
G__9921 = function(result,input){
switch(arguments.length){
case 0:
return G__9921__0.call(this);
case 1:
return G__9921__1.call(this,result);
case 2:
return G__9921__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9921.cljs$core$IFn$_invoke$arity$0 = G__9921__0;
G__9921.cljs$core$IFn$_invoke$arity$1 = G__9921__1;
G__9921.cljs$core$IFn$_invoke$arity$2 = G__9921__2;
return G__9921;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3752__auto__ = s;
if(and__3752__auto__){
var G__9920 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__9920) : pred__$1.call(null,G__9920));
} else {
return and__3752__auto__;
}
})())){
var G__9922 = pred__$1;
var G__9923 = cljs.core.rest(s);
pred__$1 = G__9922;
coll__$1 = G__9923;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__9932 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9932) : f.call(null,G__9932));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__9935__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__9935 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9936__i = 0, G__9936__a = new Array(arguments.length -  2);
while (G__9936__i < G__9936__a.length) {G__9936__a[G__9936__i] = arguments[G__9936__i + 2]; ++G__9936__i;}
  colls = new cljs.core.IndexedSeq(G__9936__a,0);
} 
return G__9935__delegate.call(this,c1,c2,colls);};
G__9935.cljs$lang$maxFixedArity = 2;
G__9935.cljs$lang$applyTo = (function (arglist__9937){
var c1 = cljs.core.first(arglist__9937);
arglist__9937 = cljs.core.next(arglist__9937);
var c2 = cljs.core.first(arglist__9937);
var colls = cljs.core.rest(arglist__9937);
return G__9935__delegate(c1,c2,colls);
});
G__9935.cljs$core$IFn$_invoke$arity$variadic = G__9935__delegate;
return G__9935;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__9938 = null;
if (arguments.length > 2) {
var G__9939__i = 0, G__9939__a = new Array(arguments.length -  2);
while (G__9939__i < G__9939__a.length) {G__9939__a[G__9939__i] = arguments[G__9939__i + 2]; ++G__9939__i;}
G__9938 = new cljs.core.IndexedSeq(G__9939__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__9938);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__9954 = null;
var G__9954__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9954__1 = (function (result){
var G__9947 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9947) : rf.call(null,G__9947));
});
var G__9954__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__9948 = result;
var G__9949 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9948,G__9949) : rf.call(null,G__9948,G__9949));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__9950 = sepr;
var G__9951 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9950,G__9951) : rf.call(null,G__9950,G__9951));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__9952 = result;
var G__9953 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9952,G__9953) : rf.call(null,G__9952,G__9953));
}
});
G__9954 = function(result,input){
switch(arguments.length){
case 0:
return G__9954__0.call(this);
case 1:
return G__9954__1.call(this,result);
case 2:
return G__9954__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9954.cljs$core$IFn$_invoke$arity$0 = G__9954__0;
G__9954.cljs$core$IFn$_invoke$arity$1 = G__9954__1;
G__9954.cljs$core$IFn$_invoke$arity$2 = G__9954__2;
return G__9954;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__9963__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__9963 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__9964__i = 0, G__9964__a = new Array(arguments.length -  1);
while (G__9964__i < G__9964__a.length) {G__9964__a[G__9964__i] = arguments[G__9964__i + 1]; ++G__9964__i;}
  colls = new cljs.core.IndexedSeq(G__9964__a,0);
} 
return G__9963__delegate.call(this,f,colls);};
G__9963.cljs$lang$maxFixedArity = 1;
G__9963.cljs$lang$applyTo = (function (arglist__9965){
var f = cljs.core.first(arglist__9965);
var colls = cljs.core.rest(arglist__9965);
return G__9963__delegate(f,colls);
});
G__9963.cljs$core$IFn$_invoke$arity$variadic = G__9963__delegate;
return G__9963;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__9966 = null;
if (arguments.length > 1) {
var G__9967__i = 0, G__9967__a = new Array(arguments.length -  1);
while (G__9967__i < G__9967__a.length) {G__9967__a[G__9967__i] = arguments[G__9967__i + 1]; ++G__9967__i;}
G__9966 = new cljs.core.IndexedSeq(G__9967__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9966);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__9986 = null;
var G__9986__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9986__1 = (function (result){
var G__9980 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9980) : rf.call(null,G__9980));
});
var G__9986__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9981 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9981) : pred.call(null,G__9981));
})())){
var G__9982 = result;
var G__9983 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9982,G__9983) : rf.call(null,G__9982,G__9983));
} else {
return result;
}
});
G__9986 = function(result,input){
switch(arguments.length){
case 0:
return G__9986__0.call(this);
case 1:
return G__9986__1.call(this,result);
case 2:
return G__9986__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9986.cljs$core$IFn$_invoke$arity$0 = G__9986__0;
G__9986.cljs$core$IFn$_invoke$arity$1 = G__9986__1;
G__9986.cljs$core$IFn$_invoke$arity$2 = G__9986__2;
return G__9986;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4651__auto___9987 = size;
var i_9988 = (0);
while(true){
if((i_9988 < n__4651__auto___9987)){
if(cljs.core.truth_((function (){var G__9984 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9988);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9984) : pred.call(null,G__9984));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9988));
} else {
}

var G__9989 = (i_9988 + (1));
i_9988 = G__9989;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__9985 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9985) : pred.call(null,G__9985));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__9996 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__9996) : branch_QMARK_.call(null,G__9996));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__9997 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__9997) : children.call(null,G__9997));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__9998_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__9998_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__10001 = to;
if(G__10001){
var bit__4438__auto__ = (G__10001.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4438__auto__) || (G__10001.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__10002 = to;
if(G__10002){
var bit__4438__auto__ = (G__10002.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4438__auto__) || (G__10002.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__10004 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10004) : f.call(null,G__10004));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__10005__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__10005 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__10006__i = 0, G__10006__a = new Array(arguments.length -  4);
while (G__10006__i < G__10006__a.length) {G__10006__a[G__10006__i] = arguments[G__10006__i + 4]; ++G__10006__i;}
  colls = new cljs.core.IndexedSeq(G__10006__a,0);
} 
return G__10005__delegate.call(this,f,c1,c2,c3,colls);};
G__10005.cljs$lang$maxFixedArity = 4;
G__10005.cljs$lang$applyTo = (function (arglist__10007){
var f = cljs.core.first(arglist__10007);
arglist__10007 = cljs.core.next(arglist__10007);
var c1 = cljs.core.first(arglist__10007);
arglist__10007 = cljs.core.next(arglist__10007);
var c2 = cljs.core.first(arglist__10007);
arglist__10007 = cljs.core.next(arglist__10007);
var c3 = cljs.core.first(arglist__10007);
var colls = cljs.core.rest(arglist__10007);
return G__10005__delegate(f,c1,c2,c3,colls);
});
G__10005.cljs$core$IFn$_invoke$arity$variadic = G__10005__delegate;
return G__10005;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__10008 = null;
if (arguments.length > 4) {
var G__10009__i = 0, G__10009__a = new Array(arguments.length -  4);
while (G__10009__i < G__10009__a.length) {G__10009__a[G__10009__i] = arguments[G__10009__i + 4]; ++G__10009__i;}
G__10008 = new cljs.core.IndexedSeq(G__10009__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__10008);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__10011 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10011) : pred.call(null,G__10011));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__10026 = m__$1;
if(G__10026){
var bit__4445__auto__ = (G__10026.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4445__auto__) || (G__10026.cljs$core$ILookup$)){
return true;
} else {
if((!G__10026.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__10026);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__10026);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__10027 = sentinel;
var G__10028 = m__$2;
var G__10029 = cljs.core.next(ks__$1);
sentinel = G__10027;
m__$1 = G__10028;
ks__$1 = G__10029;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__10030,v){
var vec__10035 = p__10030;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10035,(0),null);
var ks = cljs.core.nthnext(vec__10035,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__10036,f){
var vec__10074 = p__10036;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10074,(0),null);
var ks = cljs.core.nthnext(vec__10074,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10075 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10075) : f.call(null,G__10075));
})());
}
});
var update_in__4 = (function (m,p__10037,f,a){
var vec__10076 = p__10037;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10076,(0),null);
var ks = cljs.core.nthnext(vec__10076,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10077 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10078 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10077,G__10078) : f.call(null,G__10077,G__10078));
})());
}
});
var update_in__5 = (function (m,p__10038,f,a,b){
var vec__10079 = p__10038;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10079,(0),null);
var ks = cljs.core.nthnext(vec__10079,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10080 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10081 = a;
var G__10082 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10080,G__10081,G__10082) : f.call(null,G__10080,G__10081,G__10082));
})());
}
});
var update_in__6 = (function (m,p__10039,f,a,b,c){
var vec__10083 = p__10039;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10083,(0),null);
var ks = cljs.core.nthnext(vec__10083,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10084 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10085 = a;
var G__10086 = b;
var G__10087 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10084,G__10085,G__10086,G__10087) : f.call(null,G__10084,G__10085,G__10086,G__10087));
})());
}
});
var update_in__7 = (function() { 
var G__10089__delegate = function (m,p__10040,f,a,b,c,args){
var vec__10088 = p__10040;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10088,(0),null);
var ks = cljs.core.nthnext(vec__10088,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__10089 = function (m,p__10040,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__10090__i = 0, G__10090__a = new Array(arguments.length -  6);
while (G__10090__i < G__10090__a.length) {G__10090__a[G__10090__i] = arguments[G__10090__i + 6]; ++G__10090__i;}
  args = new cljs.core.IndexedSeq(G__10090__a,0);
} 
return G__10089__delegate.call(this,m,p__10040,f,a,b,c,args);};
G__10089.cljs$lang$maxFixedArity = 6;
G__10089.cljs$lang$applyTo = (function (arglist__10091){
var m = cljs.core.first(arglist__10091);
arglist__10091 = cljs.core.next(arglist__10091);
var p__10040 = cljs.core.first(arglist__10091);
arglist__10091 = cljs.core.next(arglist__10091);
var f = cljs.core.first(arglist__10091);
arglist__10091 = cljs.core.next(arglist__10091);
var a = cljs.core.first(arglist__10091);
arglist__10091 = cljs.core.next(arglist__10091);
var b = cljs.core.first(arglist__10091);
arglist__10091 = cljs.core.next(arglist__10091);
var c = cljs.core.first(arglist__10091);
var args = cljs.core.rest(arglist__10091);
return G__10089__delegate(m,p__10040,f,a,b,c,args);
});
G__10089.cljs$core$IFn$_invoke$arity$variadic = G__10089__delegate;
return G__10089;
})()
;
update_in = function(m,p__10040,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__10040,f);
case 4:
return update_in__4.call(this,m,p__10040,f,a);
case 5:
return update_in__5.call(this,m,p__10040,f,a,b);
case 6:
return update_in__6.call(this,m,p__10040,f,a,b,c);
default:
var G__10092 = null;
if (arguments.length > 6) {
var G__10093__i = 0, G__10093__a = new Array(arguments.length -  6);
while (G__10093__i < G__10093__a.length) {G__10093__a[G__10093__i] = arguments[G__10093__i + 6]; ++G__10093__i;}
G__10092 = new cljs.core.IndexedSeq(G__10093__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__10040,f,a,b,c, G__10092);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10104 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10104) : f.call(null,G__10104));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10105 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10106 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10105,G__10106) : f.call(null,G__10105,G__10106));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10107 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10108 = x;
var G__10109 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10107,G__10108,G__10109) : f.call(null,G__10107,G__10108,G__10109));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10110 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10111 = x;
var G__10112 = y;
var G__10113 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10110,G__10111,G__10112,G__10113) : f.call(null,G__10110,G__10111,G__10112,G__10113));
})());
});
var update__7 = (function() { 
var G__10114__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__10114 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__10115__i = 0, G__10115__a = new Array(arguments.length -  6);
while (G__10115__i < G__10115__a.length) {G__10115__a[G__10115__i] = arguments[G__10115__i + 6]; ++G__10115__i;}
  more = new cljs.core.IndexedSeq(G__10115__a,0);
} 
return G__10114__delegate.call(this,m,k,f,x,y,z,more);};
G__10114.cljs$lang$maxFixedArity = 6;
G__10114.cljs$lang$applyTo = (function (arglist__10116){
var m = cljs.core.first(arglist__10116);
arglist__10116 = cljs.core.next(arglist__10116);
var k = cljs.core.first(arglist__10116);
arglist__10116 = cljs.core.next(arglist__10116);
var f = cljs.core.first(arglist__10116);
arglist__10116 = cljs.core.next(arglist__10116);
var x = cljs.core.first(arglist__10116);
arglist__10116 = cljs.core.next(arglist__10116);
var y = cljs.core.first(arglist__10116);
arglist__10116 = cljs.core.next(arglist__10116);
var z = cljs.core.first(arglist__10116);
var more = cljs.core.rest(arglist__10116);
return G__10114__delegate(m,k,f,x,y,z,more);
});
G__10114.cljs$core$IFn$_invoke$arity$variadic = G__10114__delegate;
return G__10114;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__10117 = null;
if (arguments.length > 6) {
var G__10118__i = 0, G__10118__a = new Array(arguments.length -  6);
while (G__10118__i < G__10118__a.length) {G__10118__a[G__10118__i] = arguments[G__10118__i + 6]; ++G__10118__i;}
G__10117 = new cljs.core.IndexedSeq(G__10118__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__10117);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__10119 = (ll - (5));
var G__10120 = r;
ll = G__10119;
ret = G__10120;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10125 = cljs.core.pv_aget(node,(0));
var G__10126 = (level - (5));
node = G__10125;
level = G__10126;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10127 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__10128 = (level - (5));
node = G__10127;
level = G__10128;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10138 = init__$2;
var G__10139 = (j + i);
var G__10140 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10138,G__10139,G__10140) : f.call(null,G__10138,G__10139,G__10140));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10151 = (j + (1));
var G__10152 = init__$3;
j = G__10151;
init__$2 = G__10152;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10141 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10141) : cljs.core.deref.call(null,G__10141));
} else {
var G__10153 = (i + len);
var G__10154 = init__$2;
i = G__10153;
init__$1 = G__10154;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__10142 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__10142) : cljs.core.tv_editable_root.call(null,G__10142));
})(),(function (){var G__10143 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__10143) : cljs.core.tv_editable_tail.call(null,G__10143));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10144 = init__$2;
var G__10145 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10144,G__10145) : f.call(null,G__10144,G__10145));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10155 = (j + (1));
var G__10156 = init__$3;
j = G__10155;
init__$2 = G__10156;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10146 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10146) : cljs.core.deref.call(null,G__10146));
} else {
var G__10157 = (i + len);
var G__10158 = init__$2;
i = G__10157;
init__$1 = G__10158;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__10147 = coll__$1;
var G__10148 = cljs.core.first_array_for_longvec(coll__$1);
var G__10149 = (0);
var G__10150 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10147,G__10148,G__10149,G__10150) : cljs.core.chunked_seq.call(null,G__10147,G__10148,G__10149,G__10150));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4651__auto___10159 = len;
var i_10160 = (0);
while(true){
if((i_10160 < n__4651__auto___10159)){
(new_tail[i_10160] = (self__.tail[i_10160]));

var G__10161 = (i_10160 + (1));
i_10160 = G__10161;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__10162 = null;
var G__10162__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10162__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10162 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10162__2.call(this,self__,k);
case 3:
return G__10162__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10162.cljs$core$IFn$_invoke$arity$2 = G__10162__2;
G__10162.cljs$core$IFn$_invoke$arity$3 = G__10162__3;
return G__10162;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args10137){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10137)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__10163 = (i + (1));
var G__10164 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__10163;
out = G__10164;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10165__i = 0, G__10165__a = new Array(arguments.length -  0);
while (G__10165__i < G__10165__a.length) {G__10165__a[G__10165__i] = arguments[G__10165__i + 0]; ++G__10165__i;}
  args = new cljs.core.IndexedSeq(G__10165__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__10166){
var args = cljs.core.seq(arglist__10166);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10167 = self__.vec;
var G__10168 = self__.node;
var G__10169 = self__.i;
var G__10170 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10167,G__10168,G__10169,G__10170) : cljs.core.chunked_seq.call(null,G__10167,G__10168,G__10169,G__10170));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__10171 = self__.vec;
var G__10172 = (self__.i + self__.off);
var G__10173 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10171,G__10172,G__10173) : cljs.core.subvec.call(null,G__10171,G__10172,G__10173));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__10174 = self__.vec;
var G__10175 = (self__.i + self__.off);
var G__10176 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10174,G__10175,G__10176) : cljs.core.subvec.call(null,G__10174,G__10175,G__10176));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10177 = self__.vec;
var G__10178 = self__.node;
var G__10179 = self__.i;
var G__10180 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10177,G__10178,G__10179,G__10180) : cljs.core.chunked_seq.call(null,G__10177,G__10178,G__10179,G__10180));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10181 = self__.vec;
var G__10182 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10183 = end;
var G__10184 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10181,G__10182,G__10183,G__10184) : cljs.core.chunked_seq.call(null,G__10181,G__10182,G__10183,G__10184));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__10185 = self__.vec;
var G__10186 = self__.node;
var G__10187 = self__.i;
var G__10188 = self__.off;
var G__10189 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__10185,G__10186,G__10187,G__10188,G__10189) : cljs.core.chunked_seq.call(null,G__10185,G__10186,G__10187,G__10188,G__10189));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10190 = self__.vec;
var G__10191 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10192 = end;
var G__10193 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10190,G__10191,G__10192,G__10193) : cljs.core.chunked_seq.call(null,G__10190,G__10191,G__10192,G__10193));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__10195 = self__.meta;
var G__10196 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__10197 = self__.start;
var G__10198 = (function (){var x__4081__auto__ = self__.end;
var y__4082__auto__ = (v_pos + (1));
return ((x__4081__auto__ > y__4082__auto__) ? x__4081__auto__ : y__4082__auto__);
})();
var G__10199 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10195,G__10196,G__10197,G__10198,G__10199) : cljs.core.build_subvec.call(null,G__10195,G__10196,G__10197,G__10198,G__10199));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__10200 = self__.meta;
var G__10201 = self__.v;
var G__10202 = self__.start;
var G__10203 = (self__.end - (1));
var G__10204 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10200,G__10201,G__10202,G__10203,G__10204) : cljs.core.build_subvec.call(null,G__10200,G__10201,G__10202,G__10203,G__10204));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__10206 = meta__$1;
var G__10207 = self__.v;
var G__10208 = self__.start;
var G__10209 = self__.end;
var G__10210 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10206,G__10207,G__10208,G__10209,G__10210) : cljs.core.build_subvec.call(null,G__10206,G__10207,G__10208,G__10209,G__10210));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10211 = self__.meta;
var G__10212 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__10213 = self__.start;
var G__10214 = (self__.end + (1));
var G__10215 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10211,G__10212,G__10213,G__10214,G__10215) : cljs.core.build_subvec.call(null,G__10211,G__10212,G__10213,G__10214,G__10215));
});

cljs.core.Subvec.prototype.call = (function() {
var G__10216 = null;
var G__10216__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10216__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10216 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10216__2.call(this,self__,k);
case 3:
return G__10216__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10216.cljs$core$IFn$_invoke$arity$2 = G__10216__2;
G__10216.cljs$core$IFn$_invoke$arity$3 = G__10216__3;
return G__10216;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args10194){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10194)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__10217 = meta;
var G__10218 = v.v;
var G__10219 = (v.start + start);
var G__10220 = (v.start + end);
var G__10221 = __hash;
meta = G__10217;
v = G__10218;
start = G__10219;
end = G__10220;
__hash = G__10221;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj10228 = {};
return obj10228;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__10236 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__10237 = (level - (5));
node = G__10236;
level = G__10237;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__10241 = null;
var G__10241__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10241__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10241 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10241__2.call(this,self__,k);
case 3:
return G__10241__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10241.cljs$core$IFn$_invoke$arity$2 = G__10241__2;
G__10241.cljs$core$IFn$_invoke$arity$3 = G__10241__3;
return G__10241;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args10238){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10238)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3764__auto__ = self__.front;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3764__auto__ = self__.rear;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__10242 = (i + incr);
i = G__10242;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__10243 = (i + (1));
var G__10244 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__10243;
out = G__10244;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj10248 = {};
return obj10248;
})();
var l = ks.length;
var i_10249 = (0);
while(true){
if((i_10249 < l)){
var k_10250 = (ks[i_10249]);
(new_obj[k_10250] = (obj[k_10250]));

var G__10251 = (i_10249 + (1));
i_10249 = G__10251;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3752__auto__ = (function (){var G__10255 = k;
return goog.isString(G__10255);
})();
if(cljs.core.truth_(and__3752__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3752__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__10256 = init__$1;
var G__10257 = k;
var G__10258 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10256,G__10257,G__10258) : f.call(null,G__10256,G__10257,G__10258));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10259 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10259) : cljs.core.deref.call(null,G__10259));
} else {
var G__10265 = cljs.core.rest(keys__$1);
var G__10266 = init__$2;
keys__$1 = G__10265;
init__$1 = G__10266;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3752__auto__ = (function (){var G__10261 = k;
return goog.isString(G__10261);
})();
if(cljs.core.truth_(and__3752__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3752__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__10262 = k;
return goog.isString(G__10262);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3752__auto__ = (function (){var G__10264 = k;
return goog.isString(G__10264);
})();
if(cljs.core.truth_(and__3752__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3752__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__10252_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__10252_SHARP_,(self__.strobj[p1__10252_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__10267 = null;
var G__10267__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10267__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10267 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10267__2.call(this,self__,k);
case 3:
return G__10267__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10267.cljs$core$IFn$_invoke$arity$2 = G__10267__2;
G__10267.cljs$core$IFn$_invoke$arity$3 = G__10267__3;
return G__10267;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args10253){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10253)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj10269 = {};
return obj10269;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__10270 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10270,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10270,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__10271 = (i + (2));
i = G__10271;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__10272 = (i + (2));
i = G__10272;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__10273 = (i + (2));
i = G__10273;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__10274 = (i + (2));
i = G__10274;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__10275 = (i + (2));
i = G__10275;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3764__auto__ = (function (){var G__10279 = k;
return goog.isString(G__10279);
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_10280 = (0);
while(true){
if((i_10280 < l)){
(narr[i_10280] = (arr[i_10280]));

var G__10281 = (i_10280 + (1));
i_10280 = G__10281;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10283 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10283) : cljs.core.keys.call(null,G__10283));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10284 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10284) : cljs.core.vals.call(null,G__10284));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10285 = cljs.core.seq(coll);
var chunk__10286 = null;
var count__10287 = (0);
var i__10288 = (0);
while(true){
if((i__10288 < count__10287)){
var vec__10289 = chunk__10286.cljs$core$IIndexed$_nth$arity$2(null,i__10288);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10289,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10289,(1),null);
var G__10290_10303 = v;
var G__10291_10304 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10290_10303,G__10291_10304) : f.call(null,G__10290_10303,G__10291_10304));

var G__10305 = seq__10285;
var G__10306 = chunk__10286;
var G__10307 = count__10287;
var G__10308 = (i__10288 + (1));
seq__10285 = G__10305;
chunk__10286 = G__10306;
count__10287 = G__10307;
i__10288 = G__10308;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10285);
if(temp__4126__auto__){
var seq__10285__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10285__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__10285__$1);
var G__10309 = cljs.core.chunk_rest(seq__10285__$1);
var G__10310 = c__4551__auto__;
var G__10311 = cljs.core.count(c__4551__auto__);
var G__10312 = (0);
seq__10285 = G__10309;
chunk__10286 = G__10310;
count__10287 = G__10311;
i__10288 = G__10312;
continue;
} else {
var vec__10292 = cljs.core.first(seq__10285__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10292,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10292,(1),null);
var G__10293_10313 = v;
var G__10294_10314 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10293_10313,G__10294_10314) : f.call(null,G__10293_10313,G__10294_10314));

var G__10315 = cljs.core.next(seq__10285__$1);
var G__10316 = null;
var G__10317 = (0);
var G__10318 = (0);
seq__10285 = G__10315;
chunk__10286 = G__10316;
count__10287 = G__10317;
i__10288 = G__10318;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__10295 = init__$1;
var G__10296 = (self__.arr[i]);
var G__10297 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10295,G__10296,G__10297) : f.call(null,G__10295,G__10296,G__10297));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10298 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10298) : cljs.core.deref.call(null,G__10298));
} else {
var G__10319 = (i + (2));
var G__10320 = init__$2;
i = G__10319;
init__$1 = G__10320;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__10299 = other;
if(G__10299){
var bit__4438__auto__ = (G__10299.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4438__auto__) || (G__10299.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__10321 = (i + (2));
i = G__10321;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj10301 = {};
return obj10301;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__10322 = (s + (2));
var G__10323 = d;
s = G__10322;
d = G__10323;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__10324 = (s + (2));
var G__10325 = (d + (2));
s = G__10324;
d = G__10325;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__10302 = cljs.core.aclone(self__.arr);
(G__10302[(idx + (1))] = v);

return G__10302;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10326 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10327 = cljs.core.next(es);
ret = G__10326;
es = G__10327;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__10328 = null;
var G__10328__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10328__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10328 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10328__2.call(this,self__,k);
case 3:
return G__10328__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10328.cljs$core$IFn$_invoke$arity$2 = G__10328__2;
G__10328.cljs$core$IFn$_invoke$arity$3 = G__10328__3;
return G__10328;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args10282){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10282)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10329 = (i + (2));
var G__10330 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10329;
ret = G__10330;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__10331_10339 = self__.arr;
G__10331_10339.pop();

G__10331_10339.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__10332 = self__.len;
var G__10333 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__10332,G__10333) : cljs.core.array__GT_transient_hash_map.call(null,G__10332,G__10333));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__10334 = o;
if(G__10334){
var bit__4445__auto__ = (G__10334.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4445__auto__) || (G__10334.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10334.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10334);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10334);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__10335 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10335) : cljs.core.key.call(null,G__10335));
})(),(function (){var G__10336 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10336) : cljs.core.val.call(null,G__10336));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10340 = cljs.core.next(es);
var G__10341 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__10337 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10337) : cljs.core.key.call(null,G__10337));
})(),(function (){var G__10338 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10338) : cljs.core.val.call(null,G__10338));
})());
es = G__10340;
tcoll__$2 = G__10341;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__10342 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__10343 = (i + (2));
out = G__10342;
i = G__10343;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__10346 = cljs.core.aclone(arr);
(G__10346[i] = a);

return G__10346;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__10347 = cljs.core.aclone(arr);
(G__10347[i] = a);

(G__10347[j] = b);

return G__10347;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__10352 = init__$1;
var G__10353 = k;
var G__10354 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10352,G__10353,G__10354) : f.call(null,G__10352,G__10353,G__10354));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10355 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10355) : cljs.core.deref.call(null,G__10355));
} else {
var G__10356 = (i + (2));
var G__10357 = init__$2;
i = G__10356;
init__$1 = G__10357;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10358 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10358) : cljs.core.create_inode_seq.call(null,G__10358));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10372 = (0);
var j_10373 = (0);
while(true){
if((i_10372 < (32))){
if((((self__.bitmap >>> i_10372) & (1)) === (0))){
var G__10374 = (i_10372 + (1));
var G__10375 = j_10373;
i_10372 = G__10374;
j_10373 = G__10375;
continue;
} else {
(nodes[i_10372] = ((!(((self__.arr[j_10373]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_10373])),(self__.arr[j_10373]),(self__.arr[(j_10373 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10373 + (1))])));

var G__10376 = (i_10372 + (1));
var G__10377 = (j_10373 + (2));
i_10372 = G__10376;
j_10373 = G__10377;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10359 = edit__$1;
var G__10360 = (shift + (5));
var G__10361 = key_or_nil;
var G__10362 = val_or_node;
var G__10363 = hash;
var G__10364 = key;
var G__10365 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__10359,G__10360,G__10361,G__10362,G__10363,G__10364,G__10365) : cljs.core.create_node.call(null,G__10359,G__10360,G__10361,G__10362,G__10363,G__10364,G__10365));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10378 = (0);
var j_10379 = (0);
while(true){
if((i_10378 < (32))){
if((((self__.bitmap >>> i_10378) & (1)) === (0))){
var G__10380 = (i_10378 + (1));
var G__10381 = j_10379;
i_10378 = G__10380;
j_10379 = G__10381;
continue;
} else {
(nodes[i_10378] = ((!(((self__.arr[j_10379]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_10379])),(self__.arr[j_10379]),(self__.arr[(j_10379 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10379 + (1))])));

var G__10382 = (i_10378 + (1));
var G__10383 = (j_10379 + (2));
i_10378 = G__10382;
j_10379 = G__10383;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10366 = (shift + (5));
var G__10367 = key_or_nil;
var G__10368 = val_or_node;
var G__10369 = hash;
var G__10370 = key;
var G__10371 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__10366,G__10367,G__10368,G__10369,G__10370,G__10371) : cljs.core.create_node.call(null,G__10366,G__10367,G__10368,G__10369,G__10370,G__10371));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__10384 = (i + (1));
var G__10385 = (j + (2));
var G__10386 = (bitmap | ((1) << i));
i = G__10384;
j = G__10385;
bitmap = G__10386;
continue;
} else {
var G__10387 = (i + (1));
var G__10388 = j;
var G__10389 = bitmap;
i = G__10387;
j = G__10388;
bitmap = G__10389;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10390 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__10390) : cljs.core.create_array_node_seq.call(null,G__10390));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10391 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10391) : cljs.core.deref.call(null,G__10391));
} else {
var G__10392 = (i + (1));
var G__10393 = init__$2;
i = G__10392;
init__$1 = G__10393;
continue;
}
} else {
var G__10394 = (i + (1));
var G__10395 = init__$1;
i = G__10394;
init__$1 = G__10395;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__10396 = (i + (2));
i = G__10396;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10397 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10397) : cljs.core.create_inode_seq.call(null,G__10397));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__10398 = self__.nodes;
var G__10399 = (self__.i + (2));
var G__10400 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10398,G__10399,G__10400) : cljs.core.create_inode_seq.call(null,G__10398,G__10399,G__10400));
} else {
var G__10401 = self__.nodes;
var G__10402 = self__.i;
var G__10403 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10401,G__10402,G__10403) : cljs.core.create_inode_seq.call(null,G__10401,G__10402,G__10403));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__10407 = (j + (2));
j = G__10407;
continue;
}
} else {
var G__10408 = (j + (2));
j = G__10408;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__10409 = null;
var G__10410 = self__.nodes;
var G__10411 = self__.i;
var G__10412 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__10409,G__10410,G__10411,G__10412) : cljs.core.create_array_node_seq.call(null,G__10409,G__10410,G__10411,G__10412));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__10417 = (j + (1));
j = G__10417;
continue;
}
} else {
var G__10418 = (j + (1));
j = G__10418;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10420 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10420) : cljs.core.keys.call(null,G__10420));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10421 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10421) : cljs.core.vals.call(null,G__10421));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10422 = cljs.core.seq(coll);
var chunk__10423 = null;
var count__10424 = (0);
var i__10425 = (0);
while(true){
if((i__10425 < count__10424)){
var vec__10426 = chunk__10423.cljs$core$IIndexed$_nth$arity$2(null,i__10425);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10426,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10426,(1),null);
var G__10427_10438 = v;
var G__10428_10439 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10427_10438,G__10428_10439) : f.call(null,G__10427_10438,G__10428_10439));

var G__10440 = seq__10422;
var G__10441 = chunk__10423;
var G__10442 = count__10424;
var G__10443 = (i__10425 + (1));
seq__10422 = G__10440;
chunk__10423 = G__10441;
count__10424 = G__10442;
i__10425 = G__10443;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10422);
if(temp__4126__auto__){
var seq__10422__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10422__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__10422__$1);
var G__10444 = cljs.core.chunk_rest(seq__10422__$1);
var G__10445 = c__4551__auto__;
var G__10446 = cljs.core.count(c__4551__auto__);
var G__10447 = (0);
seq__10422 = G__10444;
chunk__10423 = G__10445;
count__10424 = G__10446;
i__10425 = G__10447;
continue;
} else {
var vec__10429 = cljs.core.first(seq__10422__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10429,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10429,(1),null);
var G__10430_10448 = v;
var G__10431_10449 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10430_10448,G__10431_10449) : f.call(null,G__10430_10448,G__10431_10449));

var G__10450 = cljs.core.next(seq__10422__$1);
var G__10451 = null;
var G__10452 = (0);
var G__10453 = (0);
seq__10422 = G__10450;
chunk__10423 = G__10451;
count__10424 = G__10452;
i__10425 = G__10453;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__10432 = init;
var G__10433 = null;
var G__10434 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10432,G__10433,G__10434) : f.call(null,G__10432,G__10433,G__10434));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10435 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10435) : cljs.core.deref.call(null,G__10435));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj10437 = {};
return obj10437;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10454 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10455 = cljs.core.next(es);
ret = G__10454;
es = G__10455;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__10456 = null;
var G__10456__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10456__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10456 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10456__2.call(this,self__,k);
case 3:
return G__10456__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10456.cljs$core$IFn$_invoke$arity$2 = G__10456__2;
G__10456.cljs$core$IFn$_invoke$arity$3 = G__10456__3;
return G__10456;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args10419){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10419)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10457 = (i + (2));
var G__10458 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10457;
ret = G__10458;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10459 = (i + (1));
var G__10460 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__10459;
out = G__10460;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__10461 = o;
if(G__10461){
var bit__4445__auto__ = (G__10461.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4445__auto__) || (G__10461.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10461.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10461);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10461);
}
})()){
return tcoll.assoc_BANG_((function (){var G__10462 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10462) : cljs.core.key.call(null,G__10462));
})(),(function (){var G__10463 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10463) : cljs.core.val.call(null,G__10463));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10466 = cljs.core.next(es);
var G__10467 = tcoll__$1.assoc_BANG_((function (){var G__10464 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10464) : cljs.core.key.call(null,G__10464));
})(),(function (){var G__10465 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10465) : cljs.core.val.call(null,G__10465));
})());
es = G__10466;
tcoll__$1 = G__10467;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__10468 = ((ascending_QMARK_)?t.left:t.right);
var G__10469 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__10468;
stack__$1 = G__10469;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10482 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10482) : cljs.core.deref.call(null,G__10482));
} else {
var init__$2 = (function (){var G__10483 = init__$1;
var G__10484 = node.key;
var G__10485 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10483,G__10484,G__10485) : f.call(null,G__10483,G__10484,G__10485));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10486 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10486) : cljs.core.deref.call(null,G__10486));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__10487 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10487) : cljs.core.deref.call(null,G__10487));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__10489 = null;
var G__10489__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10489__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10489 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10489__2.call(this,self__,k);
case 3:
return G__10489__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10489.cljs$core$IFn$_invoke$arity$2 = G__10489__2;
G__10489.cljs$core$IFn$_invoke$arity$3 = G__10489__3;
return G__10489;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args10488){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10488)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__10491 = null;
var G__10491__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10491__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10491 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10491__2.call(this,self__,k);
case 3:
return G__10491__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10491.cljs$core$IFn$_invoke$arity$2 = G__10491__2;
G__10491.cljs$core$IFn$_invoke$arity$3 = G__10491__3;
return G__10491;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args10490){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10490)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__10504 = k;
var G__10505 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10504,G__10505) : comp.call(null,G__10504,G__10505));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__10524 = k;
var G__10525 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10524,G__10525) : comp.call(null,G__10524,G__10525));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__10536 = k;
var G__10537 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10536,G__10537) : comp.call(null,G__10536,G__10537));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10539 = cljs.core.seq(coll);
var chunk__10540 = null;
var count__10541 = (0);
var i__10542 = (0);
while(true){
if((i__10542 < count__10541)){
var vec__10543 = chunk__10540.cljs$core$IIndexed$_nth$arity$2(null,i__10542);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10543,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10543,(1),null);
var G__10544_10556 = v;
var G__10545_10557 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10544_10556,G__10545_10557) : f.call(null,G__10544_10556,G__10545_10557));

var G__10558 = seq__10539;
var G__10559 = chunk__10540;
var G__10560 = count__10541;
var G__10561 = (i__10542 + (1));
seq__10539 = G__10558;
chunk__10540 = G__10559;
count__10541 = G__10560;
i__10542 = G__10561;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10539);
if(temp__4126__auto__){
var seq__10539__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10539__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__10539__$1);
var G__10562 = cljs.core.chunk_rest(seq__10539__$1);
var G__10563 = c__4551__auto__;
var G__10564 = cljs.core.count(c__4551__auto__);
var G__10565 = (0);
seq__10539 = G__10562;
chunk__10540 = G__10563;
count__10541 = G__10564;
i__10542 = G__10565;
continue;
} else {
var vec__10546 = cljs.core.first(seq__10539__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10546,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10546,(1),null);
var G__10547_10566 = v;
var G__10548_10567 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10547_10566,G__10548_10567) : f.call(null,G__10547_10566,G__10548_10567));

var G__10568 = cljs.core.next(seq__10539__$1);
var G__10569 = null;
var G__10570 = (0);
var G__10571 = (0);
seq__10539 = G__10568;
chunk__10540 = G__10569;
count__10541 = G__10570;
i__10542 = G__10571;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10549 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10549) : cljs.core.keys.call(null,G__10549));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10550 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10550) : cljs.core.vals.call(null,G__10550));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10551 = k;
var G__10552 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10551,G__10552) : self__.comp.call(null,G__10551,G__10552));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__10572 = t.left;
t = G__10572;
continue;
} else {
var G__10573 = t.right;
t = G__10573;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10574 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10575 = cljs.core.next(es);
ret = G__10574;
es = G__10575;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__10576 = null;
var G__10576__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10576__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10576 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10576__2.call(this,self__,k);
case 3:
return G__10576__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10576.cljs$core$IFn$_invoke$arity$2 = G__10576__2;
G__10576.cljs$core$IFn$_invoke$arity$3 = G__10576__3;
return G__10576;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args10538){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10538)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10553 = k;
var G__10554 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10553,G__10554) : self__.comp.call(null,G__10553,G__10554));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__10577 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10578 = t.left;
stack = G__10577;
t = G__10578;
continue;
} else {
var G__10579 = stack;
var G__10580 = t.right;
stack = G__10579;
t = G__10580;
continue;
}
} else {
if((c > (0))){
var G__10581 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10582 = t.right;
stack = G__10581;
t = G__10582;
continue;
} else {
var G__10583 = stack;
var G__10584 = t.left;
stack = G__10583;
t = G__10584;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__10555 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10555) : cljs.core.key.call(null,G__10555));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__10585 = cljs.core.nnext(in$);
var G__10586 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10585;
out = G__10586;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10587__i = 0, G__10587__a = new Array(arguments.length -  0);
while (G__10587__i < G__10587__a.length) {G__10587__a[G__10587__i] = arguments[G__10587__i + 0]; ++G__10587__i;}
  keyvals = new cljs.core.IndexedSeq(G__10587__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__10588){
var keyvals = cljs.core.seq(arglist__10588);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10589__i = 0, G__10589__a = new Array(arguments.length -  0);
while (G__10589__i < G__10589__a.length) {G__10589__a[G__10589__i] = arguments[G__10589__i + 0]; ++G__10589__i;}
  keyvals = new cljs.core.IndexedSeq(G__10589__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__10590){
var keyvals = cljs.core.seq(arglist__10590);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj10594 = {};
return obj10594;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__10595 = cljs.core.nnext(kvs);
kvs = G__10595;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10596__i = 0, G__10596__a = new Array(arguments.length -  0);
while (G__10596__i < G__10596__a.length) {G__10596__a[G__10596__i] = arguments[G__10596__i + 0]; ++G__10596__i;}
  keyvals = new cljs.core.IndexedSeq(G__10596__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__10597){
var keyvals = cljs.core.seq(arglist__10597);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__10598 = cljs.core.nnext(in$);
var G__10599 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10598;
out = G__10599;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10600__i = 0, G__10600__a = new Array(arguments.length -  0);
while (G__10600__i < G__10600__a.length) {G__10600__a[G__10600__i] = arguments[G__10600__i + 0]; ++G__10600__i;}
  keyvals = new cljs.core.IndexedSeq(G__10600__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__10601){
var keyvals = cljs.core.seq(arglist__10601);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__10602 = cljs.core.nnext(in$);
var G__10603 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10602;
out = G__10603;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__10604__i = 0, G__10604__a = new Array(arguments.length -  1);
while (G__10604__i < G__10604__a.length) {G__10604__a[G__10604__i] = arguments[G__10604__i + 1]; ++G__10604__i;}
  keyvals = new cljs.core.IndexedSeq(G__10604__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__10605){
var comparator = cljs.core.first(arglist__10605);
var keyvals = cljs.core.rest(arglist__10605);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10606 = self__.mseq;
if(G__10606){
var bit__4445__auto__ = (G__10606.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4445__auto__) || (G__10606.cljs$core$INext$)){
return true;
} else {
if((!G__10606.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10606);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10606);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10607 = self__.mseq;
if(G__10607){
var bit__4445__auto__ = (G__10607.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4445__auto__) || (G__10607.cljs$core$INext$)){
return true;
} else {
if((!G__10607.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10607);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10607);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10608 = self__.mseq;
if(G__10608){
var bit__4445__auto__ = (G__10608.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4445__auto__) || (G__10608.cljs$core$INext$)){
return true;
} else {
if((!G__10608.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10608);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10608);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10609 = self__.mseq;
if(G__10609){
var bit__4445__auto__ = (G__10609.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4445__auto__) || (G__10609.cljs$core$INext$)){
return true;
} else {
if((!G__10609.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10609);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10609);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__10610_SHARP_,p2__10611_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3764__auto__ = p1__10610_SHARP_;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__10611_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__10612__i = 0, G__10612__a = new Array(arguments.length -  0);
while (G__10612__i < G__10612__a.length) {G__10612__a[G__10612__i] = arguments[G__10612__i + 0]; ++G__10612__i;}
  maps = new cljs.core.IndexedSeq(G__10612__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__10613){
var maps = cljs.core.seq(arglist__10613);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10616 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10617 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10616,G__10617) : f.call(null,G__10616,G__10617));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3764__auto__ = m1;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__10618__i = 0, G__10618__a = new Array(arguments.length -  1);
while (G__10618__i < G__10618__a.length) {G__10618__a[G__10618__i] = arguments[G__10618__i + 1]; ++G__10618__i;}
  maps = new cljs.core.IndexedSeq(G__10618__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__10619){
var f = cljs.core.first(arglist__10619);
var maps = cljs.core.rest(arglist__10619);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__10620 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__10621 = cljs.core.next(keys);
ret = G__10620;
keys = G__10621;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10624 = cljs.core.seq(coll);
var chunk__10625 = null;
var count__10626 = (0);
var i__10627 = (0);
while(true){
if((i__10627 < count__10626)){
var vec__10628 = chunk__10625.cljs$core$IIndexed$_nth$arity$2(null,i__10627);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10628,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10628,(1),null);
var G__10629_10634 = v;
var G__10630_10635 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10629_10634,G__10630_10635) : f.call(null,G__10629_10634,G__10630_10635));

var G__10636 = seq__10624;
var G__10637 = chunk__10625;
var G__10638 = count__10626;
var G__10639 = (i__10627 + (1));
seq__10624 = G__10636;
chunk__10625 = G__10637;
count__10626 = G__10638;
i__10627 = G__10639;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10624);
if(temp__4126__auto__){
var seq__10624__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10624__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__10624__$1);
var G__10640 = cljs.core.chunk_rest(seq__10624__$1);
var G__10641 = c__4551__auto__;
var G__10642 = cljs.core.count(c__4551__auto__);
var G__10643 = (0);
seq__10624 = G__10640;
chunk__10625 = G__10641;
count__10626 = G__10642;
i__10627 = G__10643;
continue;
} else {
var vec__10631 = cljs.core.first(seq__10624__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10631,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10631,(1),null);
var G__10632_10644 = v;
var G__10633_10645 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10632_10644,G__10633_10645) : f.call(null,G__10632_10644,G__10633_10645));

var G__10646 = cljs.core.next(seq__10624__$1);
var G__10647 = null;
var G__10648 = (0);
var G__10649 = (0);
seq__10624 = G__10646;
chunk__10625 = G__10647;
count__10626 = G__10648;
i__10627 = G__10649;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10622_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10622_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__10650 = null;
var G__10650__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10650__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10650 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10650__2.call(this,self__,k);
case 3:
return G__10650__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10650.cljs$core$IFn$_invoke$arity$2 = G__10650__2;
G__10650.cljs$core$IFn$_invoke$arity$3 = G__10650__3;
return G__10650;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args10623){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10623)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10651 = (i + (1));
var G__10652 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__10651;
out = G__10652;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__10653 = (i + (1));
var G__10654 = cljs.core._conj_BANG_(out,(items[i]));
i = G__10653;
out = G__10654;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__10656 = null;
var G__10656__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__10656__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__10656 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10656__2.call(this,self__,k);
case 3:
return G__10656__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10656.cljs$core$IFn$_invoke$arity$2 = G__10656__2;
G__10656.cljs$core$IFn$_invoke$arity$3 = G__10656__3;
return G__10656;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args10655){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10655)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10659 = cljs.core.seq(coll);
var chunk__10660 = null;
var count__10661 = (0);
var i__10662 = (0);
while(true){
if((i__10662 < count__10661)){
var vec__10663 = chunk__10660.cljs$core$IIndexed$_nth$arity$2(null,i__10662);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10663,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10663,(1),null);
var G__10664_10669 = v;
var G__10665_10670 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10664_10669,G__10665_10670) : f.call(null,G__10664_10669,G__10665_10670));

var G__10671 = seq__10659;
var G__10672 = chunk__10660;
var G__10673 = count__10661;
var G__10674 = (i__10662 + (1));
seq__10659 = G__10671;
chunk__10660 = G__10672;
count__10661 = G__10673;
i__10662 = G__10674;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10659);
if(temp__4126__auto__){
var seq__10659__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10659__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__10659__$1);
var G__10675 = cljs.core.chunk_rest(seq__10659__$1);
var G__10676 = c__4551__auto__;
var G__10677 = cljs.core.count(c__4551__auto__);
var G__10678 = (0);
seq__10659 = G__10675;
chunk__10660 = G__10676;
count__10661 = G__10677;
i__10662 = G__10678;
continue;
} else {
var vec__10666 = cljs.core.first(seq__10659__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10666,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10666,(1),null);
var G__10667_10679 = v;
var G__10668_10680 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10667_10679,G__10668_10680) : f.call(null,G__10667_10679,G__10668_10680));

var G__10681 = cljs.core.next(seq__10659__$1);
var G__10682 = null;
var G__10683 = (0);
var G__10684 = (0);
seq__10659 = G__10681;
chunk__10660 = G__10682;
count__10661 = G__10683;
i__10662 = G__10684;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10657_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10657_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__10685 = null;
var G__10685__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10685__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10685 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10685__2.call(this,self__,k);
case 3:
return G__10685__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10685.cljs$core$IFn$_invoke$arity$2 = G__10685__2;
G__10685.cljs$core$IFn$_invoke$arity$3 = G__10685__3;
return G__10685;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args10658){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10658)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4645__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4645__auto__.length)){
var G__10686 = (i + (1));
var G__10687 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__10686;
res = G__10687;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__10688 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__10689 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__10688;
out = G__10689;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__10690__delegate = function (keys){
return cljs.core.set(keys);
};
var G__10690 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10691__i = 0, G__10691__a = new Array(arguments.length -  0);
while (G__10691__i < G__10691__a.length) {G__10691__a[G__10691__i] = arguments[G__10691__i + 0]; ++G__10691__i;}
  keys = new cljs.core.IndexedSeq(G__10691__a,0);
} 
return G__10690__delegate.call(this,keys);};
G__10690.cljs$lang$maxFixedArity = 0;
G__10690.cljs$lang$applyTo = (function (arglist__10692){
var keys = cljs.core.seq(arglist__10692);
return G__10690__delegate(keys);
});
G__10690.cljs$core$IFn$_invoke$arity$variadic = G__10690__delegate;
return G__10690;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__10693 = null;
if (arguments.length > 0) {
var G__10694__i = 0, G__10694__a = new Array(arguments.length -  0);
while (G__10694__i < G__10694__a.length) {G__10694__a[G__10694__i] = arguments[G__10694__i + 0]; ++G__10694__i;}
G__10693 = new cljs.core.IndexedSeq(G__10694__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__10693);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10695__i = 0, G__10695__a = new Array(arguments.length -  0);
while (G__10695__i < G__10695__a.length) {G__10695__a[G__10695__i] = arguments[G__10695__i + 0]; ++G__10695__i;}
  keys = new cljs.core.IndexedSeq(G__10695__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__10696){
var keys = cljs.core.seq(arglist__10696);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__10697__i = 0, G__10697__a = new Array(arguments.length -  1);
while (G__10697__i < G__10697__a.length) {G__10697__a[G__10697__i] = arguments[G__10697__i + 1]; ++G__10697__i;}
  keys = new cljs.core.IndexedSeq(G__10697__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__10698){
var comparator = cljs.core.first(arglist__10698);
var keys = cljs.core.rest(arglist__10698);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__10699_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10699_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__10699_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__10700_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10700_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__10700_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__10721 = null;
var G__10721__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10721__1 = (function (result){
var G__10711 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10711) : rf.call(null,G__10711));
});
var G__10721__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__10712 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10712) : cljs.core.deref.call(null,G__10712));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__10713 = result;
var G__10714 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10713,G__10714) : rf.call(null,G__10713,G__10714));
}
});
G__10721 = function(result,input){
switch(arguments.length){
case 0:
return G__10721__0.call(this);
case 1:
return G__10721__1.call(this,result);
case 2:
return G__10721__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10721.cljs$core$IFn$_invoke$arity$0 = G__10721__0;
G__10721.cljs$core$IFn$_invoke$arity$1 = G__10721__1;
G__10721.cljs$core$IFn$_invoke$arity$2 = G__10721__2;
return G__10721;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__10719,seen__$1){
while(true){
var vec__10720 = p__10719;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10720,(0),null);
var xs__$1 = vec__10720;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__10722 = cljs.core.rest(s);
var G__10723 = seen__$1;
p__10719 = G__10722;
seen__$1 = G__10723;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__10724 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__10725 = cljs.core.next(s__$1);
ret = G__10724;
s__$1 = G__10725;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__10727 = x;
if(G__10727){
var bit__4438__auto__ = (G__10727.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4438__auto__) || (G__10727.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__10728 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__10729 = cljs.core.next(ks);
var G__10730 = cljs.core.next(vs);
map = G__10728;
ks = G__10729;
vs = G__10730;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__10741 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10741) : k.call(null,G__10741));
})() > (function (){var G__10742 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10742) : k.call(null,G__10742));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__10743__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10731_SHARP_,p2__10732_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__10731_SHARP_,p2__10732_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10743 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10744__i = 0, G__10744__a = new Array(arguments.length -  3);
while (G__10744__i < G__10744__a.length) {G__10744__a[G__10744__i] = arguments[G__10744__i + 3]; ++G__10744__i;}
  more = new cljs.core.IndexedSeq(G__10744__a,0);
} 
return G__10743__delegate.call(this,k,x,y,more);};
G__10743.cljs$lang$maxFixedArity = 3;
G__10743.cljs$lang$applyTo = (function (arglist__10745){
var k = cljs.core.first(arglist__10745);
arglist__10745 = cljs.core.next(arglist__10745);
var x = cljs.core.first(arglist__10745);
arglist__10745 = cljs.core.next(arglist__10745);
var y = cljs.core.first(arglist__10745);
var more = cljs.core.rest(arglist__10745);
return G__10743__delegate(k,x,y,more);
});
G__10743.cljs$core$IFn$_invoke$arity$variadic = G__10743__delegate;
return G__10743;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__10746 = null;
if (arguments.length > 3) {
var G__10747__i = 0, G__10747__a = new Array(arguments.length -  3);
while (G__10747__i < G__10747__a.length) {G__10747__a[G__10747__i] = arguments[G__10747__i + 3]; ++G__10747__i;}
G__10746 = new cljs.core.IndexedSeq(G__10747__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10746);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__10758 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10758) : k.call(null,G__10758));
})() < (function (){var G__10759 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10759) : k.call(null,G__10759));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__10760__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10748_SHARP_,p2__10749_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__10748_SHARP_,p2__10749_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10760 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10761__i = 0, G__10761__a = new Array(arguments.length -  3);
while (G__10761__i < G__10761__a.length) {G__10761__a[G__10761__i] = arguments[G__10761__i + 3]; ++G__10761__i;}
  more = new cljs.core.IndexedSeq(G__10761__a,0);
} 
return G__10760__delegate.call(this,k,x,y,more);};
G__10760.cljs$lang$maxFixedArity = 3;
G__10760.cljs$lang$applyTo = (function (arglist__10762){
var k = cljs.core.first(arglist__10762);
arglist__10762 = cljs.core.next(arglist__10762);
var x = cljs.core.first(arglist__10762);
arglist__10762 = cljs.core.next(arglist__10762);
var y = cljs.core.first(arglist__10762);
var more = cljs.core.rest(arglist__10762);
return G__10760__delegate(k,x,y,more);
});
G__10760.cljs$core$IFn$_invoke$arity$variadic = G__10760__delegate;
return G__10760;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__10763 = null;
if (arguments.length > 3) {
var G__10764__i = 0, G__10764__a = new Array(arguments.length -  3);
while (G__10764__i < G__10764__a.length) {G__10764__a[G__10764__i] = arguments[G__10764__i + 3]; ++G__10764__i;}
G__10763 = new cljs.core.IndexedSeq(G__10764__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10763);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__10781 = null;
var G__10781__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10781__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10776 = result;
var G__10777 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10776,G__10777) : rf.call(null,G__10776,G__10777));
})());
})());
var G__10778 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10778) : rf.call(null,G__10778));
});
var G__10781__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__10779 = result;
var G__10780 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10779,G__10780) : rf.call(null,G__10779,G__10780));
} else {
return result;
}
});
G__10781 = function(result,input){
switch(arguments.length){
case 0:
return G__10781__0.call(this);
case 1:
return G__10781__1.call(this,result);
case 2:
return G__10781__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10781.cljs$core$IFn$_invoke$arity$0 = G__10781__0;
G__10781.cljs$core$IFn$_invoke$arity$1 = G__10781__1;
G__10781.cljs$core$IFn$_invoke$arity$2 = G__10781__2;
return G__10781;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__10794 = null;
var G__10794__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10794__1 = (function (result){
var G__10789 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10789) : rf.call(null,G__10789));
});
var G__10794__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__10790 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10790) : pred.call(null,G__10790));
})())){
var G__10791 = result;
var G__10792 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10791,G__10792) : rf.call(null,G__10791,G__10792));
} else {
return cljs.core.reduced(result);
}
});
G__10794 = function(result,input){
switch(arguments.length){
case 0:
return G__10794__0.call(this);
case 1:
return G__10794__1.call(this,result);
case 2:
return G__10794__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10794.cljs$core$IFn$_invoke$arity$0 = G__10794__0;
G__10794.cljs$core$IFn$_invoke$arity$1 = G__10794__1;
G__10794.cljs$core$IFn$_invoke$arity$2 = G__10794__2;
return G__10794;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__10793 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10793) : pred.call(null,G__10793));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__10799 = (function (){var G__10801 = cljs.core._entry_key(sc,e);
var G__10802 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10801,G__10802) : comp.call(null,G__10801,G__10802));
})();
var G__10800 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__10799,G__10800) : test.call(null,G__10799,G__10800));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10806 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10806,(0),null);
var s = vec__10806;
if(cljs.core.truth_((function (){var G__10807 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10807) : include.call(null,G__10807));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10808 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10808,(0),null);
var s = vec__10808;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10812 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10812,(0),null);
var s = vec__10812;
if(cljs.core.truth_((function (){var G__10813 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10813) : include.call(null,G__10813));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10814 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10814,(0),null);
var s = vec__10814;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__10815 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__10815) : Math.ceil.call(null,G__10815));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__10816 = ret;
var G__10817 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10816,G__10817) : f.call(null,G__10816,G__10817));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__10818 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10818) : cljs.core.deref.call(null,G__10818));
} else {
var G__10819 = (i + self__.step);
var G__10820 = ret__$1;
i = G__10819;
ret = G__10820;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__10838 = null;
var G__10838__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10838__1 = (function (result){
var G__10835 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10835) : rf.call(null,G__10835));
});
var G__10838__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__10836 = result;
var G__10837 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10836,G__10837) : rf.call(null,G__10836,G__10837));
} else {
return result;
}
});
G__10838 = function(result,input){
switch(arguments.length){
case 0:
return G__10838__0.call(this);
case 1:
return G__10838__1.call(this,result);
case 2:
return G__10838__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10838.cljs$core$IFn$_invoke$arity$0 = G__10838__0;
G__10838.cljs$core$IFn$_invoke$arity$1 = G__10838__1;
G__10838.cljs$core$IFn$_invoke$arity$2 = G__10838__2;
return G__10838;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__10860 = null;
var G__10860__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10860__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10851 = result;
var G__10852 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10851,G__10852) : rf.call(null,G__10851,G__10852));
})());
})());
var G__10853 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10853) : rf.call(null,G__10853));
});
var G__10860__2 = (function (result,input){
var pval = (function (){var G__10854 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10854) : cljs.core.deref.call(null,G__10854));
})();
var val = (function (){var G__10855 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10855) : f.call(null,G__10855));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__10856 = result;
var G__10857 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10856,G__10857) : rf.call(null,G__10856,G__10857));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__10860 = function(result,input){
switch(arguments.length){
case 0:
return G__10860__0.call(this);
case 1:
return G__10860__1.call(this,result);
case 2:
return G__10860__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10860.cljs$core$IFn$_invoke$arity$0 = G__10860__0;
G__10860.cljs$core$IFn$_invoke$arity$1 = G__10860__1;
G__10860.cljs$core$IFn$_invoke$arity$2 = G__10860__2;
return G__10860;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__10858 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10858) : f.call(null,G__10858));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__10839_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__10859 = p1__10839_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10859) : f.call(null,G__10859));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__10869 = init;
var G__10870 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10869,G__10870) : f.call(null,G__10869,G__10870));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__10965 = null;
var G__10965__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__10965__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10923 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10923) : f.call(null,G__10923));
})()],null));
});
var G__10965__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10924 = x;
var G__10925 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10924,G__10925) : f.call(null,G__10924,G__10925));
})()],null));
});
var G__10965__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10926 = x;
var G__10927 = y;
var G__10928 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10926,G__10927,G__10928) : f.call(null,G__10926,G__10927,G__10928));
})()],null));
});
var G__10965__4 = (function() { 
var G__10966__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__10966 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10967__i = 0, G__10967__a = new Array(arguments.length -  3);
while (G__10967__i < G__10967__a.length) {G__10967__a[G__10967__i] = arguments[G__10967__i + 3]; ++G__10967__i;}
  args = new cljs.core.IndexedSeq(G__10967__a,0);
} 
return G__10966__delegate.call(this,x,y,z,args);};
G__10966.cljs$lang$maxFixedArity = 3;
G__10966.cljs$lang$applyTo = (function (arglist__10968){
var x = cljs.core.first(arglist__10968);
arglist__10968 = cljs.core.next(arglist__10968);
var y = cljs.core.first(arglist__10968);
arglist__10968 = cljs.core.next(arglist__10968);
var z = cljs.core.first(arglist__10968);
var args = cljs.core.rest(arglist__10968);
return G__10966__delegate(x,y,z,args);
});
G__10966.cljs$core$IFn$_invoke$arity$variadic = G__10966__delegate;
return G__10966;
})()
;
G__10965 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10965__0.call(this);
case 1:
return G__10965__1.call(this,x);
case 2:
return G__10965__2.call(this,x,y);
case 3:
return G__10965__3.call(this,x,y,z);
default:
var G__10969 = null;
if (arguments.length > 3) {
var G__10970__i = 0, G__10970__a = new Array(arguments.length -  3);
while (G__10970__i < G__10970__a.length) {G__10970__a[G__10970__i] = arguments[G__10970__i + 3]; ++G__10970__i;}
G__10969 = new cljs.core.IndexedSeq(G__10970__a,0);
}
return G__10965__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10969);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10965.cljs$lang$maxFixedArity = 3;
G__10965.cljs$lang$applyTo = G__10965__4.cljs$lang$applyTo;
G__10965.cljs$core$IFn$_invoke$arity$0 = G__10965__0;
G__10965.cljs$core$IFn$_invoke$arity$1 = G__10965__1;
G__10965.cljs$core$IFn$_invoke$arity$2 = G__10965__2;
G__10965.cljs$core$IFn$_invoke$arity$3 = G__10965__3;
G__10965.cljs$core$IFn$_invoke$arity$variadic = G__10965__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10965;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__10971 = null;
var G__10971__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__10971__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10929 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10929) : f.call(null,G__10929));
})(),(function (){var G__10930 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10930) : g.call(null,G__10930));
})()],null));
});
var G__10971__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10931 = x;
var G__10932 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10931,G__10932) : f.call(null,G__10931,G__10932));
})(),(function (){var G__10933 = x;
var G__10934 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10933,G__10934) : g.call(null,G__10933,G__10934));
})()],null));
});
var G__10971__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10935 = x;
var G__10936 = y;
var G__10937 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10935,G__10936,G__10937) : f.call(null,G__10935,G__10936,G__10937));
})(),(function (){var G__10938 = x;
var G__10939 = y;
var G__10940 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10938,G__10939,G__10940) : g.call(null,G__10938,G__10939,G__10940));
})()],null));
});
var G__10971__4 = (function() { 
var G__10972__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__10972 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10973__i = 0, G__10973__a = new Array(arguments.length -  3);
while (G__10973__i < G__10973__a.length) {G__10973__a[G__10973__i] = arguments[G__10973__i + 3]; ++G__10973__i;}
  args = new cljs.core.IndexedSeq(G__10973__a,0);
} 
return G__10972__delegate.call(this,x,y,z,args);};
G__10972.cljs$lang$maxFixedArity = 3;
G__10972.cljs$lang$applyTo = (function (arglist__10974){
var x = cljs.core.first(arglist__10974);
arglist__10974 = cljs.core.next(arglist__10974);
var y = cljs.core.first(arglist__10974);
arglist__10974 = cljs.core.next(arglist__10974);
var z = cljs.core.first(arglist__10974);
var args = cljs.core.rest(arglist__10974);
return G__10972__delegate(x,y,z,args);
});
G__10972.cljs$core$IFn$_invoke$arity$variadic = G__10972__delegate;
return G__10972;
})()
;
G__10971 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10971__0.call(this);
case 1:
return G__10971__1.call(this,x);
case 2:
return G__10971__2.call(this,x,y);
case 3:
return G__10971__3.call(this,x,y,z);
default:
var G__10975 = null;
if (arguments.length > 3) {
var G__10976__i = 0, G__10976__a = new Array(arguments.length -  3);
while (G__10976__i < G__10976__a.length) {G__10976__a[G__10976__i] = arguments[G__10976__i + 3]; ++G__10976__i;}
G__10975 = new cljs.core.IndexedSeq(G__10976__a,0);
}
return G__10971__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10975);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10971.cljs$lang$maxFixedArity = 3;
G__10971.cljs$lang$applyTo = G__10971__4.cljs$lang$applyTo;
G__10971.cljs$core$IFn$_invoke$arity$0 = G__10971__0;
G__10971.cljs$core$IFn$_invoke$arity$1 = G__10971__1;
G__10971.cljs$core$IFn$_invoke$arity$2 = G__10971__2;
G__10971.cljs$core$IFn$_invoke$arity$3 = G__10971__3;
G__10971.cljs$core$IFn$_invoke$arity$variadic = G__10971__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10971;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__10977 = null;
var G__10977__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__10977__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10941 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10941) : f.call(null,G__10941));
})(),(function (){var G__10942 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10942) : g.call(null,G__10942));
})(),(function (){var G__10943 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__10943) : h.call(null,G__10943));
})()],null));
});
var G__10977__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10944 = x;
var G__10945 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10944,G__10945) : f.call(null,G__10944,G__10945));
})(),(function (){var G__10946 = x;
var G__10947 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10946,G__10947) : g.call(null,G__10946,G__10947));
})(),(function (){var G__10948 = x;
var G__10949 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__10948,G__10949) : h.call(null,G__10948,G__10949));
})()],null));
});
var G__10977__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10950 = x;
var G__10951 = y;
var G__10952 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10950,G__10951,G__10952) : f.call(null,G__10950,G__10951,G__10952));
})(),(function (){var G__10953 = x;
var G__10954 = y;
var G__10955 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10953,G__10954,G__10955) : g.call(null,G__10953,G__10954,G__10955));
})(),(function (){var G__10956 = x;
var G__10957 = y;
var G__10958 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__10956,G__10957,G__10958) : h.call(null,G__10956,G__10957,G__10958));
})()],null));
});
var G__10977__4 = (function() { 
var G__10978__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__10978 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10979__i = 0, G__10979__a = new Array(arguments.length -  3);
while (G__10979__i < G__10979__a.length) {G__10979__a[G__10979__i] = arguments[G__10979__i + 3]; ++G__10979__i;}
  args = new cljs.core.IndexedSeq(G__10979__a,0);
} 
return G__10978__delegate.call(this,x,y,z,args);};
G__10978.cljs$lang$maxFixedArity = 3;
G__10978.cljs$lang$applyTo = (function (arglist__10980){
var x = cljs.core.first(arglist__10980);
arglist__10980 = cljs.core.next(arglist__10980);
var y = cljs.core.first(arglist__10980);
arglist__10980 = cljs.core.next(arglist__10980);
var z = cljs.core.first(arglist__10980);
var args = cljs.core.rest(arglist__10980);
return G__10978__delegate(x,y,z,args);
});
G__10978.cljs$core$IFn$_invoke$arity$variadic = G__10978__delegate;
return G__10978;
})()
;
G__10977 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10977__0.call(this);
case 1:
return G__10977__1.call(this,x);
case 2:
return G__10977__2.call(this,x,y);
case 3:
return G__10977__3.call(this,x,y,z);
default:
var G__10981 = null;
if (arguments.length > 3) {
var G__10982__i = 0, G__10982__a = new Array(arguments.length -  3);
while (G__10982__i < G__10982__a.length) {G__10982__a[G__10982__i] = arguments[G__10982__i + 3]; ++G__10982__i;}
G__10981 = new cljs.core.IndexedSeq(G__10982__a,0);
}
return G__10977__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10977.cljs$lang$maxFixedArity = 3;
G__10977.cljs$lang$applyTo = G__10977__4.cljs$lang$applyTo;
G__10977.cljs$core$IFn$_invoke$arity$0 = G__10977__0;
G__10977.cljs$core$IFn$_invoke$arity$1 = G__10977__1;
G__10977.cljs$core$IFn$_invoke$arity$2 = G__10977__2;
G__10977.cljs$core$IFn$_invoke$arity$3 = G__10977__3;
G__10977.cljs$core$IFn$_invoke$arity$variadic = G__10977__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10977;
})()
});
var juxt__4 = (function() { 
var G__10983__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__10984 = null;
var G__10984__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10871_SHARP_,p2__10872_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10871_SHARP_,(function (){return (p2__10872_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__10872_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__10872_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10984__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10873_SHARP_,p2__10874_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10873_SHARP_,(function (){var G__10959 = x;
return (p2__10874_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__10874_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10959) : p2__10874_SHARP_.call(null,G__10959));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10984__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10875_SHARP_,p2__10876_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10875_SHARP_,(function (){var G__10960 = x;
var G__10961 = y;
return (p2__10876_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__10876_SHARP_.cljs$core$IFn$_invoke$arity$2(G__10960,G__10961) : p2__10876_SHARP_.call(null,G__10960,G__10961));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10984__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10877_SHARP_,p2__10878_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10877_SHARP_,(function (){var G__10962 = x;
var G__10963 = y;
var G__10964 = z;
return (p2__10878_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__10878_SHARP_.cljs$core$IFn$_invoke$arity$3(G__10962,G__10963,G__10964) : p2__10878_SHARP_.call(null,G__10962,G__10963,G__10964));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10984__4 = (function() { 
var G__10985__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10879_SHARP_,p2__10880_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10879_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__10880_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__10985 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10986__i = 0, G__10986__a = new Array(arguments.length -  3);
while (G__10986__i < G__10986__a.length) {G__10986__a[G__10986__i] = arguments[G__10986__i + 3]; ++G__10986__i;}
  args = new cljs.core.IndexedSeq(G__10986__a,0);
} 
return G__10985__delegate.call(this,x,y,z,args);};
G__10985.cljs$lang$maxFixedArity = 3;
G__10985.cljs$lang$applyTo = (function (arglist__10987){
var x = cljs.core.first(arglist__10987);
arglist__10987 = cljs.core.next(arglist__10987);
var y = cljs.core.first(arglist__10987);
arglist__10987 = cljs.core.next(arglist__10987);
var z = cljs.core.first(arglist__10987);
var args = cljs.core.rest(arglist__10987);
return G__10985__delegate(x,y,z,args);
});
G__10985.cljs$core$IFn$_invoke$arity$variadic = G__10985__delegate;
return G__10985;
})()
;
G__10984 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10984__0.call(this);
case 1:
return G__10984__1.call(this,x);
case 2:
return G__10984__2.call(this,x,y);
case 3:
return G__10984__3.call(this,x,y,z);
default:
var G__10988 = null;
if (arguments.length > 3) {
var G__10989__i = 0, G__10989__a = new Array(arguments.length -  3);
while (G__10989__i < G__10989__a.length) {G__10989__a[G__10989__i] = arguments[G__10989__i + 3]; ++G__10989__i;}
G__10988 = new cljs.core.IndexedSeq(G__10989__a,0);
}
return G__10984__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10988);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10984.cljs$lang$maxFixedArity = 3;
G__10984.cljs$lang$applyTo = G__10984__4.cljs$lang$applyTo;
G__10984.cljs$core$IFn$_invoke$arity$0 = G__10984__0;
G__10984.cljs$core$IFn$_invoke$arity$1 = G__10984__1;
G__10984.cljs$core$IFn$_invoke$arity$2 = G__10984__2;
G__10984.cljs$core$IFn$_invoke$arity$3 = G__10984__3;
G__10984.cljs$core$IFn$_invoke$arity$variadic = G__10984__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10984;
})()
;})(fs__$1))
};
var G__10983 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__10990__i = 0, G__10990__a = new Array(arguments.length -  3);
while (G__10990__i < G__10990__a.length) {G__10990__a[G__10990__i] = arguments[G__10990__i + 3]; ++G__10990__i;}
  fs = new cljs.core.IndexedSeq(G__10990__a,0);
} 
return G__10983__delegate.call(this,f,g,h,fs);};
G__10983.cljs$lang$maxFixedArity = 3;
G__10983.cljs$lang$applyTo = (function (arglist__10991){
var f = cljs.core.first(arglist__10991);
arglist__10991 = cljs.core.next(arglist__10991);
var g = cljs.core.first(arglist__10991);
arglist__10991 = cljs.core.next(arglist__10991);
var h = cljs.core.first(arglist__10991);
var fs = cljs.core.rest(arglist__10991);
return G__10983__delegate(f,g,h,fs);
});
G__10983.cljs$core$IFn$_invoke$arity$variadic = G__10983__delegate;
return G__10983;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__10992 = null;
if (arguments.length > 3) {
var G__10993__i = 0, G__10993__a = new Array(arguments.length -  3);
while (G__10993__i < G__10993__a.length) {G__10993__a[G__10993__i] = arguments[G__10993__i + 3]; ++G__10993__i;}
G__10992 = new cljs.core.IndexedSeq(G__10993__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__10992);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__10994 = cljs.core.next(coll);
coll = G__10994;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__10995 = (n - (1));
var G__10996 = cljs.core.next(coll);
n = G__10995;
coll = G__10996;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__11000 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11000,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11000,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11000,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_11008 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__11009_11015 = cljs.core.first(coll);
var G__11010_11016 = writer;
var G__11011_11017 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11009_11015,G__11010_11016,G__11011_11017) : print_one.call(null,G__11009_11015,G__11010_11016,G__11011_11017));
} else {
}

var coll_11018__$1 = cljs.core.next(coll);
var n_11019 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_11018__$1) && (((n_11019 == null)) || (!((n_11019 === (0)))))){
cljs.core._write(writer,sep);

var G__11012_11020 = cljs.core.first(coll_11018__$1);
var G__11013_11021 = writer;
var G__11014_11022 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11012_11020,G__11013_11021,G__11014_11022) : print_one.call(null,G__11012_11020,G__11013_11021,G__11014_11022));

var G__11023 = cljs.core.next(coll_11018__$1);
var G__11024 = (n_11019 - (1));
coll_11018__$1 = G__11023;
n_11019 = G__11024;
continue;
} else {
if((cljs.core.seq(coll_11018__$1)) && ((n_11019 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_11008;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__11029 = cljs.core.seq(ss);
var chunk__11030 = null;
var count__11031 = (0);
var i__11032 = (0);
while(true){
if((i__11032 < count__11031)){
var s = chunk__11030.cljs$core$IIndexed$_nth$arity$2(null,i__11032);
cljs.core._write(writer,s);

var G__11033 = seq__11029;
var G__11034 = chunk__11030;
var G__11035 = count__11031;
var G__11036 = (i__11032 + (1));
seq__11029 = G__11033;
chunk__11030 = G__11034;
count__11031 = G__11035;
i__11032 = G__11036;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11029);
if(temp__4126__auto__){
var seq__11029__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11029__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__11029__$1);
var G__11037 = cljs.core.chunk_rest(seq__11029__$1);
var G__11038 = c__4551__auto__;
var G__11039 = cljs.core.count(c__4551__auto__);
var G__11040 = (0);
seq__11029 = G__11037;
chunk__11030 = G__11038;
count__11031 = G__11039;
i__11032 = G__11040;
continue;
} else {
var s = cljs.core.first(seq__11029__$1);
cljs.core._write(writer,s);

var G__11041 = cljs.core.next(seq__11029__$1);
var G__11042 = null;
var G__11043 = (0);
var G__11044 = (0);
seq__11029 = G__11041;
chunk__11030 = G__11042;
count__11031 = G__11043;
i__11032 = G__11044;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__11045__i = 0, G__11045__a = new Array(arguments.length -  1);
while (G__11045__i < G__11045__a.length) {G__11045__a[G__11045__i] = arguments[G__11045__i + 1]; ++G__11045__i;}
  ss = new cljs.core.IndexedSeq(G__11045__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__11046){
var writer = cljs.core.first(arglist__11046);
var ss = cljs.core.rest(arglist__11046);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj11048 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj11048;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__11051 = "[\\\\\"\b\f\n\r\t]";
var G__11052 = "g";
return RegExp(G__11051,G__11052);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3752__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__11066 = obj;
if(G__11066){
var bit__4445__auto__ = (G__11066.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4445__auto__) || (G__11066.cljs$core$IMeta$)){
return true;
} else {
if((!G__11066.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11066);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11066);
}
})();
if(and__3752__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__11067 = obj;
if(G__11067){
var bit__4438__auto__ = (G__11067.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4438__auto__) || (G__11067.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__11068 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__11069 = pr_writer;
var G__11070 = writer;
var G__11071 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__11068,G__11069,G__11070,G__11071) : cljs.core.print_map.call(null,G__11068,G__11069,G__11070,G__11071));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__11072 = obj;
return goog.isString(G__11072);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__11074 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__11074;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__11073 = obj;
if(G__11073){
var bit__4445__auto__ = (G__11073.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4445__auto__) || (G__11073.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__11073.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__11073);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__11073);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__11079 = cljs.core.seq(cljs.core.next(objs));
var chunk__11080 = null;
var count__11081 = (0);
var i__11082 = (0);
while(true){
if((i__11082 < count__11081)){
var obj = chunk__11080.cljs$core$IIndexed$_nth$arity$2(null,i__11082);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11083 = seq__11079;
var G__11084 = chunk__11080;
var G__11085 = count__11081;
var G__11086 = (i__11082 + (1));
seq__11079 = G__11083;
chunk__11080 = G__11084;
count__11081 = G__11085;
i__11082 = G__11086;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11079);
if(temp__4126__auto__){
var seq__11079__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11079__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__11079__$1);
var G__11087 = cljs.core.chunk_rest(seq__11079__$1);
var G__11088 = c__4551__auto__;
var G__11089 = cljs.core.count(c__4551__auto__);
var G__11090 = (0);
seq__11079 = G__11087;
chunk__11080 = G__11088;
count__11081 = G__11089;
i__11082 = G__11090;
continue;
} else {
var obj = cljs.core.first(seq__11079__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11091 = cljs.core.next(seq__11079__$1);
var G__11092 = null;
var G__11093 = (0);
var G__11094 = (0);
seq__11079 = G__11091;
chunk__11080 = G__11092;
count__11081 = G__11093;
i__11082 = G__11094;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11095__i = 0, G__11095__a = new Array(arguments.length -  0);
while (G__11095__i < G__11095__a.length) {G__11095__a[G__11095__i] = arguments[G__11095__i + 0]; ++G__11095__i;}
  objs = new cljs.core.IndexedSeq(G__11095__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__11096){
var objs = cljs.core.seq(arglist__11096);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11097__i = 0, G__11097__a = new Array(arguments.length -  0);
while (G__11097__i < G__11097__a.length) {G__11097__a[G__11097__i] = arguments[G__11097__i + 0]; ++G__11097__i;}
  objs = new cljs.core.IndexedSeq(G__11097__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__11098){
var objs = cljs.core.seq(arglist__11098);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11099__i = 0, G__11099__a = new Array(arguments.length -  0);
while (G__11099__i < G__11099__a.length) {G__11099__a[G__11099__i] = arguments[G__11099__i + 0]; ++G__11099__i;}
  objs = new cljs.core.IndexedSeq(G__11099__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__11100){
var objs = cljs.core.seq(arglist__11100);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11101__i = 0, G__11101__a = new Array(arguments.length -  0);
while (G__11101__i < G__11101__a.length) {G__11101__a[G__11101__i] = arguments[G__11101__i + 0]; ++G__11101__i;}
  objs = new cljs.core.IndexedSeq(G__11101__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__11102){
var objs = cljs.core.seq(arglist__11102);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11103__i = 0, G__11103__a = new Array(arguments.length -  0);
while (G__11103__i < G__11103__a.length) {G__11103__a[G__11103__i] = arguments[G__11103__i + 0]; ++G__11103__i;}
  objs = new cljs.core.IndexedSeq(G__11103__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__11104){
var objs = cljs.core.seq(arglist__11104);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11105__i = 0, G__11105__a = new Array(arguments.length -  0);
while (G__11105__i < G__11105__a.length) {G__11105__a[G__11105__i] = arguments[G__11105__i + 0]; ++G__11105__i;}
  objs = new cljs.core.IndexedSeq(G__11105__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__11106){
var objs = cljs.core.seq(arglist__11106);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11107__i = 0, G__11107__a = new Array(arguments.length -  0);
while (G__11107__i < G__11107__a.length) {G__11107__a[G__11107__i] = arguments[G__11107__i + 0]; ++G__11107__i;}
  objs = new cljs.core.IndexedSeq(G__11107__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__11108){
var objs = cljs.core.seq(arglist__11108);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11109__i = 0, G__11109__a = new Array(arguments.length -  0);
while (G__11109__i < G__11109__a.length) {G__11109__a[G__11109__i] = arguments[G__11109__i + 0]; ++G__11109__i;}
  objs = new cljs.core.IndexedSeq(G__11109__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__11110){
var objs = cljs.core.seq(arglist__11110);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__11117_11123 = cljs.core.key(e);
var G__11118_11124 = w;
var G__11119_11125 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11117_11123,G__11118_11124,G__11119_11125) : print_one.call(null,G__11117_11123,G__11118_11124,G__11119_11125));

cljs.core._write(w," ");

var G__11120 = cljs.core.val(e);
var G__11121 = w;
var G__11122 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11120,G__11121,G__11122) : print_one.call(null,G__11120,G__11121,G__11122));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__11126__i = 0, G__11126__a = new Array(arguments.length -  2);
while (G__11126__i < G__11126__a.length) {G__11126__a[G__11126__i] = arguments[G__11126__i + 2]; ++G__11126__i;}
  args = new cljs.core.IndexedSeq(G__11126__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__11127){
var iref = cljs.core.first(arglist__11127);
arglist__11127 = cljs.core.next(arglist__11127);
var f = cljs.core.first(arglist__11127);
var args = cljs.core.rest(arglist__11127);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__11130 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11130) : cljs.core.atom.call(null,G__11130));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__11132 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11132) : cljs.core.deref.call(null,G__11132));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__11133_SHARP_,p2__11134_SHARP_){
var ret = (function (){var G__11137 = p1__11133_SHARP_;
var G__11138 = p2__11134_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11137,G__11138) : rf.call(null,G__11137,G__11138));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__11141 = null;
var G__11141__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11141__1 = (function (result){
var G__11140 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11140) : rf.call(null,G__11140));
});
var G__11141__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__11141 = function(result,input){
switch(arguments.length){
case 0:
return G__11141__0.call(this);
case 1:
return G__11141__1.call(this,result);
case 2:
return G__11141__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11141.cljs$core$IFn$_invoke$arity$0 = G__11141__0;
G__11141.cljs$core$IFn$_invoke$arity$1 = G__11141__1;
G__11141.cljs$core$IFn$_invoke$arity$2 = G__11141__2;
return G__11141;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__11150 = null;
var G__11150__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11150__1 = (function (result){
var G__11146 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11146) : rf.call(null,G__11146));
});
var G__11150__2 = (function (result,input){
var prior = (function (){var G__11147 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11147) : cljs.core.deref.call(null,G__11147));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__11148 = result;
var G__11149 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11148,G__11149) : rf.call(null,G__11148,G__11149));
}
});
G__11150 = function(result,input){
switch(arguments.length){
case 0:
return G__11150__0.call(this);
case 1:
return G__11150__1.call(this,result);
case 2:
return G__11150__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11150.cljs$core$IFn$_invoke$arity$0 = G__11150__0;
G__11150.cljs$core$IFn$_invoke$arity$1 = G__11150__1;
G__11150.cljs$core$IFn$_invoke$arity$2 = G__11150__2;
return G__11150;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11152_SHARP_,p2__11151_SHARP_){
var G__11154 = p2__11151_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__11154) : proc.call(null,G__11154));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj11156 = {};
return obj11156;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3752__auto__ = x;
if(and__3752__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3752__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4408__auto__ = (((x == null))?null:x);
return (function (){var or__3764__auto__ = (cljs.core._clj__GT_js[(function (){var G__11160 = x__4408__auto__;
return goog.typeOf(G__11160);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3752__auto__ = x;
if(and__3752__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3752__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4408__auto__ = (((x == null))?null:x);
return (function (){var or__3764__auto__ = (cljs.core._key__GT_js[(function (){var G__11164 = x__4408__auto__;
return goog.typeOf(G__11164);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__11167 = k;
if(G__11167){
var bit__4445__auto__ = null;
if(cljs.core.truth_((function (){var or__3764__auto__ = bit__4445__auto__;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return G__11167.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11167.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11167);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11167);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__11168 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__11168) : cljs.core.clj__GT_js.call(null,G__11168));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__11184 = x;
if(G__11184){
var bit__4445__auto__ = null;
if(cljs.core.truth_((function (){var or__3764__auto__ = bit__4445__auto__;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return G__11184.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11184.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11184);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11184);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj11186 = {};
return obj11186;
})();
var seq__11187_11197 = cljs.core.seq(x);
var chunk__11188_11198 = null;
var count__11189_11199 = (0);
var i__11190_11200 = (0);
while(true){
if((i__11190_11200 < count__11189_11199)){
var vec__11191_11201 = chunk__11188_11198.cljs$core$IIndexed$_nth$arity$2(null,i__11190_11200);
var k_11202 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11191_11201,(0),null);
var v_11203 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11191_11201,(1),null);
(m[cljs.core.key__GT_js(k_11202)] = clj__GT_js(v_11203));

var G__11204 = seq__11187_11197;
var G__11205 = chunk__11188_11198;
var G__11206 = count__11189_11199;
var G__11207 = (i__11190_11200 + (1));
seq__11187_11197 = G__11204;
chunk__11188_11198 = G__11205;
count__11189_11199 = G__11206;
i__11190_11200 = G__11207;
continue;
} else {
var temp__4126__auto___11208 = cljs.core.seq(seq__11187_11197);
if(temp__4126__auto___11208){
var seq__11187_11209__$1 = temp__4126__auto___11208;
if(cljs.core.chunked_seq_QMARK_(seq__11187_11209__$1)){
var c__4551__auto___11210 = cljs.core.chunk_first(seq__11187_11209__$1);
var G__11211 = cljs.core.chunk_rest(seq__11187_11209__$1);
var G__11212 = c__4551__auto___11210;
var G__11213 = cljs.core.count(c__4551__auto___11210);
var G__11214 = (0);
seq__11187_11197 = G__11211;
chunk__11188_11198 = G__11212;
count__11189_11199 = G__11213;
i__11190_11200 = G__11214;
continue;
} else {
var vec__11192_11215 = cljs.core.first(seq__11187_11209__$1);
var k_11216 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11192_11215,(0),null);
var v_11217 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11192_11215,(1),null);
(m[cljs.core.key__GT_js(k_11216)] = clj__GT_js(v_11217));

var G__11218 = cljs.core.next(seq__11187_11209__$1);
var G__11219 = null;
var G__11220 = (0);
var G__11221 = (0);
seq__11187_11197 = G__11218;
chunk__11188_11198 = G__11219;
count__11189_11199 = G__11220;
i__11190_11200 = G__11221;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__11193_11222 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__11194_11223 = null;
var count__11195_11224 = (0);
var i__11196_11225 = (0);
while(true){
if((i__11196_11225 < count__11195_11224)){
var x_11226__$1 = chunk__11194_11223.cljs$core$IIndexed$_nth$arity$2(null,i__11196_11225);
arr.push(x_11226__$1);

var G__11227 = seq__11193_11222;
var G__11228 = chunk__11194_11223;
var G__11229 = count__11195_11224;
var G__11230 = (i__11196_11225 + (1));
seq__11193_11222 = G__11227;
chunk__11194_11223 = G__11228;
count__11195_11224 = G__11229;
i__11196_11225 = G__11230;
continue;
} else {
var temp__4126__auto___11231 = cljs.core.seq(seq__11193_11222);
if(temp__4126__auto___11231){
var seq__11193_11232__$1 = temp__4126__auto___11231;
if(cljs.core.chunked_seq_QMARK_(seq__11193_11232__$1)){
var c__4551__auto___11233 = cljs.core.chunk_first(seq__11193_11232__$1);
var G__11234 = cljs.core.chunk_rest(seq__11193_11232__$1);
var G__11235 = c__4551__auto___11233;
var G__11236 = cljs.core.count(c__4551__auto___11233);
var G__11237 = (0);
seq__11193_11222 = G__11234;
chunk__11194_11223 = G__11235;
count__11195_11224 = G__11236;
i__11196_11225 = G__11237;
continue;
} else {
var x_11238__$1 = cljs.core.first(seq__11193_11232__$1);
arr.push(x_11238__$1);

var G__11239 = cljs.core.next(seq__11193_11232__$1);
var G__11240 = null;
var G__11241 = (0);
var G__11242 = (0);
seq__11193_11222 = G__11239;
chunk__11194_11223 = G__11240;
count__11195_11224 = G__11241;
i__11196_11225 = G__11242;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj11244 = {};
return obj11244;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3752__auto__ = x;
if(and__3752__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3752__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4408__auto__ = (((x == null))?null:x);
return (function (){var or__3764__auto__ = (cljs.core._js__GT_clj[(function (){var G__11248 = x__4408__auto__;
return goog.typeOf(G__11248);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__11305__delegate = function (x,opts){
var map__11278 = opts;
var map__11278__$1 = ((cljs.core.seq_QMARK_(map__11278))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__11278):map__11278);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11278__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__11278,map__11278__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__11294 = x__$1;
if(G__11294){
var bit__4445__auto__ = null;
if(cljs.core.truth_((function (){var or__3764__auto__ = bit__4445__auto__;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return G__11294.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__11294.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11294);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11294);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4520__auto__ = ((function (map__11278,map__11278__$1,keywordize_keys,keyfn){
return (function iter__11295(s__11296){
return (new cljs.core.LazySeq(null,((function (map__11278,map__11278__$1,keywordize_keys,keyfn){
return (function (){
var s__11296__$1 = s__11296;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__11296__$1);
if(temp__4126__auto__){
var s__11296__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__11296__$2)){
var c__4518__auto__ = cljs.core.chunk_first(s__11296__$2);
var size__4519__auto__ = cljs.core.count(c__4518__auto__);
var b__11298 = cljs.core.chunk_buffer(size__4519__auto__);
if((function (){var i__11297 = (0);
while(true){
if((i__11297 < size__4519__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4518__auto__,i__11297);
cljs.core.chunk_append(b__11298,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11303 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11303) : keyfn.call(null,G__11303));
})(),thisfn((x__$1[k]))], null));

var G__11306 = (i__11297 + (1));
i__11297 = G__11306;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__11298),iter__11295(cljs.core.chunk_rest(s__11296__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__11298),null);
}
} else {
var k = cljs.core.first(s__11296__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11304 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11304) : keyfn.call(null,G__11304));
})(),thisfn((x__$1[k]))], null),iter__11295(cljs.core.rest(s__11296__$2)));
}
} else {
return null;
}
break;
}
});})(map__11278,map__11278__$1,keywordize_keys,keyfn))
,null,null));
});})(map__11278,map__11278__$1,keywordize_keys,keyfn))
;
return iter__4520__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__11278,map__11278__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__11305 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__11307__i = 0, G__11307__a = new Array(arguments.length -  1);
while (G__11307__i < G__11307__a.length) {G__11307__a[G__11307__i] = arguments[G__11307__i + 1]; ++G__11307__i;}
  opts = new cljs.core.IndexedSeq(G__11307__a,0);
} 
return G__11305__delegate.call(this,x,opts);};
G__11305.cljs$lang$maxFixedArity = 1;
G__11305.cljs$lang$applyTo = (function (arglist__11308){
var x = cljs.core.first(arglist__11308);
var opts = cljs.core.rest(arglist__11308);
return G__11305__delegate(x,opts);
});
G__11305.cljs$core$IFn$_invoke$arity$variadic = G__11305__delegate;
return G__11305;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__11309 = null;
if (arguments.length > 1) {
var G__11310__i = 0, G__11310__a = new Array(arguments.length -  1);
while (G__11310__i < G__11310__a.length) {G__11310__a[G__11310__i] = arguments[G__11310__i + 1]; ++G__11310__i;}
G__11309 = new cljs.core.IndexedSeq(G__11310__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11309);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__11313 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11313) : cljs.core.atom.call(null,G__11313));
})();
return ((function (mem){
return (function() { 
var G__11315__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__11314 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11314) : cljs.core.deref.call(null,G__11314));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__11315 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11316__i = 0, G__11316__a = new Array(arguments.length -  0);
while (G__11316__i < G__11316__a.length) {G__11316__a[G__11316__i] = arguments[G__11316__i + 0]; ++G__11316__i;}
  args = new cljs.core.IndexedSeq(G__11316__a,0);
} 
return G__11315__delegate.call(this,args);};
G__11315.cljs$lang$maxFixedArity = 0;
G__11315.cljs$lang$applyTo = (function (arglist__11317){
var args = cljs.core.seq(arglist__11317);
return G__11315__delegate(args);
});
G__11315.cljs$core$IFn$_invoke$arity$variadic = G__11315__delegate;
return G__11315;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__11319 = ret;
f = G__11319;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__11320__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__11320 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11321__i = 0, G__11321__a = new Array(arguments.length -  1);
while (G__11321__i < G__11321__a.length) {G__11321__a[G__11321__i] = arguments[G__11321__i + 1]; ++G__11321__i;}
  args = new cljs.core.IndexedSeq(G__11321__a,0);
} 
return G__11320__delegate.call(this,f,args);};
G__11320.cljs$lang$maxFixedArity = 1;
G__11320.cljs$lang$applyTo = (function (arglist__11322){
var f = cljs.core.first(arglist__11322);
var args = cljs.core.rest(arglist__11322);
return G__11320__delegate(f,args);
});
G__11320.cljs$core$IFn$_invoke$arity$variadic = G__11320__delegate;
return G__11320;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__11323 = null;
if (arguments.length > 1) {
var G__11324__i = 0, G__11324__a = new Array(arguments.length -  1);
while (G__11324__i < G__11324__a.length) {G__11324__a[G__11324__i] = arguments[G__11324__i + 1]; ++G__11324__i;}
G__11323 = new cljs.core.IndexedSeq(G__11324__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__11323);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__11327 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11327) : Math.floor.call(null,G__11327));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__11329 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11329) : f.call(null,G__11329));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__11331 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11331) : cljs.core.atom.call(null,G__11331));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11332__i = 0, G__11332__a = new Array(arguments.length -  1);
while (G__11332__i < G__11332__a.length) {G__11332__a[G__11332__i] = arguments[G__11332__i + 1]; ++G__11332__i;}
  args = new cljs.core.IndexedSeq(G__11332__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__11333){
var f = cljs.core.first(arglist__11333);
var args = cljs.core.rest(arglist__11333);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11398 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11398) : cljs.core.deref.call(null,G__11398));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3764__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
var and__3752__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3752__auto__){
var and__3752__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3752__auto____$1){
var and__3752__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3752__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__11423 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__11421 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__11421) : child.call(null,G__11421));
})(),(function (){var G__11422 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__11422) : parent.call(null,G__11422));
})());
var G__11424 = (i + (1));
ret = G__11423;
i = G__11424;
continue;
}
break;
}
} else {
return and__3752__auto____$2;
}
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__11428 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11428) : cljs.core.deref.call(null,G__11428));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__11432 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11432) : cljs.core.deref.call(null,G__11432));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__11436 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11436) : cljs.core.deref.call(null,G__11436));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__11445 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__11445) : targets.call(null,G__11445));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__11446 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__11446) : sources.call(null,G__11446));
})()));
});})(tp,td,ta))
;
var or__3764__auto__ = ((cljs.core.contains_QMARK_((function (){var G__11450 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__11450) : tp.call(null,G__11450));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__11451 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11451) : ta.call(null,G__11451));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__11452 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11452) : ta.call(null,G__11452));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__11459 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11459) : parentMap.call(null,G__11459));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__11460 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11460) : parentMap.call(null,G__11460));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__11453_SHARP_){
return cljs.core.cons(cljs.core.first(p1__11453_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__11453_SHARP_),cljs.core.second(p1__11453_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__11461 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11461) : parentMap.call(null,G__11461));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__11454_SHARP_,p2__11455_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__11454_SHARP_,p2__11455_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__11464 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11464) : cljs.core.deref.call(null,G__11464));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__11465 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11465) : cljs.core.deref.call(null,G__11465));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__11481 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11481) : cljs.core.deref.call(null,G__11481));
})().call(null,x);
var or__3764__auto__ = (cljs.core.truth_((function (){var and__3752__auto__ = xprefs;
if(cljs.core.truth_(and__3752__auto__)){
var G__11483 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__11483) : xprefs.call(null,G__11483));
} else {
return and__3752__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__11484 = cljs.core.rest(ps);
ps = G__11484;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var or__3764__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__11485 = cljs.core.rest(ps);
ps = G__11485;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3764__auto____$2)){
return or__3764__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3764__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__11499){
var vec__11500 = p__11499;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11500,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11500,(1),null);
var e = vec__11500;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11501 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11501) : cljs.core.deref.call(null,G__11501));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3764__auto__ = (be == null);
if(or__3764__auto__){
return or__3764__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__11502 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11502) : cljs.core.deref.call(null,G__11502));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11503 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11503) : cljs.core.deref.call(null,G__11503));
})(),(function (){var G__11504 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11504) : cljs.core.deref.call(null,G__11504));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj11506 = {};
return obj11506;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3752__auto__ = mf;
if(and__3752__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3752__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4408__auto__ = (((mf == null))?null:mf);
return (function (){var or__3764__auto__ = (cljs.core._reset[(function (){var G__11510 = x__4408__auto__;
return goog.typeOf(G__11510);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._reset["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3752__auto__ = mf;
if(and__3752__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3752__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4408__auto__ = (((mf == null))?null:mf);
return (function (){var or__3764__auto__ = (cljs.core._add_method[(function (){var G__11514 = x__4408__auto__;
return goog.typeOf(G__11514);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._add_method["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3752__auto__ = mf;
if(and__3752__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3752__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4408__auto__ = (((mf == null))?null:mf);
return (function (){var or__3764__auto__ = (cljs.core._remove_method[(function (){var G__11518 = x__4408__auto__;
return goog.typeOf(G__11518);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3752__auto__ = mf;
if(and__3752__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3752__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4408__auto__ = (((mf == null))?null:mf);
return (function (){var or__3764__auto__ = (cljs.core._prefer_method[(function (){var G__11522 = x__4408__auto__;
return goog.typeOf(G__11522);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3752__auto__ = mf;
if(and__3752__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3752__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4408__auto__ = (((mf == null))?null:mf);
return (function (){var or__3764__auto__ = (cljs.core._get_method[(function (){var G__11526 = x__4408__auto__;
return goog.typeOf(G__11526);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._get_method["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3752__auto__ = mf;
if(and__3752__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3752__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4408__auto__ = (((mf == null))?null:mf);
return (function (){var or__3764__auto__ = (cljs.core._methods[(function (){var G__11530 = x__4408__auto__;
return goog.typeOf(G__11530);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._methods["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3752__auto__ = mf;
if(and__3752__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3752__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4408__auto__ = (((mf == null))?null:mf);
return (function (){var or__3764__auto__ = (cljs.core._prefers[(function (){var G__11534 = x__4408__auto__;
return goog.typeOf(G__11534);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._prefers["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11536 = this$__$1;
return goog.getUid(G__11536);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11537 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11537) : cljs.core.deref.call(null,G__11537));
})(),(function (){var G__11538 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11538) : cljs.core.deref.call(null,G__11538));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__11539 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11539) : cljs.core.deref.call(null,G__11539));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__11540 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11540) : cljs.core.deref.call(null,G__11540));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11541 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11541) : cljs.core.deref.call(null,G__11541));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11542 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11542) : cljs.core.deref.call(null,G__11542));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__12383 = null;
var G__12383__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__12383__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11543 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11543) : self__.dispatch_fn.call(null,G__11543));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11544 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11544) : target_fn.call(null,G__11544));
});
var G__12383__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11545 = a;
var G__11546 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11545,G__11546) : self__.dispatch_fn.call(null,G__11545,G__11546));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11547 = a;
var G__11548 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11547,G__11548) : target_fn.call(null,G__11547,G__11548));
});
var G__12383__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11549 = a;
var G__11550 = b;
var G__11551 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11549,G__11550,G__11551) : self__.dispatch_fn.call(null,G__11549,G__11550,G__11551));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11552 = a;
var G__11553 = b;
var G__11554 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11552,G__11553,G__11554) : target_fn.call(null,G__11552,G__11553,G__11554));
});
var G__12383__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11555 = a;
var G__11556 = b;
var G__11557 = c;
var G__11558 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11555,G__11556,G__11557,G__11558) : self__.dispatch_fn.call(null,G__11555,G__11556,G__11557,G__11558));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11559 = a;
var G__11560 = b;
var G__11561 = c;
var G__11562 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11559,G__11560,G__11561,G__11562) : target_fn.call(null,G__11559,G__11560,G__11561,G__11562));
});
var G__12383__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11563 = a;
var G__11564 = b;
var G__11565 = c;
var G__11566 = d;
var G__11567 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11563,G__11564,G__11565,G__11566,G__11567) : self__.dispatch_fn.call(null,G__11563,G__11564,G__11565,G__11566,G__11567));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11568 = a;
var G__11569 = b;
var G__11570 = c;
var G__11571 = d;
var G__11572 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11568,G__11569,G__11570,G__11571,G__11572) : target_fn.call(null,G__11568,G__11569,G__11570,G__11571,G__11572));
});
var G__12383__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11573 = a;
var G__11574 = b;
var G__11575 = c;
var G__11576 = d;
var G__11577 = e;
var G__11578 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11573,G__11574,G__11575,G__11576,G__11577,G__11578) : self__.dispatch_fn.call(null,G__11573,G__11574,G__11575,G__11576,G__11577,G__11578));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11579 = a;
var G__11580 = b;
var G__11581 = c;
var G__11582 = d;
var G__11583 = e;
var G__11584 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11579,G__11580,G__11581,G__11582,G__11583,G__11584) : target_fn.call(null,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584));
});
var G__12383__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11585 = a;
var G__11586 = b;
var G__11587 = c;
var G__11588 = d;
var G__11589 = e;
var G__11590 = f;
var G__11591 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11585,G__11586,G__11587,G__11588,G__11589,G__11590,G__11591) : self__.dispatch_fn.call(null,G__11585,G__11586,G__11587,G__11588,G__11589,G__11590,G__11591));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11592 = a;
var G__11593 = b;
var G__11594 = c;
var G__11595 = d;
var G__11596 = e;
var G__11597 = f;
var G__11598 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11592,G__11593,G__11594,G__11595,G__11596,G__11597,G__11598) : target_fn.call(null,G__11592,G__11593,G__11594,G__11595,G__11596,G__11597,G__11598));
});
var G__12383__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11599 = a;
var G__11600 = b;
var G__11601 = c;
var G__11602 = d;
var G__11603 = e;
var G__11604 = f;
var G__11605 = g;
var G__11606 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606) : self__.dispatch_fn.call(null,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11607 = a;
var G__11608 = b;
var G__11609 = c;
var G__11610 = d;
var G__11611 = e;
var G__11612 = f;
var G__11613 = g;
var G__11614 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11607,G__11608,G__11609,G__11610,G__11611,G__11612,G__11613,G__11614) : target_fn.call(null,G__11607,G__11608,G__11609,G__11610,G__11611,G__11612,G__11613,G__11614));
});
var G__12383__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11615 = a;
var G__11616 = b;
var G__11617 = c;
var G__11618 = d;
var G__11619 = e;
var G__11620 = f;
var G__11621 = g;
var G__11622 = h;
var G__11623 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623) : self__.dispatch_fn.call(null,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11624 = a;
var G__11625 = b;
var G__11626 = c;
var G__11627 = d;
var G__11628 = e;
var G__11629 = f;
var G__11630 = g;
var G__11631 = h;
var G__11632 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11624,G__11625,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632) : target_fn.call(null,G__11624,G__11625,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632));
});
var G__12383__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11633 = a;
var G__11634 = b;
var G__11635 = c;
var G__11636 = d;
var G__11637 = e;
var G__11638 = f;
var G__11639 = g;
var G__11640 = h;
var G__11641 = i;
var G__11642 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11633,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642) : self__.dispatch_fn.call(null,G__11633,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11643 = a;
var G__11644 = b;
var G__11645 = c;
var G__11646 = d;
var G__11647 = e;
var G__11648 = f;
var G__11649 = g;
var G__11650 = h;
var G__11651 = i;
var G__11652 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650,G__11651,G__11652) : target_fn.call(null,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650,G__11651,G__11652));
});
var G__12383__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11653 = a;
var G__11654 = b;
var G__11655 = c;
var G__11656 = d;
var G__11657 = e;
var G__11658 = f;
var G__11659 = g;
var G__11660 = h;
var G__11661 = i;
var G__11662 = j;
var G__11663 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661,G__11662,G__11663) : self__.dispatch_fn.call(null,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661,G__11662,G__11663));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11664 = a;
var G__11665 = b;
var G__11666 = c;
var G__11667 = d;
var G__11668 = e;
var G__11669 = f;
var G__11670 = g;
var G__11671 = h;
var G__11672 = i;
var G__11673 = j;
var G__11674 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11664,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674) : target_fn.call(null,G__11664,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674));
});
var G__12383__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11675 = a;
var G__11676 = b;
var G__11677 = c;
var G__11678 = d;
var G__11679 = e;
var G__11680 = f;
var G__11681 = g;
var G__11682 = h;
var G__11683 = i;
var G__11684 = j;
var G__11685 = k;
var G__11686 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11675,G__11676,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682,G__11683,G__11684,G__11685,G__11686) : self__.dispatch_fn.call(null,G__11675,G__11676,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682,G__11683,G__11684,G__11685,G__11686));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11687 = a;
var G__11688 = b;
var G__11689 = c;
var G__11690 = d;
var G__11691 = e;
var G__11692 = f;
var G__11693 = g;
var G__11694 = h;
var G__11695 = i;
var G__11696 = j;
var G__11697 = k;
var G__11698 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693,G__11694,G__11695,G__11696,G__11697,G__11698) : target_fn.call(null,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693,G__11694,G__11695,G__11696,G__11697,G__11698));
});
var G__12383__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11699 = a;
var G__11700 = b;
var G__11701 = c;
var G__11702 = d;
var G__11703 = e;
var G__11704 = f;
var G__11705 = g;
var G__11706 = h;
var G__11707 = i;
var G__11708 = j;
var G__11709 = k;
var G__11710 = l;
var G__11711 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708,G__11709,G__11710,G__11711) : self__.dispatch_fn.call(null,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708,G__11709,G__11710,G__11711));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11712 = a;
var G__11713 = b;
var G__11714 = c;
var G__11715 = d;
var G__11716 = e;
var G__11717 = f;
var G__11718 = g;
var G__11719 = h;
var G__11720 = i;
var G__11721 = j;
var G__11722 = k;
var G__11723 = l;
var G__11724 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11712,G__11713,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724) : target_fn.call(null,G__11712,G__11713,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724));
});
var G__12383__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11725 = a;
var G__11726 = b;
var G__11727 = c;
var G__11728 = d;
var G__11729 = e;
var G__11730 = f;
var G__11731 = g;
var G__11732 = h;
var G__11733 = i;
var G__11734 = j;
var G__11735 = k;
var G__11736 = l;
var G__11737 = m;
var G__11738 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,G__11732,G__11733,G__11734,G__11735,G__11736,G__11737,G__11738) : self__.dispatch_fn.call(null,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,G__11732,G__11733,G__11734,G__11735,G__11736,G__11737,G__11738));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11739 = a;
var G__11740 = b;
var G__11741 = c;
var G__11742 = d;
var G__11743 = e;
var G__11744 = f;
var G__11745 = g;
var G__11746 = h;
var G__11747 = i;
var G__11748 = j;
var G__11749 = k;
var G__11750 = l;
var G__11751 = m;
var G__11752 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11739,G__11740,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746,G__11747,G__11748,G__11749,G__11750,G__11751,G__11752) : target_fn.call(null,G__11739,G__11740,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746,G__11747,G__11748,G__11749,G__11750,G__11751,G__11752));
});
var G__12383__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11753 = a;
var G__11754 = b;
var G__11755 = c;
var G__11756 = d;
var G__11757 = e;
var G__11758 = f;
var G__11759 = g;
var G__11760 = h;
var G__11761 = i;
var G__11762 = j;
var G__11763 = k;
var G__11764 = l;
var G__11765 = m;
var G__11766 = n;
var G__11767 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11753,G__11754,G__11755,G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767) : self__.dispatch_fn.call(null,G__11753,G__11754,G__11755,G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11768 = a;
var G__11769 = b;
var G__11770 = c;
var G__11771 = d;
var G__11772 = e;
var G__11773 = f;
var G__11774 = g;
var G__11775 = h;
var G__11776 = i;
var G__11777 = j;
var G__11778 = k;
var G__11779 = l;
var G__11780 = m;
var G__11781 = n;
var G__11782 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11768,G__11769,G__11770,G__11771,G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782) : target_fn.call(null,G__11768,G__11769,G__11770,G__11771,G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782));
});
var G__12383__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11783 = a;
var G__11784 = b;
var G__11785 = c;
var G__11786 = d;
var G__11787 = e;
var G__11788 = f;
var G__11789 = g;
var G__11790 = h;
var G__11791 = i;
var G__11792 = j;
var G__11793 = k;
var G__11794 = l;
var G__11795 = m;
var G__11796 = n;
var G__11797 = o;
var G__11798 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798) : self__.dispatch_fn.call(null,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11799 = a;
var G__11800 = b;
var G__11801 = c;
var G__11802 = d;
var G__11803 = e;
var G__11804 = f;
var G__11805 = g;
var G__11806 = h;
var G__11807 = i;
var G__11808 = j;
var G__11809 = k;
var G__11810 = l;
var G__11811 = m;
var G__11812 = n;
var G__11813 = o;
var G__11814 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11799,G__11800,G__11801,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814) : target_fn.call(null,G__11799,G__11800,G__11801,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814));
});
var G__12383__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11815 = a;
var G__11816 = b;
var G__11817 = c;
var G__11818 = d;
var G__11819 = e;
var G__11820 = f;
var G__11821 = g;
var G__11822 = h;
var G__11823 = i;
var G__11824 = j;
var G__11825 = k;
var G__11826 = l;
var G__11827 = m;
var G__11828 = n;
var G__11829 = o;
var G__11830 = p;
var G__11831 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11815,G__11816,G__11817,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827,G__11828,G__11829,G__11830,G__11831) : self__.dispatch_fn.call(null,G__11815,G__11816,G__11817,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827,G__11828,G__11829,G__11830,G__11831));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11832 = a;
var G__11833 = b;
var G__11834 = c;
var G__11835 = d;
var G__11836 = e;
var G__11837 = f;
var G__11838 = g;
var G__11839 = h;
var G__11840 = i;
var G__11841 = j;
var G__11842 = k;
var G__11843 = l;
var G__11844 = m;
var G__11845 = n;
var G__11846 = o;
var G__11847 = p;
var G__11848 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11832,G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848) : target_fn.call(null,G__11832,G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848));
});
var G__12383__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11849 = a;
var G__11850 = b;
var G__11851 = c;
var G__11852 = d;
var G__11853 = e;
var G__11854 = f;
var G__11855 = g;
var G__11856 = h;
var G__11857 = i;
var G__11858 = j;
var G__11859 = k;
var G__11860 = l;
var G__11861 = m;
var G__11862 = n;
var G__11863 = o;
var G__11864 = p;
var G__11865 = q;
var G__11866 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866) : self__.dispatch_fn.call(null,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11867 = a;
var G__11868 = b;
var G__11869 = c;
var G__11870 = d;
var G__11871 = e;
var G__11872 = f;
var G__11873 = g;
var G__11874 = h;
var G__11875 = i;
var G__11876 = j;
var G__11877 = k;
var G__11878 = l;
var G__11879 = m;
var G__11880 = n;
var G__11881 = o;
var G__11882 = p;
var G__11883 = q;
var G__11884 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11867,G__11868,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884) : target_fn.call(null,G__11867,G__11868,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884));
});
var G__12383__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11885 = a;
var G__11886 = b;
var G__11887 = c;
var G__11888 = d;
var G__11889 = e;
var G__11890 = f;
var G__11891 = g;
var G__11892 = h;
var G__11893 = i;
var G__11894 = j;
var G__11895 = k;
var G__11896 = l;
var G__11897 = m;
var G__11898 = n;
var G__11899 = o;
var G__11900 = p;
var G__11901 = q;
var G__11902 = r;
var G__11903 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11885,G__11886,G__11887,G__11888,G__11889,G__11890,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903) : self__.dispatch_fn.call(null,G__11885,G__11886,G__11887,G__11888,G__11889,G__11890,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11904 = a;
var G__11905 = b;
var G__11906 = c;
var G__11907 = d;
var G__11908 = e;
var G__11909 = f;
var G__11910 = g;
var G__11911 = h;
var G__11912 = i;
var G__11913 = j;
var G__11914 = k;
var G__11915 = l;
var G__11916 = m;
var G__11917 = n;
var G__11918 = o;
var G__11919 = p;
var G__11920 = q;
var G__11921 = r;
var G__11922 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11904,G__11905,G__11906,G__11907,G__11908,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922) : target_fn.call(null,G__11904,G__11905,G__11906,G__11907,G__11908,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922));
});
var G__12383__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11923 = a;
var G__11924 = b;
var G__11925 = c;
var G__11926 = d;
var G__11927 = e;
var G__11928 = f;
var G__11929 = g;
var G__11930 = h;
var G__11931 = i;
var G__11932 = j;
var G__11933 = k;
var G__11934 = l;
var G__11935 = m;
var G__11936 = n;
var G__11937 = o;
var G__11938 = p;
var G__11939 = q;
var G__11940 = r;
var G__11941 = s;
var G__11942 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11923,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942) : self__.dispatch_fn.call(null,G__11923,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11943 = a;
var G__11944 = b;
var G__11945 = c;
var G__11946 = d;
var G__11947 = e;
var G__11948 = f;
var G__11949 = g;
var G__11950 = h;
var G__11951 = i;
var G__11952 = j;
var G__11953 = k;
var G__11954 = l;
var G__11955 = m;
var G__11956 = n;
var G__11957 = o;
var G__11958 = p;
var G__11959 = q;
var G__11960 = r;
var G__11961 = s;
var G__11962 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11943,G__11944,G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959,G__11960,G__11961,G__11962) : target_fn.call(null,G__11943,G__11944,G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959,G__11960,G__11961,G__11962));
});
var G__12383__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__12383 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12383__1.call(this,self__);
case 2:
return G__12383__2.call(this,self__,a);
case 3:
return G__12383__3.call(this,self__,a,b);
case 4:
return G__12383__4.call(this,self__,a,b,c);
case 5:
return G__12383__5.call(this,self__,a,b,c,d);
case 6:
return G__12383__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12383__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12383__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12383__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12383__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12383__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12383__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12383__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12383__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12383__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12383__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12383__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12383__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12383__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12383__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12383__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12383__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12383.cljs$core$IFn$_invoke$arity$1 = G__12383__1;
G__12383.cljs$core$IFn$_invoke$arity$2 = G__12383__2;
G__12383.cljs$core$IFn$_invoke$arity$3 = G__12383__3;
G__12383.cljs$core$IFn$_invoke$arity$4 = G__12383__4;
G__12383.cljs$core$IFn$_invoke$arity$5 = G__12383__5;
G__12383.cljs$core$IFn$_invoke$arity$6 = G__12383__6;
G__12383.cljs$core$IFn$_invoke$arity$7 = G__12383__7;
G__12383.cljs$core$IFn$_invoke$arity$8 = G__12383__8;
G__12383.cljs$core$IFn$_invoke$arity$9 = G__12383__9;
G__12383.cljs$core$IFn$_invoke$arity$10 = G__12383__10;
G__12383.cljs$core$IFn$_invoke$arity$11 = G__12383__11;
G__12383.cljs$core$IFn$_invoke$arity$12 = G__12383__12;
G__12383.cljs$core$IFn$_invoke$arity$13 = G__12383__13;
G__12383.cljs$core$IFn$_invoke$arity$14 = G__12383__14;
G__12383.cljs$core$IFn$_invoke$arity$15 = G__12383__15;
G__12383.cljs$core$IFn$_invoke$arity$16 = G__12383__16;
G__12383.cljs$core$IFn$_invoke$arity$17 = G__12383__17;
G__12383.cljs$core$IFn$_invoke$arity$18 = G__12383__18;
G__12383.cljs$core$IFn$_invoke$arity$19 = G__12383__19;
G__12383.cljs$core$IFn$_invoke$arity$20 = G__12383__20;
G__12383.cljs$core$IFn$_invoke$arity$21 = G__12383__21;
G__12383.cljs$core$IFn$_invoke$arity$22 = G__12383__22;
return G__12383;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args11535){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11535)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11963 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11963) : self__.dispatch_fn.call(null,G__11963));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11964 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11964) : target_fn.call(null,G__11964));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11965 = a;
var G__11966 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11965,G__11966) : self__.dispatch_fn.call(null,G__11965,G__11966));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11967 = a;
var G__11968 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11967,G__11968) : target_fn.call(null,G__11967,G__11968));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11969 = a;
var G__11970 = b;
var G__11971 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11969,G__11970,G__11971) : self__.dispatch_fn.call(null,G__11969,G__11970,G__11971));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11972 = a;
var G__11973 = b;
var G__11974 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11972,G__11973,G__11974) : target_fn.call(null,G__11972,G__11973,G__11974));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11975 = a;
var G__11976 = b;
var G__11977 = c;
var G__11978 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11975,G__11976,G__11977,G__11978) : self__.dispatch_fn.call(null,G__11975,G__11976,G__11977,G__11978));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11979 = a;
var G__11980 = b;
var G__11981 = c;
var G__11982 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11979,G__11980,G__11981,G__11982) : target_fn.call(null,G__11979,G__11980,G__11981,G__11982));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11983 = a;
var G__11984 = b;
var G__11985 = c;
var G__11986 = d;
var G__11987 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11983,G__11984,G__11985,G__11986,G__11987) : self__.dispatch_fn.call(null,G__11983,G__11984,G__11985,G__11986,G__11987));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11988 = a;
var G__11989 = b;
var G__11990 = c;
var G__11991 = d;
var G__11992 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11988,G__11989,G__11990,G__11991,G__11992) : target_fn.call(null,G__11988,G__11989,G__11990,G__11991,G__11992));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11993 = a;
var G__11994 = b;
var G__11995 = c;
var G__11996 = d;
var G__11997 = e;
var G__11998 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11993,G__11994,G__11995,G__11996,G__11997,G__11998) : self__.dispatch_fn.call(null,G__11993,G__11994,G__11995,G__11996,G__11997,G__11998));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11999 = a;
var G__12000 = b;
var G__12001 = c;
var G__12002 = d;
var G__12003 = e;
var G__12004 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11999,G__12000,G__12001,G__12002,G__12003,G__12004) : target_fn.call(null,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12005 = a;
var G__12006 = b;
var G__12007 = c;
var G__12008 = d;
var G__12009 = e;
var G__12010 = f;
var G__12011 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12005,G__12006,G__12007,G__12008,G__12009,G__12010,G__12011) : self__.dispatch_fn.call(null,G__12005,G__12006,G__12007,G__12008,G__12009,G__12010,G__12011));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12012 = a;
var G__12013 = b;
var G__12014 = c;
var G__12015 = d;
var G__12016 = e;
var G__12017 = f;
var G__12018 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12012,G__12013,G__12014,G__12015,G__12016,G__12017,G__12018) : target_fn.call(null,G__12012,G__12013,G__12014,G__12015,G__12016,G__12017,G__12018));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12019 = a;
var G__12020 = b;
var G__12021 = c;
var G__12022 = d;
var G__12023 = e;
var G__12024 = f;
var G__12025 = g;
var G__12026 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12019,G__12020,G__12021,G__12022,G__12023,G__12024,G__12025,G__12026) : self__.dispatch_fn.call(null,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024,G__12025,G__12026));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12027 = a;
var G__12028 = b;
var G__12029 = c;
var G__12030 = d;
var G__12031 = e;
var G__12032 = f;
var G__12033 = g;
var G__12034 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034) : target_fn.call(null,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12035 = a;
var G__12036 = b;
var G__12037 = c;
var G__12038 = d;
var G__12039 = e;
var G__12040 = f;
var G__12041 = g;
var G__12042 = h;
var G__12043 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043) : self__.dispatch_fn.call(null,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12044 = a;
var G__12045 = b;
var G__12046 = c;
var G__12047 = d;
var G__12048 = e;
var G__12049 = f;
var G__12050 = g;
var G__12051 = h;
var G__12052 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12044,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052) : target_fn.call(null,G__12044,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12053 = a;
var G__12054 = b;
var G__12055 = c;
var G__12056 = d;
var G__12057 = e;
var G__12058 = f;
var G__12059 = g;
var G__12060 = h;
var G__12061 = i;
var G__12062 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12053,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059,G__12060,G__12061,G__12062) : self__.dispatch_fn.call(null,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059,G__12060,G__12061,G__12062));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12063 = a;
var G__12064 = b;
var G__12065 = c;
var G__12066 = d;
var G__12067 = e;
var G__12068 = f;
var G__12069 = g;
var G__12070 = h;
var G__12071 = i;
var G__12072 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072) : target_fn.call(null,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12073 = a;
var G__12074 = b;
var G__12075 = c;
var G__12076 = d;
var G__12077 = e;
var G__12078 = f;
var G__12079 = g;
var G__12080 = h;
var G__12081 = i;
var G__12082 = j;
var G__12083 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12073,G__12074,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080,G__12081,G__12082,G__12083) : self__.dispatch_fn.call(null,G__12073,G__12074,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080,G__12081,G__12082,G__12083));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12084 = a;
var G__12085 = b;
var G__12086 = c;
var G__12087 = d;
var G__12088 = e;
var G__12089 = f;
var G__12090 = g;
var G__12091 = h;
var G__12092 = i;
var G__12093 = j;
var G__12094 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12084,G__12085,G__12086,G__12087,G__12088,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094) : target_fn.call(null,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12095 = a;
var G__12096 = b;
var G__12097 = c;
var G__12098 = d;
var G__12099 = e;
var G__12100 = f;
var G__12101 = g;
var G__12102 = h;
var G__12103 = i;
var G__12104 = j;
var G__12105 = k;
var G__12106 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12095,G__12096,G__12097,G__12098,G__12099,G__12100,G__12101,G__12102,G__12103,G__12104,G__12105,G__12106) : self__.dispatch_fn.call(null,G__12095,G__12096,G__12097,G__12098,G__12099,G__12100,G__12101,G__12102,G__12103,G__12104,G__12105,G__12106));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12107 = a;
var G__12108 = b;
var G__12109 = c;
var G__12110 = d;
var G__12111 = e;
var G__12112 = f;
var G__12113 = g;
var G__12114 = h;
var G__12115 = i;
var G__12116 = j;
var G__12117 = k;
var G__12118 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114,G__12115,G__12116,G__12117,G__12118) : target_fn.call(null,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114,G__12115,G__12116,G__12117,G__12118));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12119 = a;
var G__12120 = b;
var G__12121 = c;
var G__12122 = d;
var G__12123 = e;
var G__12124 = f;
var G__12125 = g;
var G__12126 = h;
var G__12127 = i;
var G__12128 = j;
var G__12129 = k;
var G__12130 = l;
var G__12131 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12119,G__12120,G__12121,G__12122,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131) : self__.dispatch_fn.call(null,G__12119,G__12120,G__12121,G__12122,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12132 = a;
var G__12133 = b;
var G__12134 = c;
var G__12135 = d;
var G__12136 = e;
var G__12137 = f;
var G__12138 = g;
var G__12139 = h;
var G__12140 = i;
var G__12141 = j;
var G__12142 = k;
var G__12143 = l;
var G__12144 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12132,G__12133,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144) : target_fn.call(null,G__12132,G__12133,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12145 = a;
var G__12146 = b;
var G__12147 = c;
var G__12148 = d;
var G__12149 = e;
var G__12150 = f;
var G__12151 = g;
var G__12152 = h;
var G__12153 = i;
var G__12154 = j;
var G__12155 = k;
var G__12156 = l;
var G__12157 = m;
var G__12158 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158) : self__.dispatch_fn.call(null,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12159 = a;
var G__12160 = b;
var G__12161 = c;
var G__12162 = d;
var G__12163 = e;
var G__12164 = f;
var G__12165 = g;
var G__12166 = h;
var G__12167 = i;
var G__12168 = j;
var G__12169 = k;
var G__12170 = l;
var G__12171 = m;
var G__12172 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12159,G__12160,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172) : target_fn.call(null,G__12159,G__12160,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12173 = a;
var G__12174 = b;
var G__12175 = c;
var G__12176 = d;
var G__12177 = e;
var G__12178 = f;
var G__12179 = g;
var G__12180 = h;
var G__12181 = i;
var G__12182 = j;
var G__12183 = k;
var G__12184 = l;
var G__12185 = m;
var G__12186 = n;
var G__12187 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12173,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187) : self__.dispatch_fn.call(null,G__12173,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12188 = a;
var G__12189 = b;
var G__12190 = c;
var G__12191 = d;
var G__12192 = e;
var G__12193 = f;
var G__12194 = g;
var G__12195 = h;
var G__12196 = i;
var G__12197 = j;
var G__12198 = k;
var G__12199 = l;
var G__12200 = m;
var G__12201 = n;
var G__12202 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12188,G__12189,G__12190,G__12191,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202) : target_fn.call(null,G__12188,G__12189,G__12190,G__12191,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12203 = a;
var G__12204 = b;
var G__12205 = c;
var G__12206 = d;
var G__12207 = e;
var G__12208 = f;
var G__12209 = g;
var G__12210 = h;
var G__12211 = i;
var G__12212 = j;
var G__12213 = k;
var G__12214 = l;
var G__12215 = m;
var G__12216 = n;
var G__12217 = o;
var G__12218 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12203,G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210,G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218) : self__.dispatch_fn.call(null,G__12203,G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210,G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12219 = a;
var G__12220 = b;
var G__12221 = c;
var G__12222 = d;
var G__12223 = e;
var G__12224 = f;
var G__12225 = g;
var G__12226 = h;
var G__12227 = i;
var G__12228 = j;
var G__12229 = k;
var G__12230 = l;
var G__12231 = m;
var G__12232 = n;
var G__12233 = o;
var G__12234 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12219,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234) : target_fn.call(null,G__12219,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12235 = a;
var G__12236 = b;
var G__12237 = c;
var G__12238 = d;
var G__12239 = e;
var G__12240 = f;
var G__12241 = g;
var G__12242 = h;
var G__12243 = i;
var G__12244 = j;
var G__12245 = k;
var G__12246 = l;
var G__12247 = m;
var G__12248 = n;
var G__12249 = o;
var G__12250 = p;
var G__12251 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12235,G__12236,G__12237,G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248,G__12249,G__12250,G__12251) : self__.dispatch_fn.call(null,G__12235,G__12236,G__12237,G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248,G__12249,G__12250,G__12251));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12252 = a;
var G__12253 = b;
var G__12254 = c;
var G__12255 = d;
var G__12256 = e;
var G__12257 = f;
var G__12258 = g;
var G__12259 = h;
var G__12260 = i;
var G__12261 = j;
var G__12262 = k;
var G__12263 = l;
var G__12264 = m;
var G__12265 = n;
var G__12266 = o;
var G__12267 = p;
var G__12268 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12252,G__12253,G__12254,G__12255,G__12256,G__12257,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268) : target_fn.call(null,G__12252,G__12253,G__12254,G__12255,G__12256,G__12257,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12269 = a;
var G__12270 = b;
var G__12271 = c;
var G__12272 = d;
var G__12273 = e;
var G__12274 = f;
var G__12275 = g;
var G__12276 = h;
var G__12277 = i;
var G__12278 = j;
var G__12279 = k;
var G__12280 = l;
var G__12281 = m;
var G__12282 = n;
var G__12283 = o;
var G__12284 = p;
var G__12285 = q;
var G__12286 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12269,G__12270,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276,G__12277,G__12278,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284,G__12285,G__12286) : self__.dispatch_fn.call(null,G__12269,G__12270,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276,G__12277,G__12278,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284,G__12285,G__12286));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12287 = a;
var G__12288 = b;
var G__12289 = c;
var G__12290 = d;
var G__12291 = e;
var G__12292 = f;
var G__12293 = g;
var G__12294 = h;
var G__12295 = i;
var G__12296 = j;
var G__12297 = k;
var G__12298 = l;
var G__12299 = m;
var G__12300 = n;
var G__12301 = o;
var G__12302 = p;
var G__12303 = q;
var G__12304 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__12287,G__12288,G__12289,G__12290,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297,G__12298,G__12299,G__12300,G__12301,G__12302,G__12303,G__12304) : target_fn.call(null,G__12287,G__12288,G__12289,G__12290,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297,G__12298,G__12299,G__12300,G__12301,G__12302,G__12303,G__12304));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12305 = a;
var G__12306 = b;
var G__12307 = c;
var G__12308 = d;
var G__12309 = e;
var G__12310 = f;
var G__12311 = g;
var G__12312 = h;
var G__12313 = i;
var G__12314 = j;
var G__12315 = k;
var G__12316 = l;
var G__12317 = m;
var G__12318 = n;
var G__12319 = o;
var G__12320 = p;
var G__12321 = q;
var G__12322 = r;
var G__12323 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__12305,G__12306,G__12307,G__12308,G__12309,G__12310,G__12311,G__12312,G__12313,G__12314,G__12315,G__12316,G__12317,G__12318,G__12319,G__12320,G__12321,G__12322,G__12323) : self__.dispatch_fn.call(null,G__12305,G__12306,G__12307,G__12308,G__12309,G__12310,G__12311,G__12312,G__12313,G__12314,G__12315,G__12316,G__12317,G__12318,G__12319,G__12320,G__12321,G__12322,G__12323));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12324 = a;
var G__12325 = b;
var G__12326 = c;
var G__12327 = d;
var G__12328 = e;
var G__12329 = f;
var G__12330 = g;
var G__12331 = h;
var G__12332 = i;
var G__12333 = j;
var G__12334 = k;
var G__12335 = l;
var G__12336 = m;
var G__12337 = n;
var G__12338 = o;
var G__12339 = p;
var G__12340 = q;
var G__12341 = r;
var G__12342 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__12324,G__12325,G__12326,G__12327,G__12328,G__12329,G__12330,G__12331,G__12332,G__12333,G__12334,G__12335,G__12336,G__12337,G__12338,G__12339,G__12340,G__12341,G__12342) : target_fn.call(null,G__12324,G__12325,G__12326,G__12327,G__12328,G__12329,G__12330,G__12331,G__12332,G__12333,G__12334,G__12335,G__12336,G__12337,G__12338,G__12339,G__12340,G__12341,G__12342));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12343 = a;
var G__12344 = b;
var G__12345 = c;
var G__12346 = d;
var G__12347 = e;
var G__12348 = f;
var G__12349 = g;
var G__12350 = h;
var G__12351 = i;
var G__12352 = j;
var G__12353 = k;
var G__12354 = l;
var G__12355 = m;
var G__12356 = n;
var G__12357 = o;
var G__12358 = p;
var G__12359 = q;
var G__12360 = r;
var G__12361 = s;
var G__12362 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12343,G__12344,G__12345,G__12346,G__12347,G__12348,G__12349,G__12350,G__12351,G__12352,G__12353,G__12354,G__12355,G__12356,G__12357,G__12358,G__12359,G__12360,G__12361,G__12362) : self__.dispatch_fn.call(null,G__12343,G__12344,G__12345,G__12346,G__12347,G__12348,G__12349,G__12350,G__12351,G__12352,G__12353,G__12354,G__12355,G__12356,G__12357,G__12358,G__12359,G__12360,G__12361,G__12362));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12363 = a;
var G__12364 = b;
var G__12365 = c;
var G__12366 = d;
var G__12367 = e;
var G__12368 = f;
var G__12369 = g;
var G__12370 = h;
var G__12371 = i;
var G__12372 = j;
var G__12373 = k;
var G__12374 = l;
var G__12375 = m;
var G__12376 = n;
var G__12377 = o;
var G__12378 = p;
var G__12379 = q;
var G__12380 = r;
var G__12381 = s;
var G__12382 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12363,G__12364,G__12365,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371,G__12372,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378,G__12379,G__12380,G__12381,G__12382) : target_fn.call(null,G__12363,G__12364,G__12365,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371,G__12372,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378,G__12379,G__12380,G__12381,G__12382));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12384 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__12384);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__12389 = msg;
return Error(G__12389);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__12394 = x;
var G__12395 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12394,G__12395) : pred.call(null,G__12394,G__12395));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12396 = y;
var G__12397 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12396,G__12397) : pred.call(null,G__12396,G__12397));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
