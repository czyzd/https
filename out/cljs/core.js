// Compiled by ClojureScript 0.0-2814 {:elide-asserts true, :static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2814";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__11075__delegate = function (args){
return console.log.apply(console,(function (){var G__11074 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__11074) : cljs.core.into_array.call(null,G__11074));
})());
};
var G__11075 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11076__i = 0, G__11076__a = new Array(arguments.length -  0);
while (G__11076__i < G__11076__a.length) {G__11076__a[G__11076__i] = arguments[G__11076__i + 0]; ++G__11076__i;}
  args = new cljs.core.IndexedSeq(G__11076__a,0);
} 
return G__11075__delegate.call(this,args);};
G__11075.cljs$lang$maxFixedArity = 0;
G__11075.cljs$lang$applyTo = (function (arglist__11077){
var args = cljs.core.seq(arglist__11077);
return G__11075__delegate(args);
});
G__11075.cljs$core$IFn$_invoke$arity$variadic = G__11075__delegate;
return G__11075;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__11079 = x;
return goog.isString(G__11079);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__11081 = x__$1;
return goog.typeOf(G__11081);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3752__auto__ = ty;
if(cljs.core.truth_(and__3752__auto__)){
return ty.cljs$lang$type;
} else {
return and__3752__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__11083 = obj;
return goog.typeOf(G__11083);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__11085 = Symbol;
return goog.typeOf(G__11085);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4651__auto___11087 = len;
var i_11088 = (0);
while(true){
if((i_11088 < n__4651__auto___11087)){
(new_arr[i_11088] = (arr[i_11088]));

var G__11089 = (i_11088 + (1));
i_11088 = G__11089;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__11090 = (i + (1));
i = G__11090;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__11099__delegate = function (array,i,idxs){
var G__11096 = aget;
var G__11097 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__11098 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__11096,G__11097,G__11098) : cljs.core.apply.call(null,G__11096,G__11097,G__11098));
};
var G__11099 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__11100__i = 0, G__11100__a = new Array(arguments.length -  2);
while (G__11100__i < G__11100__a.length) {G__11100__a[G__11100__i] = arguments[G__11100__i + 2]; ++G__11100__i;}
  idxs = new cljs.core.IndexedSeq(G__11100__a,0);
} 
return G__11099__delegate.call(this,array,i,idxs);};
G__11099.cljs$lang$maxFixedArity = 2;
G__11099.cljs$lang$applyTo = (function (arglist__11101){
var array = cljs.core.first(arglist__11101);
arglist__11101 = cljs.core.next(arglist__11101);
var i = cljs.core.first(arglist__11101);
var idxs = cljs.core.rest(arglist__11101);
return G__11099__delegate(array,i,idxs);
});
G__11099.cljs$core$IFn$_invoke$arity$variadic = G__11099__delegate;
return G__11099;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__11102 = null;
if (arguments.length > 2) {
var G__11103__i = 0, G__11103__a = new Array(arguments.length -  2);
while (G__11103__i < G__11103__a.length) {G__11103__a[G__11103__i] = arguments[G__11103__i + 2]; ++G__11103__i;}
G__11102 = new cljs.core.IndexedSeq(G__11103__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__11102);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__11112__delegate = function (array,idx,idx2,idxv){
var G__11108 = aset;
var G__11109 = (array[idx]);
var G__11110 = idx2;
var G__11111 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__11108,G__11109,G__11110,G__11111) : cljs.core.apply.call(null,G__11108,G__11109,G__11110,G__11111));
};
var G__11112 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__11113__i = 0, G__11113__a = new Array(arguments.length -  3);
while (G__11113__i < G__11113__a.length) {G__11113__a[G__11113__i] = arguments[G__11113__i + 3]; ++G__11113__i;}
  idxv = new cljs.core.IndexedSeq(G__11113__a,0);
} 
return G__11112__delegate.call(this,array,idx,idx2,idxv);};
G__11112.cljs$lang$maxFixedArity = 3;
G__11112.cljs$lang$applyTo = (function (arglist__11114){
var array = cljs.core.first(arglist__11114);
arglist__11114 = cljs.core.next(arglist__11114);
var idx = cljs.core.first(arglist__11114);
arglist__11114 = cljs.core.next(arglist__11114);
var idx2 = cljs.core.first(arglist__11114);
var idxv = cljs.core.rest(arglist__11114);
return G__11112__delegate(array,idx,idx2,idxv);
});
G__11112.cljs$core$IFn$_invoke$arity$variadic = G__11112__delegate;
return G__11112;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__11115 = null;
if (arguments.length > 3) {
var G__11116__i = 0, G__11116__a = new Array(arguments.length -  3);
while (G__11116__i < G__11116__a.length) {G__11116__a[G__11116__i] = arguments[G__11116__i + 3]; ++G__11116__i;}
G__11115 = new cljs.core.IndexedSeq(G__11116__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__11115);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__11122 = (function (a,x){
a.push(x);

return a;
});
var G__11123 = [];
var G__11124 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11122,G__11123,G__11124) : cljs.core.reduce.call(null,G__11122,G__11123,G__11124));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__11125__i = 0, G__11125__a = new Array(arguments.length -  2);
while (G__11125__i < G__11125__a.length) {G__11125__a[G__11125__i] = arguments[G__11125__i + 2]; ++G__11125__i;}
  args = new cljs.core.IndexedSeq(G__11125__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__11126){
var obj = cljs.core.first(arglist__11126);
arglist__11126 = cljs.core.next(arglist__11126);
var s = cljs.core.first(arglist__11126);
var args = cljs.core.rest(arglist__11126);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj11128 = {};
return obj11128;
})();


cljs.core.IFn = (function (){var obj11130 = {};
return obj11130;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11176 = x__4408__auto__;
return goog.typeOf(G__11176);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11178 = x__4408__auto__;
return goog.typeOf(G__11178);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11180 = x__4408__auto__;
return goog.typeOf(G__11180);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11182 = x__4408__auto__;
return goog.typeOf(G__11182);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11184 = x__4408__auto__;
return goog.typeOf(G__11184);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11186 = x__4408__auto__;
return goog.typeOf(G__11186);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11188 = x__4408__auto__;
return goog.typeOf(G__11188);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11190 = x__4408__auto__;
return goog.typeOf(G__11190);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11192 = x__4408__auto__;
return goog.typeOf(G__11192);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11194 = x__4408__auto__;
return goog.typeOf(G__11194);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11196 = x__4408__auto__;
return goog.typeOf(G__11196);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11198 = x__4408__auto__;
return goog.typeOf(G__11198);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11200 = x__4408__auto__;
return goog.typeOf(G__11200);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11202 = x__4408__auto__;
return goog.typeOf(G__11202);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11204 = x__4408__auto__;
return goog.typeOf(G__11204);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11206 = x__4408__auto__;
return goog.typeOf(G__11206);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11208 = x__4408__auto__;
return goog.typeOf(G__11208);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11210 = x__4408__auto__;
return goog.typeOf(G__11210);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11212 = x__4408__auto__;
return goog.typeOf(G__11212);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11214 = x__4408__auto__;
return goog.typeOf(G__11214);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11216 = x__4408__auto__;
return goog.typeOf(G__11216);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._invoke[(function (){var G__11218 = x__4408__auto__;
return goog.typeOf(G__11218);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._invoke["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj11220 = {};
return obj11220;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3752__auto__ = value;
if(and__3752__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3752__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4408__auto__ = (((value == null))?null:value);
return (function (){var or__3764__auto__ = (cljs.core._clone[(function (){var G__11224 = x__4408__auto__;
return goog.typeOf(G__11224);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._clone["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj11226 = {};
return obj11226;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._count[(function (){var G__11230 = x__4408__auto__;
return goog.typeOf(G__11230);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._count["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj11232 = {};
return obj11232;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._empty[(function (){var G__11236 = x__4408__auto__;
return goog.typeOf(G__11236);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._empty["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj11238 = {};
return obj11238;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._conj[(function (){var G__11242 = x__4408__auto__;
return goog.typeOf(G__11242);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._conj["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj11244 = {};
return obj11244;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._nth[(function (){var G__11250 = x__4408__auto__;
return goog.typeOf(G__11250);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._nth["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._nth[(function (){var G__11252 = x__4408__auto__;
return goog.typeOf(G__11252);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._nth["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj11254 = {};
return obj11254;
})();


cljs.core.ISeq = (function (){var obj11256 = {};
return obj11256;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._first[(function (){var G__11260 = x__4408__auto__;
return goog.typeOf(G__11260);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._first["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._rest[(function (){var G__11264 = x__4408__auto__;
return goog.typeOf(G__11264);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._rest["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj11266 = {};
return obj11266;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._next[(function (){var G__11270 = x__4408__auto__;
return goog.typeOf(G__11270);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._next["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj11272 = {};
return obj11272;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._lookup[(function (){var G__11278 = x__4408__auto__;
return goog.typeOf(G__11278);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._lookup["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._lookup[(function (){var G__11280 = x__4408__auto__;
return goog.typeOf(G__11280);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._lookup["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj11282 = {};
return obj11282;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__11286 = x__4408__auto__;
return goog.typeOf(G__11286);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._assoc[(function (){var G__11290 = x__4408__auto__;
return goog.typeOf(G__11290);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._assoc["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj11292 = {};
return obj11292;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._dissoc[(function (){var G__11296 = x__4408__auto__;
return goog.typeOf(G__11296);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj11298 = {};
return obj11298;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._key[(function (){var G__11302 = x__4408__auto__;
return goog.typeOf(G__11302);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._key["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._val[(function (){var G__11306 = x__4408__auto__;
return goog.typeOf(G__11306);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._val["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj11308 = {};
return obj11308;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._disjoin[(function (){var G__11312 = x__4408__auto__;
return goog.typeOf(G__11312);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj11314 = {};
return obj11314;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._peek[(function (){var G__11318 = x__4408__auto__;
return goog.typeOf(G__11318);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._peek["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._pop[(function (){var G__11322 = x__4408__auto__;
return goog.typeOf(G__11322);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._pop["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj11324 = {};
return obj11324;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._assoc_n[(function (){var G__11328 = x__4408__auto__;
return goog.typeOf(G__11328);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj11330 = {};
return obj11330;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._deref[(function (){var G__11334 = x__4408__auto__;
return goog.typeOf(G__11334);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._deref["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj11336 = {};
return obj11336;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._deref_with_timeout[(function (){var G__11340 = x__4408__auto__;
return goog.typeOf(G__11340);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj11342 = {};
return obj11342;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._meta[(function (){var G__11346 = x__4408__auto__;
return goog.typeOf(G__11346);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._meta["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj11348 = {};
return obj11348;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._with_meta[(function (){var G__11352 = x__4408__auto__;
return goog.typeOf(G__11352);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj11354 = {};
return obj11354;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._reduce[(function (){var G__11360 = x__4408__auto__;
return goog.typeOf(G__11360);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._reduce["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._reduce[(function (){var G__11362 = x__4408__auto__;
return goog.typeOf(G__11362);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._reduce["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj11364 = {};
return obj11364;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._kv_reduce[(function (){var G__11368 = x__4408__auto__;
return goog.typeOf(G__11368);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj11370 = {};
return obj11370;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._equiv[(function (){var G__11374 = x__4408__auto__;
return goog.typeOf(G__11374);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._equiv["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj11376 = {};
return obj11376;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._hash[(function (){var G__11380 = x__4408__auto__;
return goog.typeOf(G__11380);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._hash["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj11382 = {};
return obj11382;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._seq[(function (){var G__11386 = x__4408__auto__;
return goog.typeOf(G__11386);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._seq["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj11388 = {};
return obj11388;
})();


cljs.core.IList = (function (){var obj11390 = {};
return obj11390;
})();


cljs.core.IRecord = (function (){var obj11392 = {};
return obj11392;
})();


cljs.core.IReversible = (function (){var obj11394 = {};
return obj11394;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._rseq[(function (){var G__11398 = x__4408__auto__;
return goog.typeOf(G__11398);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._rseq["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj11400 = {};
return obj11400;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._sorted_seq[(function (){var G__11404 = x__4408__auto__;
return goog.typeOf(G__11404);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._sorted_seq_from[(function (){var G__11408 = x__4408__auto__;
return goog.typeOf(G__11408);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._entry_key[(function (){var G__11412 = x__4408__auto__;
return goog.typeOf(G__11412);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._comparator[(function (){var G__11416 = x__4408__auto__;
return goog.typeOf(G__11416);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._comparator["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj11418 = {};
return obj11418;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3752__auto__ = writer;
if(and__3752__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3752__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4408__auto__ = (((writer == null))?null:writer);
return (function (){var or__3764__auto__ = (cljs.core._write[(function (){var G__11422 = x__4408__auto__;
return goog.typeOf(G__11422);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._write["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3752__auto__ = writer;
if(and__3752__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3752__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4408__auto__ = (((writer == null))?null:writer);
return (function (){var or__3764__auto__ = (cljs.core._flush[(function (){var G__11426 = x__4408__auto__;
return goog.typeOf(G__11426);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._flush["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj11428 = {};
return obj11428;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._pr_writer[(function (){var G__11432 = x__4408__auto__;
return goog.typeOf(G__11432);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj11434 = {};
return obj11434;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3752__auto__ = d;
if(and__3752__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3752__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4408__auto__ = (((d == null))?null:d);
return (function (){var or__3764__auto__ = (cljs.core._realized_QMARK_[(function (){var G__11438 = x__4408__auto__;
return goog.typeOf(G__11438);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj11440 = {};
return obj11440;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._notify_watches[(function (){var G__11444 = x__4408__auto__;
return goog.typeOf(G__11444);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._add_watch[(function (){var G__11448 = x__4408__auto__;
return goog.typeOf(G__11448);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3752__auto__ = this$;
if(and__3752__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3752__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4408__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3764__auto__ = (cljs.core._remove_watch[(function (){var G__11452 = x__4408__auto__;
return goog.typeOf(G__11452);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj11454 = {};
return obj11454;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._as_transient[(function (){var G__11458 = x__4408__auto__;
return goog.typeOf(G__11458);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj11460 = {};
return obj11460;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3752__auto__ = tcoll;
if(and__3752__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3752__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4408__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3764__auto__ = (cljs.core._conj_BANG_[(function (){var G__11464 = x__4408__auto__;
return goog.typeOf(G__11464);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3752__auto__ = tcoll;
if(and__3752__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3752__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4408__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3764__auto__ = (cljs.core._persistent_BANG_[(function (){var G__11468 = x__4408__auto__;
return goog.typeOf(G__11468);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj11470 = {};
return obj11470;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3752__auto__ = tcoll;
if(and__3752__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3752__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4408__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3764__auto__ = (cljs.core._assoc_BANG_[(function (){var G__11474 = x__4408__auto__;
return goog.typeOf(G__11474);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj11476 = {};
return obj11476;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3752__auto__ = tcoll;
if(and__3752__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3752__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4408__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3764__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__11480 = x__4408__auto__;
return goog.typeOf(G__11480);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj11482 = {};
return obj11482;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3752__auto__ = tcoll;
if(and__3752__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3752__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4408__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3764__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__11486 = x__4408__auto__;
return goog.typeOf(G__11486);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3752__auto__ = tcoll;
if(and__3752__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3752__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4408__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3764__auto__ = (cljs.core._pop_BANG_[(function (){var G__11490 = x__4408__auto__;
return goog.typeOf(G__11490);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj11492 = {};
return obj11492;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3752__auto__ = tcoll;
if(and__3752__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3752__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4408__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3764__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__11496 = x__4408__auto__;
return goog.typeOf(G__11496);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj11498 = {};
return obj11498;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3752__auto__ = x;
if(and__3752__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3752__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4408__auto__ = (((x == null))?null:x);
return (function (){var or__3764__auto__ = (cljs.core._compare[(function (){var G__11502 = x__4408__auto__;
return goog.typeOf(G__11502);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._compare["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj11504 = {};
return obj11504;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._drop_first[(function (){var G__11508 = x__4408__auto__;
return goog.typeOf(G__11508);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj11510 = {};
return obj11510;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._chunked_first[(function (){var G__11514 = x__4408__auto__;
return goog.typeOf(G__11514);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._chunked_rest[(function (){var G__11518 = x__4408__auto__;
return goog.typeOf(G__11518);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj11520 = {};
return obj11520;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._chunked_next[(function (){var G__11524 = x__4408__auto__;
return goog.typeOf(G__11524);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj11526 = {};
return obj11526;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3752__auto__ = x;
if(and__3752__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3752__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4408__auto__ = (((x == null))?null:x);
return (function (){var or__3764__auto__ = (cljs.core._name[(function (){var G__11530 = x__4408__auto__;
return goog.typeOf(G__11530);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._name["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3752__auto__ = x;
if(and__3752__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3752__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4408__auto__ = (((x == null))?null:x);
return (function (){var or__3764__auto__ = (cljs.core._namespace[(function (){var G__11534 = x__4408__auto__;
return goog.typeOf(G__11534);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._namespace["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj11536 = {};
return obj11536;
})();


cljs.core.IReset = (function (){var obj11538 = {};
return obj11538;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._reset_BANG_[(function (){var G__11542 = x__4408__auto__;
return goog.typeOf(G__11542);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj11544 = {};
return obj11544;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._swap_BANG_[(function (){var G__11554 = x__4408__auto__;
return goog.typeOf(G__11554);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._swap_BANG_[(function (){var G__11556 = x__4408__auto__;
return goog.typeOf(G__11556);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._swap_BANG_[(function (){var G__11558 = x__4408__auto__;
return goog.typeOf(G__11558);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._swap_BANG_[(function (){var G__11560 = x__4408__auto__;
return goog.typeOf(G__11560);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj11562 = {};
return obj11562;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3752__auto__ = o;
if(and__3752__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3752__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4408__auto__ = (((o == null))?null:o);
return (function (){var or__3764__auto__ = (cljs.core._vreset_BANG_[(function (){var G__11566 = x__4408__auto__;
return goog.typeOf(G__11566);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj11568 = {};
return obj11568;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3752__auto__ = coll;
if(and__3752__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3752__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4408__auto__ = (((coll == null))?null:coll);
return (function (){var or__3764__auto__ = (cljs.core._iterator[(function (){var G__11572 = x__4408__auto__;
return goog.typeOf(G__11572);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._iterator["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__11575 = (4294967295);
var G__11576 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11575,G__11576) : Math.imul.call(null,G__11575,G__11576));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__11579 = a;
var G__11580 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11579,G__11580) : Math.imul.call(null,G__11579,G__11580));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__11581 = (i + (2));
var G__11582 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__11581;
h1 = G__11582;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj11584 = {};
return obj11584;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__11585 = (i + (1));
var G__11586 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__11585;
hash = G__11586;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj11590 = {};
return obj11590;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__11593 = o;
if(G__11593){
var bit__4438__auto__ = (G__11593.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4438__auto__) || (G__11593.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__11594 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11594) : Math.floor.call(null,G__11594));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3752__auto__ = cljs.core.not(a.ns);
if(and__3752__auto__){
return b.ns;
} else {
return and__3752__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__11601 = a.ns;
var G__11602 = b.ns;
return goog.array.defaultCompare(G__11601,G__11602);
})();
if(((0) === nsc)){
var G__11603 = a.name;
var G__11604 = b.name;
return goog.array.defaultCompare(G__11603,G__11604);
} else {
return nsc;
}
}
} else {
var G__11605 = a.name;
var G__11606 = b.name;
return goog.array.defaultCompare(G__11605,G__11606);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4185__auto__ = self__._hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__11608 = null;
var G__11608__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__11608__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__11608 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__11608__2.call(this,self__,coll);
case 3:
return G__11608__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11608.cljs$core$IFn$_invoke$arity$2 = G__11608__2;
G__11608.cljs$core$IFn$_invoke$arity$3 = G__11608__3;
return G__11608;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args11607){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11607)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__11656 = null;
var G__11656__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__11656__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__11656__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__11656__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__11656__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__11656__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__11656__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__11656__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__11656__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__11656__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__11656__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__11656__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__11656__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__11656__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__11656__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__11656__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__11656__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__11656__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__11656__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__11656__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__11656__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__11656__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11612 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__11613 = a;
var G__11614 = b;
var G__11615 = c;
var G__11616 = d;
var G__11617 = e;
var G__11618 = f;
var G__11619 = g;
var G__11620 = h;
var G__11621 = i;
var G__11622 = j;
var G__11623 = k;
var G__11624 = l;
var G__11625 = m;
var G__11626 = n;
var G__11627 = o;
var G__11628 = p;
var G__11629 = q;
var G__11630 = r;
var G__11631 = s;
var G__11632 = t;
var G__11633 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11612,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633) : cljs.core.apply.call(null,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633));
});
G__11656 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11656__1.call(this,self__);
case 2:
return G__11656__2.call(this,self__,a);
case 3:
return G__11656__3.call(this,self__,a,b);
case 4:
return G__11656__4.call(this,self__,a,b,c);
case 5:
return G__11656__5.call(this,self__,a,b,c,d);
case 6:
return G__11656__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11656__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11656__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11656__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11656__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11656__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11656__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11656__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11656__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11656__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11656__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11656__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11656__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11656__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11656__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11656__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11656__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11656.cljs$core$IFn$_invoke$arity$1 = G__11656__1;
G__11656.cljs$core$IFn$_invoke$arity$2 = G__11656__2;
G__11656.cljs$core$IFn$_invoke$arity$3 = G__11656__3;
G__11656.cljs$core$IFn$_invoke$arity$4 = G__11656__4;
G__11656.cljs$core$IFn$_invoke$arity$5 = G__11656__5;
G__11656.cljs$core$IFn$_invoke$arity$6 = G__11656__6;
G__11656.cljs$core$IFn$_invoke$arity$7 = G__11656__7;
G__11656.cljs$core$IFn$_invoke$arity$8 = G__11656__8;
G__11656.cljs$core$IFn$_invoke$arity$9 = G__11656__9;
G__11656.cljs$core$IFn$_invoke$arity$10 = G__11656__10;
G__11656.cljs$core$IFn$_invoke$arity$11 = G__11656__11;
G__11656.cljs$core$IFn$_invoke$arity$12 = G__11656__12;
G__11656.cljs$core$IFn$_invoke$arity$13 = G__11656__13;
G__11656.cljs$core$IFn$_invoke$arity$14 = G__11656__14;
G__11656.cljs$core$IFn$_invoke$arity$15 = G__11656__15;
G__11656.cljs$core$IFn$_invoke$arity$16 = G__11656__16;
G__11656.cljs$core$IFn$_invoke$arity$17 = G__11656__17;
G__11656.cljs$core$IFn$_invoke$arity$18 = G__11656__18;
G__11656.cljs$core$IFn$_invoke$arity$19 = G__11656__19;
G__11656.cljs$core$IFn$_invoke$arity$20 = G__11656__20;
G__11656.cljs$core$IFn$_invoke$arity$21 = G__11656__21;
G__11656.cljs$core$IFn$_invoke$arity$22 = G__11656__22;
return G__11656;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args11611){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11611)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__11634 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__11635 = a;
var G__11636 = b;
var G__11637 = c;
var G__11638 = d;
var G__11639 = e;
var G__11640 = f;
var G__11641 = g;
var G__11642 = h;
var G__11643 = i;
var G__11644 = j;
var G__11645 = k;
var G__11646 = l;
var G__11647 = m;
var G__11648 = n;
var G__11649 = o;
var G__11650 = p;
var G__11651 = q;
var G__11652 = r;
var G__11653 = s;
var G__11654 = t;
var G__11655 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650,G__11651,G__11652,G__11653,G__11654,G__11655) : cljs.core.apply.call(null,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650,G__11651,G__11652,G__11653,G__11654,G__11655));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__11658 = x;
if(G__11658){
var bit__4445__auto__ = null;
if(cljs.core.truth_((function (){var or__3764__auto__ = bit__4445__auto__;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return G__11658.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__11658.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11658);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11658);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__11660 = value;
if(G__11660){
var bit__4445__auto__ = (G__11660.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4445__auto__) || (G__11660.cljs$core$ICloneable$)){
return true;
} else {
if((!G__11660.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11660);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11660);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11662 = coll;
if(G__11662){
var bit__4438__auto__ = (G__11662.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4438__auto__) || (G__11662.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11664 = coll;
if(G__11664){
var bit__4438__auto__ = (G__11664.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4438__auto__) || (G__11664.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__11666 = coll;
if(G__11666){
var bit__4438__auto__ = (G__11666.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4438__auto__) || (G__11666.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11668 = coll;
if(G__11668){
var bit__4438__auto__ = (G__11668.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4438__auto__) || (G__11668.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__11673__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__11674 = y;
var G__11675 = cljs.core.first(more);
var G__11676 = cljs.core.next(more);
x = G__11674;
y = G__11675;
more = G__11676;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11673 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11677__i = 0, G__11677__a = new Array(arguments.length -  2);
while (G__11677__i < G__11677__a.length) {G__11677__a[G__11677__i] = arguments[G__11677__i + 2]; ++G__11677__i;}
  more = new cljs.core.IndexedSeq(G__11677__a,0);
} 
return G__11673__delegate.call(this,x,y,more);};
G__11673.cljs$lang$maxFixedArity = 2;
G__11673.cljs$lang$applyTo = (function (arglist__11678){
var x = cljs.core.first(arglist__11678);
arglist__11678 = cljs.core.next(arglist__11678);
var y = cljs.core.first(arglist__11678);
var more = cljs.core.rest(arglist__11678);
return G__11673__delegate(x,y,more);
});
G__11673.cljs$core$IFn$_invoke$arity$variadic = G__11673__delegate;
return G__11673;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__11679 = null;
if (arguments.length > 2) {
var G__11680__i = 0, G__11680__a = new Array(arguments.length -  2);
while (G__11680__i < G__11680__a.length) {G__11680__a[G__11680__i] = arguments[G__11680__i + 2]; ++G__11680__i;}
G__11679 = new cljs.core.IndexedSeq(G__11680__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11679);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__11681 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__11681) : cljs.core.es6_iterator_seq.call(null,G__11681));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11682 = (n + (1));
var G__11683 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11684 = cljs.core.next(coll__$1);
n = G__11682;
hash_code = G__11683;
coll__$1 = G__11684;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11685 = (n + (1));
var G__11686 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11687 = cljs.core.next(coll__$1);
n = G__11685;
hash_code = G__11686;
coll__$1 = G__11687;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__11688 = o;
return goog.getUid(G__11688);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__11690 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11690) : cljs.core.deref.call(null,G__11690));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11697 = val;
var G__11698 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11697,G__11698) : f.call(null,G__11697,G__11698));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11703 = nval;
var G__11704 = (n + (1));
val = G__11703;
n = G__11704;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11699 = val__$1;
var G__11700 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11699,G__11700) : f.call(null,G__11699,G__11700));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11705 = nval;
var G__11706 = (n + (1));
val__$1 = G__11705;
n = G__11706;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11701 = val__$1;
var G__11702 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11701,G__11702) : f.call(null,G__11701,G__11702));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11707 = nval;
var G__11708 = (n + (1));
val__$1 = G__11707;
n = G__11708;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11715 = val;
var G__11716 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11715,G__11716) : f.call(null,G__11715,G__11716));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11721 = nval;
var G__11722 = (n + (1));
val = G__11721;
n = G__11722;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11717 = val__$1;
var G__11718 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11717,G__11718) : f.call(null,G__11717,G__11718));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11723 = nval;
var G__11724 = (n + (1));
val__$1 = G__11723;
n = G__11724;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11719 = val__$1;
var G__11720 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11719,G__11720) : f.call(null,G__11719,G__11720));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11725 = nval;
var G__11726 = (n + (1));
val__$1 = G__11725;
n = G__11726;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__11728 = x;
if(G__11728){
var bit__4445__auto__ = (G__11728.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4445__auto__) || (G__11728.cljs$core$ICounted$)){
return true;
} else {
if((!G__11728.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__11728);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__11728);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__11730 = x;
if(G__11730){
var bit__4445__auto__ = (G__11730.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4445__auto__) || (G__11730.cljs$core$IIndexed$)){
return true;
} else {
if((!G__11730.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__11730);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__11730);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__11731 = coll__$1;
var G__11732 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11731,G__11732) : cljs.core.equiv_sequential.call(null,G__11731,G__11732));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11733 = o;
var G__11734 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11733,G__11734) : cljs.core.cons.call(null,G__11733,G__11734));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__11737 = coll__$1;
var G__11738 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11737,G__11738) : cljs.core.equiv_sequential.call(null,G__11737,G__11738));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__11739 = cljs.core.List.EMPTY;
var G__11740 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__11739,G__11740) : cljs.core.with_meta.call(null,G__11739,G__11740));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__11741 = f;
var G__11742 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__11741,G__11742) : cljs.core.seq_reduce.call(null,G__11741,G__11742));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__11743 = f;
var G__11744 = start;
var G__11745 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__11743,G__11744,G__11745) : cljs.core.seq_reduce.call(null,G__11743,G__11744,G__11745));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11746 = o;
var G__11747 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11746,G__11747) : cljs.core.cons.call(null,G__11746,G__11747));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__11748 = sn;
s = G__11748;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__11753__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__11754 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__11755 = cljs.core.first(xs);
var G__11756 = cljs.core.next(xs);
coll = G__11754;
x = G__11755;
xs = G__11756;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__11753 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__11757__i = 0, G__11757__a = new Array(arguments.length -  2);
while (G__11757__i < G__11757__a.length) {G__11757__a[G__11757__i] = arguments[G__11757__i + 2]; ++G__11757__i;}
  xs = new cljs.core.IndexedSeq(G__11757__a,0);
} 
return G__11753__delegate.call(this,coll,x,xs);};
G__11753.cljs$lang$maxFixedArity = 2;
G__11753.cljs$lang$applyTo = (function (arglist__11758){
var coll = cljs.core.first(arglist__11758);
arglist__11758 = cljs.core.next(arglist__11758);
var x = cljs.core.first(arglist__11758);
var xs = cljs.core.rest(arglist__11758);
return G__11753__delegate(coll,x,xs);
});
G__11753.cljs$core$IFn$_invoke$arity$variadic = G__11753__delegate;
return G__11753;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__11759 = null;
if (arguments.length > 2) {
var G__11760__i = 0, G__11760__a = new Array(arguments.length -  2);
while (G__11760__i < G__11760__a.length) {G__11760__a[G__11760__i] = arguments[G__11760__i + 2]; ++G__11760__i;}
G__11759 = new cljs.core.IndexedSeq(G__11760__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__11759);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__11761 = cljs.core.next(s);
var G__11762 = (acc + (1));
s = G__11761;
acc = G__11762;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__11764 = coll;
if(G__11764){
var bit__4438__auto__ = (G__11764.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4438__auto__) || (G__11764.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__11765 = cljs.core.next(coll);
var G__11766 = (n - (1));
coll = G__11765;
n = G__11766;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__11767 = cljs.core.next(coll);
var G__11768 = (n - (1));
var G__11769 = not_found;
coll = G__11767;
n = G__11768;
not_found = G__11769;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__11774 = coll;
if(G__11774){
var bit__4438__auto__ = (G__11774.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4438__auto__) || (G__11774.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__11775 = coll;
if(G__11775){
var bit__4445__auto__ = (G__11775.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4445__auto__) || (G__11775.cljs$core$ISeq$)){
return true;
} else {
if((!G__11775.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11775);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11775);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__11776 = coll;
if(G__11776){
var bit__4438__auto__ = (G__11776.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4438__auto__) || (G__11776.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__11777 = coll;
if(G__11777){
var bit__4445__auto__ = (G__11777.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4445__auto__) || (G__11777.cljs$core$ISeq$)){
return true;
} else {
if((!G__11777.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11777);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11777);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__11778 = (n__$1 - (1));
var G__11779 = cljs.core.rest(xs);
n__$1 = G__11778;
xs = G__11779;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__11782 = o;
if(G__11782){
var bit__4438__auto__ = (G__11782.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4438__auto__) || (G__11782.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__11783 = o;
if(G__11783){
var bit__4438__auto__ = (G__11783.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4438__auto__) || (G__11783.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__11787__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__11788 = ret;
var G__11789 = cljs.core.first(kvs);
var G__11790 = cljs.core.second(kvs);
var G__11791 = cljs.core.nnext(kvs);
coll = G__11788;
k = G__11789;
v = G__11790;
kvs = G__11791;
continue;
} else {
return ret;
}
break;
}
};
var G__11787 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__11792__i = 0, G__11792__a = new Array(arguments.length -  3);
while (G__11792__i < G__11792__a.length) {G__11792__a[G__11792__i] = arguments[G__11792__i + 3]; ++G__11792__i;}
  kvs = new cljs.core.IndexedSeq(G__11792__a,0);
} 
return G__11787__delegate.call(this,coll,k,v,kvs);};
G__11787.cljs$lang$maxFixedArity = 3;
G__11787.cljs$lang$applyTo = (function (arglist__11793){
var coll = cljs.core.first(arglist__11793);
arglist__11793 = cljs.core.next(arglist__11793);
var k = cljs.core.first(arglist__11793);
arglist__11793 = cljs.core.next(arglist__11793);
var v = cljs.core.first(arglist__11793);
var kvs = cljs.core.rest(arglist__11793);
return G__11787__delegate(coll,k,v,kvs);
});
G__11787.cljs$core$IFn$_invoke$arity$variadic = G__11787__delegate;
return G__11787;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__11794 = null;
if (arguments.length > 3) {
var G__11795__i = 0, G__11795__a = new Array(arguments.length -  3);
while (G__11795__i < G__11795__a.length) {G__11795__a[G__11795__i] = arguments[G__11795__i + 3]; ++G__11795__i;}
G__11794 = new cljs.core.IndexedSeq(G__11795__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__11794);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__11798__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__11799 = ret;
var G__11800 = cljs.core.first(ks);
var G__11801 = cljs.core.next(ks);
coll = G__11799;
k = G__11800;
ks = G__11801;
continue;
} else {
return ret;
}
}
break;
}
};
var G__11798 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11802__i = 0, G__11802__a = new Array(arguments.length -  2);
while (G__11802__i < G__11802__a.length) {G__11802__a[G__11802__i] = arguments[G__11802__i + 2]; ++G__11802__i;}
  ks = new cljs.core.IndexedSeq(G__11802__a,0);
} 
return G__11798__delegate.call(this,coll,k,ks);};
G__11798.cljs$lang$maxFixedArity = 2;
G__11798.cljs$lang$applyTo = (function (arglist__11803){
var coll = cljs.core.first(arglist__11803);
arglist__11803 = cljs.core.next(arglist__11803);
var k = cljs.core.first(arglist__11803);
var ks = cljs.core.rest(arglist__11803);
return G__11798__delegate(coll,k,ks);
});
G__11798.cljs$core$IFn$_invoke$arity$variadic = G__11798__delegate;
return G__11798;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__11804 = null;
if (arguments.length > 2) {
var G__11805__i = 0, G__11805__a = new Array(arguments.length -  2);
while (G__11805__i < G__11805__a.length) {G__11805__a[G__11805__i] = arguments[G__11805__i + 2]; ++G__11805__i;}
G__11804 = new cljs.core.IndexedSeq(G__11805__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__11804);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3764__auto__ = (function (){var G__11810 = f;
return goog.isFunction(G__11810);
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var G__11811 = f;
if(G__11811){
var bit__4445__auto__ = null;
if(cljs.core.truth_((function (){var or__3764__auto____$1 = bit__4445__auto__;
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
return G__11811.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__11811.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__11811);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__11811);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__12277 = null;
var G__12277__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__12277__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11813 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11813) : self__.afn.call(null,G__11813));
});
var G__12277__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11814 = a;
var G__11815 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11814,G__11815) : self__.afn.call(null,G__11814,G__11815));
});
var G__12277__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11816 = a;
var G__11817 = b;
var G__11818 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11816,G__11817,G__11818) : self__.afn.call(null,G__11816,G__11817,G__11818));
});
var G__12277__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11819 = a;
var G__11820 = b;
var G__11821 = c;
var G__11822 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11819,G__11820,G__11821,G__11822) : self__.afn.call(null,G__11819,G__11820,G__11821,G__11822));
});
var G__12277__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11823 = a;
var G__11824 = b;
var G__11825 = c;
var G__11826 = d;
var G__11827 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11823,G__11824,G__11825,G__11826,G__11827) : self__.afn.call(null,G__11823,G__11824,G__11825,G__11826,G__11827));
});
var G__12277__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11828 = a;
var G__11829 = b;
var G__11830 = c;
var G__11831 = d;
var G__11832 = e;
var G__11833 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11828,G__11829,G__11830,G__11831,G__11832,G__11833) : self__.afn.call(null,G__11828,G__11829,G__11830,G__11831,G__11832,G__11833));
});
var G__12277__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11834 = a;
var G__11835 = b;
var G__11836 = c;
var G__11837 = d;
var G__11838 = e;
var G__11839 = f;
var G__11840 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840) : self__.afn.call(null,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840));
});
var G__12277__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11841 = a;
var G__11842 = b;
var G__11843 = c;
var G__11844 = d;
var G__11845 = e;
var G__11846 = f;
var G__11847 = g;
var G__11848 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11841,G__11842,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848) : self__.afn.call(null,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848));
});
var G__12277__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11849 = a;
var G__11850 = b;
var G__11851 = c;
var G__11852 = d;
var G__11853 = e;
var G__11854 = f;
var G__11855 = g;
var G__11856 = h;
var G__11857 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857) : self__.afn.call(null,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857));
});
var G__12277__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11858 = a;
var G__11859 = b;
var G__11860 = c;
var G__11861 = d;
var G__11862 = e;
var G__11863 = f;
var G__11864 = g;
var G__11865 = h;
var G__11866 = i;
var G__11867 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867) : self__.afn.call(null,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867));
});
var G__12277__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11868 = a;
var G__11869 = b;
var G__11870 = c;
var G__11871 = d;
var G__11872 = e;
var G__11873 = f;
var G__11874 = g;
var G__11875 = h;
var G__11876 = i;
var G__11877 = j;
var G__11878 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11868,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878) : self__.afn.call(null,G__11868,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878));
});
var G__12277__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11879 = a;
var G__11880 = b;
var G__11881 = c;
var G__11882 = d;
var G__11883 = e;
var G__11884 = f;
var G__11885 = g;
var G__11886 = h;
var G__11887 = i;
var G__11888 = j;
var G__11889 = k;
var G__11890 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887,G__11888,G__11889,G__11890) : self__.afn.call(null,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887,G__11888,G__11889,G__11890));
});
var G__12277__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11891 = a;
var G__11892 = b;
var G__11893 = c;
var G__11894 = d;
var G__11895 = e;
var G__11896 = f;
var G__11897 = g;
var G__11898 = h;
var G__11899 = i;
var G__11900 = j;
var G__11901 = k;
var G__11902 = l;
var G__11903 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903) : self__.afn.call(null,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903));
});
var G__12277__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11904 = a;
var G__11905 = b;
var G__11906 = c;
var G__11907 = d;
var G__11908 = e;
var G__11909 = f;
var G__11910 = g;
var G__11911 = h;
var G__11912 = i;
var G__11913 = j;
var G__11914 = k;
var G__11915 = l;
var G__11916 = m;
var G__11917 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__11904,G__11905,G__11906,G__11907,G__11908,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917) : self__.afn.call(null,G__11904,G__11905,G__11906,G__11907,G__11908,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917));
});
var G__12277__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11918 = a;
var G__11919 = b;
var G__11920 = c;
var G__11921 = d;
var G__11922 = e;
var G__11923 = f;
var G__11924 = g;
var G__11925 = h;
var G__11926 = i;
var G__11927 = j;
var G__11928 = k;
var G__11929 = l;
var G__11930 = m;
var G__11931 = n;
var G__11932 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__11918,G__11919,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932) : self__.afn.call(null,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932));
});
var G__12277__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11933 = a;
var G__11934 = b;
var G__11935 = c;
var G__11936 = d;
var G__11937 = e;
var G__11938 = f;
var G__11939 = g;
var G__11940 = h;
var G__11941 = i;
var G__11942 = j;
var G__11943 = k;
var G__11944 = l;
var G__11945 = m;
var G__11946 = n;
var G__11947 = o;
var G__11948 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942,G__11943,G__11944,G__11945,G__11946,G__11947,G__11948) : self__.afn.call(null,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942,G__11943,G__11944,G__11945,G__11946,G__11947,G__11948));
});
var G__12277__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11949 = a;
var G__11950 = b;
var G__11951 = c;
var G__11952 = d;
var G__11953 = e;
var G__11954 = f;
var G__11955 = g;
var G__11956 = h;
var G__11957 = i;
var G__11958 = j;
var G__11959 = k;
var G__11960 = l;
var G__11961 = m;
var G__11962 = n;
var G__11963 = o;
var G__11964 = p;
var G__11965 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965) : self__.afn.call(null,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965));
});
var G__12277__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11966 = a;
var G__11967 = b;
var G__11968 = c;
var G__11969 = d;
var G__11970 = e;
var G__11971 = f;
var G__11972 = g;
var G__11973 = h;
var G__11974 = i;
var G__11975 = j;
var G__11976 = k;
var G__11977 = l;
var G__11978 = m;
var G__11979 = n;
var G__11980 = o;
var G__11981 = p;
var G__11982 = q;
var G__11983 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976,G__11977,G__11978,G__11979,G__11980,G__11981,G__11982,G__11983) : self__.afn.call(null,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976,G__11977,G__11978,G__11979,G__11980,G__11981,G__11982,G__11983));
});
var G__12277__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11984 = a;
var G__11985 = b;
var G__11986 = c;
var G__11987 = d;
var G__11988 = e;
var G__11989 = f;
var G__11990 = g;
var G__11991 = h;
var G__11992 = i;
var G__11993 = j;
var G__11994 = k;
var G__11995 = l;
var G__11996 = m;
var G__11997 = n;
var G__11998 = o;
var G__11999 = p;
var G__12000 = q;
var G__12001 = r;
var G__12002 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__11984,G__11985,G__11986,G__11987,G__11988,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995,G__11996,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002) : self__.afn.call(null,G__11984,G__11985,G__11986,G__11987,G__11988,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995,G__11996,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002));
});
var G__12277__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12003 = a;
var G__12004 = b;
var G__12005 = c;
var G__12006 = d;
var G__12007 = e;
var G__12008 = f;
var G__12009 = g;
var G__12010 = h;
var G__12011 = i;
var G__12012 = j;
var G__12013 = k;
var G__12014 = l;
var G__12015 = m;
var G__12016 = n;
var G__12017 = o;
var G__12018 = p;
var G__12019 = q;
var G__12020 = r;
var G__12021 = s;
var G__12022 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12003,G__12004,G__12005,G__12006,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022) : self__.afn.call(null,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022));
});
var G__12277__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12023 = self__.afn;
var G__12024 = a;
var G__12025 = b;
var G__12026 = c;
var G__12027 = d;
var G__12028 = e;
var G__12029 = f;
var G__12030 = g;
var G__12031 = h;
var G__12032 = i;
var G__12033 = j;
var G__12034 = k;
var G__12035 = l;
var G__12036 = m;
var G__12037 = n;
var G__12038 = o;
var G__12039 = p;
var G__12040 = q;
var G__12041 = r;
var G__12042 = s;
var G__12043 = t;
var G__12044 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12023,G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043,G__12044) : cljs.core.apply.call(null,G__12023,G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043,G__12044));
});
G__12277 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12277__1.call(this,self__);
case 2:
return G__12277__2.call(this,self__,a);
case 3:
return G__12277__3.call(this,self__,a,b);
case 4:
return G__12277__4.call(this,self__,a,b,c);
case 5:
return G__12277__5.call(this,self__,a,b,c,d);
case 6:
return G__12277__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12277__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12277__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12277__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12277__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12277__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12277__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12277__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12277__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12277__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12277__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12277__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12277__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12277__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12277__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12277__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12277__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12277.cljs$core$IFn$_invoke$arity$1 = G__12277__1;
G__12277.cljs$core$IFn$_invoke$arity$2 = G__12277__2;
G__12277.cljs$core$IFn$_invoke$arity$3 = G__12277__3;
G__12277.cljs$core$IFn$_invoke$arity$4 = G__12277__4;
G__12277.cljs$core$IFn$_invoke$arity$5 = G__12277__5;
G__12277.cljs$core$IFn$_invoke$arity$6 = G__12277__6;
G__12277.cljs$core$IFn$_invoke$arity$7 = G__12277__7;
G__12277.cljs$core$IFn$_invoke$arity$8 = G__12277__8;
G__12277.cljs$core$IFn$_invoke$arity$9 = G__12277__9;
G__12277.cljs$core$IFn$_invoke$arity$10 = G__12277__10;
G__12277.cljs$core$IFn$_invoke$arity$11 = G__12277__11;
G__12277.cljs$core$IFn$_invoke$arity$12 = G__12277__12;
G__12277.cljs$core$IFn$_invoke$arity$13 = G__12277__13;
G__12277.cljs$core$IFn$_invoke$arity$14 = G__12277__14;
G__12277.cljs$core$IFn$_invoke$arity$15 = G__12277__15;
G__12277.cljs$core$IFn$_invoke$arity$16 = G__12277__16;
G__12277.cljs$core$IFn$_invoke$arity$17 = G__12277__17;
G__12277.cljs$core$IFn$_invoke$arity$18 = G__12277__18;
G__12277.cljs$core$IFn$_invoke$arity$19 = G__12277__19;
G__12277.cljs$core$IFn$_invoke$arity$20 = G__12277__20;
G__12277.cljs$core$IFn$_invoke$arity$21 = G__12277__21;
G__12277.cljs$core$IFn$_invoke$arity$22 = G__12277__22;
return G__12277;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args11812){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11812)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__12045 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12045) : self__.afn.call(null,G__12045));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__12046 = a;
var G__12047 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12046,G__12047) : self__.afn.call(null,G__12046,G__12047));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__12048 = a;
var G__12049 = b;
var G__12050 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12048,G__12049,G__12050) : self__.afn.call(null,G__12048,G__12049,G__12050));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__12051 = a;
var G__12052 = b;
var G__12053 = c;
var G__12054 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12051,G__12052,G__12053,G__12054) : self__.afn.call(null,G__12051,G__12052,G__12053,G__12054));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__12055 = a;
var G__12056 = b;
var G__12057 = c;
var G__12058 = d;
var G__12059 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12055,G__12056,G__12057,G__12058,G__12059) : self__.afn.call(null,G__12055,G__12056,G__12057,G__12058,G__12059));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__12060 = a;
var G__12061 = b;
var G__12062 = c;
var G__12063 = d;
var G__12064 = e;
var G__12065 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12060,G__12061,G__12062,G__12063,G__12064,G__12065) : self__.afn.call(null,G__12060,G__12061,G__12062,G__12063,G__12064,G__12065));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__12066 = a;
var G__12067 = b;
var G__12068 = c;
var G__12069 = d;
var G__12070 = e;
var G__12071 = f;
var G__12072 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072) : self__.afn.call(null,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__12073 = a;
var G__12074 = b;
var G__12075 = c;
var G__12076 = d;
var G__12077 = e;
var G__12078 = f;
var G__12079 = g;
var G__12080 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12073,G__12074,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080) : self__.afn.call(null,G__12073,G__12074,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__12081 = a;
var G__12082 = b;
var G__12083 = c;
var G__12084 = d;
var G__12085 = e;
var G__12086 = f;
var G__12087 = g;
var G__12088 = h;
var G__12089 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12081,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089) : self__.afn.call(null,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__12090 = a;
var G__12091 = b;
var G__12092 = c;
var G__12093 = d;
var G__12094 = e;
var G__12095 = f;
var G__12096 = g;
var G__12097 = h;
var G__12098 = i;
var G__12099 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098,G__12099) : self__.afn.call(null,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098,G__12099));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__12100 = a;
var G__12101 = b;
var G__12102 = c;
var G__12103 = d;
var G__12104 = e;
var G__12105 = f;
var G__12106 = g;
var G__12107 = h;
var G__12108 = i;
var G__12109 = j;
var G__12110 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12100,G__12101,G__12102,G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110) : self__.afn.call(null,G__12100,G__12101,G__12102,G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__12111 = a;
var G__12112 = b;
var G__12113 = c;
var G__12114 = d;
var G__12115 = e;
var G__12116 = f;
var G__12117 = g;
var G__12118 = h;
var G__12119 = i;
var G__12120 = j;
var G__12121 = k;
var G__12122 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12111,G__12112,G__12113,G__12114,G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122) : self__.afn.call(null,G__12111,G__12112,G__12113,G__12114,G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__12123 = a;
var G__12124 = b;
var G__12125 = c;
var G__12126 = d;
var G__12127 = e;
var G__12128 = f;
var G__12129 = g;
var G__12130 = h;
var G__12131 = i;
var G__12132 = j;
var G__12133 = k;
var G__12134 = l;
var G__12135 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132,G__12133,G__12134,G__12135) : self__.afn.call(null,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132,G__12133,G__12134,G__12135));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__12136 = a;
var G__12137 = b;
var G__12138 = c;
var G__12139 = d;
var G__12140 = e;
var G__12141 = f;
var G__12142 = g;
var G__12143 = h;
var G__12144 = i;
var G__12145 = j;
var G__12146 = k;
var G__12147 = l;
var G__12148 = m;
var G__12149 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12136,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149) : self__.afn.call(null,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__12150 = a;
var G__12151 = b;
var G__12152 = c;
var G__12153 = d;
var G__12154 = e;
var G__12155 = f;
var G__12156 = g;
var G__12157 = h;
var G__12158 = i;
var G__12159 = j;
var G__12160 = k;
var G__12161 = l;
var G__12162 = m;
var G__12163 = n;
var G__12164 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160,G__12161,G__12162,G__12163,G__12164) : self__.afn.call(null,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160,G__12161,G__12162,G__12163,G__12164));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__12165 = a;
var G__12166 = b;
var G__12167 = c;
var G__12168 = d;
var G__12169 = e;
var G__12170 = f;
var G__12171 = g;
var G__12172 = h;
var G__12173 = i;
var G__12174 = j;
var G__12175 = k;
var G__12176 = l;
var G__12177 = m;
var G__12178 = n;
var G__12179 = o;
var G__12180 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180) : self__.afn.call(null,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__12181 = a;
var G__12182 = b;
var G__12183 = c;
var G__12184 = d;
var G__12185 = e;
var G__12186 = f;
var G__12187 = g;
var G__12188 = h;
var G__12189 = i;
var G__12190 = j;
var G__12191 = k;
var G__12192 = l;
var G__12193 = m;
var G__12194 = n;
var G__12195 = o;
var G__12196 = p;
var G__12197 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190,G__12191,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197) : self__.afn.call(null,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190,G__12191,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__12198 = a;
var G__12199 = b;
var G__12200 = c;
var G__12201 = d;
var G__12202 = e;
var G__12203 = f;
var G__12204 = g;
var G__12205 = h;
var G__12206 = i;
var G__12207 = j;
var G__12208 = k;
var G__12209 = l;
var G__12210 = m;
var G__12211 = n;
var G__12212 = o;
var G__12213 = p;
var G__12214 = q;
var G__12215 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12198,G__12199,G__12200,G__12201,G__12202,G__12203,G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210,G__12211,G__12212,G__12213,G__12214,G__12215) : self__.afn.call(null,G__12198,G__12199,G__12200,G__12201,G__12202,G__12203,G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210,G__12211,G__12212,G__12213,G__12214,G__12215));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__12216 = a;
var G__12217 = b;
var G__12218 = c;
var G__12219 = d;
var G__12220 = e;
var G__12221 = f;
var G__12222 = g;
var G__12223 = h;
var G__12224 = i;
var G__12225 = j;
var G__12226 = k;
var G__12227 = l;
var G__12228 = m;
var G__12229 = n;
var G__12230 = o;
var G__12231 = p;
var G__12232 = q;
var G__12233 = r;
var G__12234 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12216,G__12217,G__12218,G__12219,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234) : self__.afn.call(null,G__12216,G__12217,G__12218,G__12219,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__12235 = a;
var G__12236 = b;
var G__12237 = c;
var G__12238 = d;
var G__12239 = e;
var G__12240 = f;
var G__12241 = g;
var G__12242 = h;
var G__12243 = i;
var G__12244 = j;
var G__12245 = k;
var G__12246 = l;
var G__12247 = m;
var G__12248 = n;
var G__12249 = o;
var G__12250 = p;
var G__12251 = q;
var G__12252 = r;
var G__12253 = s;
var G__12254 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12235,G__12236,G__12237,G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248,G__12249,G__12250,G__12251,G__12252,G__12253,G__12254) : self__.afn.call(null,G__12235,G__12236,G__12237,G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248,G__12249,G__12250,G__12251,G__12252,G__12253,G__12254));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__12255 = self__.afn;
var G__12256 = a;
var G__12257 = b;
var G__12258 = c;
var G__12259 = d;
var G__12260 = e;
var G__12261 = f;
var G__12262 = g;
var G__12263 = h;
var G__12264 = i;
var G__12265 = j;
var G__12266 = k;
var G__12267 = l;
var G__12268 = m;
var G__12269 = n;
var G__12270 = o;
var G__12271 = p;
var G__12272 = q;
var G__12273 = r;
var G__12274 = s;
var G__12275 = t;
var G__12276 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12255,G__12256,G__12257,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268,G__12269,G__12270,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276) : cljs.core.apply.call(null,G__12255,G__12256,G__12257,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268,G__12269,G__12270,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__12281 = o;
if(G__12281){
var bit__4445__auto__ = (G__12281.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4445__auto__) || (G__12281.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__12281.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__12281);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__12281);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3752__auto__ = !((o == null));
if(and__3752__auto__){
var G__12285 = o;
if(G__12285){
var bit__4445__auto__ = (G__12285.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4445__auto__) || (G__12285.cljs$core$IMeta$)){
return true;
} else {
if((!G__12285.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12285);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12285);
}
} else {
return and__3752__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__12288__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__12289 = ret;
var G__12290 = cljs.core.first(ks);
var G__12291 = cljs.core.next(ks);
coll = G__12289;
k = G__12290;
ks = G__12291;
continue;
} else {
return ret;
}
}
break;
}
};
var G__12288 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12292__i = 0, G__12292__a = new Array(arguments.length -  2);
while (G__12292__i < G__12292__a.length) {G__12292__a[G__12292__i] = arguments[G__12292__i + 2]; ++G__12292__i;}
  ks = new cljs.core.IndexedSeq(G__12292__a,0);
} 
return G__12288__delegate.call(this,coll,k,ks);};
G__12288.cljs$lang$maxFixedArity = 2;
G__12288.cljs$lang$applyTo = (function (arglist__12293){
var coll = cljs.core.first(arglist__12293);
arglist__12293 = cljs.core.next(arglist__12293);
var k = cljs.core.first(arglist__12293);
var ks = cljs.core.rest(arglist__12293);
return G__12288__delegate(coll,k,ks);
});
G__12288.cljs$core$IFn$_invoke$arity$variadic = G__12288__delegate;
return G__12288;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__12294 = null;
if (arguments.length > 2) {
var G__12295__i = 0, G__12295__a = new Array(arguments.length -  2);
while (G__12295__i < G__12295__a.length) {G__12295__a[G__12295__i] = arguments[G__12295__i + 2]; ++G__12295__i;}
G__12294 = new cljs.core.IndexedSeq(G__12295__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__12294);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12297 = x;
if(G__12297){
var bit__4445__auto__ = (G__12297.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4445__auto__) || (G__12297.cljs$core$ICollection$)){
return true;
} else {
if((!G__12297.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__12297);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__12297);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12299 = x;
if(G__12299){
var bit__4445__auto__ = (G__12299.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4445__auto__) || (G__12299.cljs$core$ISet$)){
return true;
} else {
if((!G__12299.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__12299);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__12299);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__12301 = x;
if(G__12301){
var bit__4445__auto__ = (G__12301.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4445__auto__) || (G__12301.cljs$core$IAssociative$)){
return true;
} else {
if((!G__12301.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__12301);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__12301);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__12303 = x;
if(G__12303){
var bit__4445__auto__ = (G__12303.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4445__auto__) || (G__12303.cljs$core$ISequential$)){
return true;
} else {
if((!G__12303.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__12303);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__12303);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__12305 = x;
if(G__12305){
var bit__4445__auto__ = (G__12305.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4445__auto__) || (G__12305.cljs$core$ISorted$)){
return true;
} else {
if((!G__12305.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__12305);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__12305);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__12307 = x;
if(G__12307){
var bit__4445__auto__ = (G__12307.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4445__auto__) || (G__12307.cljs$core$IReduce$)){
return true;
} else {
if((!G__12307.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__12307);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__12307);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12309 = x;
if(G__12309){
var bit__4445__auto__ = (G__12309.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4445__auto__) || (G__12309.cljs$core$IMap$)){
return true;
} else {
if((!G__12309.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__12309);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__12309);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__12311 = x;
if(G__12311){
var bit__4445__auto__ = (G__12311.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4445__auto__) || (G__12311.cljs$core$IVector$)){
return true;
} else {
if((!G__12311.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__12311);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__12311);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__12313 = x;
if(G__12313){
var bit__4438__auto__ = (G__12313.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4438__auto__) || (G__12313.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj12319 = {};
return obj12319;
});
var js_obj__1 = (function() { 
var G__12322__delegate = function (keyvals){
var G__12320 = goog.object.create;
var G__12321 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__12320,G__12321) : cljs.core.apply.call(null,G__12320,G__12321));
};
var G__12322 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__12323__i = 0, G__12323__a = new Array(arguments.length -  0);
while (G__12323__i < G__12323__a.length) {G__12323__a[G__12323__i] = arguments[G__12323__i + 0]; ++G__12323__i;}
  keyvals = new cljs.core.IndexedSeq(G__12323__a,0);
} 
return G__12322__delegate.call(this,keyvals);};
G__12322.cljs$lang$maxFixedArity = 0;
G__12322.cljs$lang$applyTo = (function (arglist__12324){
var keyvals = cljs.core.seq(arglist__12324);
return G__12322__delegate(keyvals);
});
G__12322.cljs$core$IFn$_invoke$arity$variadic = G__12322__delegate;
return G__12322;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__12325 = null;
if (arguments.length > 0) {
var G__12326__i = 0, G__12326__a = new Array(arguments.length -  0);
while (G__12326__i < G__12326__a.length) {G__12326__a[G__12326__i] = arguments[G__12326__i + 0]; ++G__12326__i;}
G__12325 = new cljs.core.IndexedSeq(G__12326__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__12325);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__12329_12331 = obj;
var G__12330_12332 = ((function (G__12329_12331,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__12329_12331,keys))
;
goog.object.forEach(G__12329_12331,G__12330_12332);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__12333 = (i__$1 + (1));
var G__12334 = (j__$1 + (1));
var G__12335 = (len__$1 - (1));
i__$1 = G__12333;
j__$1 = G__12334;
len__$1 = G__12335;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__12336 = (i__$1 - (1));
var G__12337 = (j__$1 - (1));
var G__12338 = (len__$1 - (1));
i__$1 = G__12336;
j__$1 = G__12337;
len__$1 = G__12338;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj12340 = {};
return obj12340;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__12342 = s;
if(G__12342){
var bit__4445__auto__ = (G__12342.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4445__auto__) || (G__12342.cljs$core$ISeq$)){
return true;
} else {
if((!G__12342.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12342);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12342);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__12344 = s;
if(G__12344){
var bit__4445__auto__ = (G__12344.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4445__auto__) || (G__12344.cljs$core$ISeqable$)){
return true;
} else {
if((!G__12344.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__12344);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__12344);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3764__auto__ = cljs.core.fn_QMARK_(f);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var G__12348 = f;
if(G__12348){
var bit__4445__auto__ = (G__12348.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4445__auto__) || (G__12348.cljs$core$IFn$)){
return true;
} else {
if((!G__12348.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__12348);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__12348);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__12361 = n;
return isNaN(G__12361);
})())) && (!((n === Infinity))) && (((function (){var G__12362 = n;
return parseFloat(G__12362);
})() === (function (){var G__12363 = n;
var G__12364 = (10);
return parseInt(G__12363,G__12364);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__12365__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__12366 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__12367 = etc;
s = G__12366;
xs = G__12367;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__12365 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12368__i = 0, G__12368__a = new Array(arguments.length -  2);
while (G__12368__i < G__12368__a.length) {G__12368__a[G__12368__i] = arguments[G__12368__i + 2]; ++G__12368__i;}
  more = new cljs.core.IndexedSeq(G__12368__a,0);
} 
return G__12365__delegate.call(this,x,y,more);};
G__12365.cljs$lang$maxFixedArity = 2;
G__12365.cljs$lang$applyTo = (function (arglist__12369){
var x = cljs.core.first(arglist__12369);
arglist__12369 = cljs.core.next(arglist__12369);
var y = cljs.core.first(arglist__12369);
var more = cljs.core.rest(arglist__12369);
return G__12365__delegate(x,y,more);
});
G__12365.cljs$core$IFn$_invoke$arity$variadic = G__12365__delegate;
return G__12365;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__12370 = null;
if (arguments.length > 2) {
var G__12371__i = 0, G__12371__a = new Array(arguments.length -  2);
while (G__12371__i < G__12371__a.length) {G__12371__a[G__12371__i] = arguments[G__12371__i + 2]; ++G__12371__i;}
G__12370 = new cljs.core.IndexedSeq(G__12371__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12370);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__12375 = x;
if(G__12375){
var bit__4438__auto__ = (G__12375.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4438__auto__) || (G__12375.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__12376 = x;
var G__12377 = y;
return goog.array.defaultCompare(G__12376,G__12377);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__12382 = xs;
var G__12383 = ys;
var G__12384 = len;
var G__12385 = (n + (1));
xs = G__12382;
ys = G__12383;
len = G__12384;
n = G__12385;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__12390 = x;
var G__12391 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12390,G__12391) : f.call(null,G__12390,G__12391));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12392 = y;
var G__12393 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12392,G__12393) : f.call(null,G__12392,G__12393));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__12399 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12399) : cljs.core.to_array.call(null,G__12399));
})();
var G__12400_12402 = a;
var G__12401_12403 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__12400_12402,G__12401_12403);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__12409 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12409) : keyfn.call(null,G__12409));
})(),(function (){var G__12410 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12410) : keyfn.call(null,G__12410));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__12416 = f;
var G__12417 = cljs.core.first(s);
var G__12418 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12416,G__12417,G__12418) : cljs.core.reduce.call(null,G__12416,G__12417,G__12418));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__12419 = val__$1;
var G__12420 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12419,G__12420) : f.call(null,G__12419,G__12420));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12421 = nval;
var G__12422 = cljs.core.next(coll__$1);
val__$1 = G__12421;
coll__$1 = G__12422;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__12426 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12426) : cljs.core.to_array.call(null,G__12426));
})();
var G__12427_12429 = a;
goog.array.shuffle(G__12427_12429);

var G__12428 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__12428) : cljs.core.vec.call(null,G__12428));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__12432 = coll;
if(G__12432){
var bit__4438__auto__ = (G__12432.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4438__auto__) || (G__12432.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__12433 = coll;
if(G__12433){
var bit__4438__auto__ = (G__12433.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4438__auto__) || (G__12433.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__12442 = null;
var G__12442__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__12442__1 = (function (x){
var G__12439 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__12439) : cf.call(null,G__12439));
});
var G__12442__2 = (function (x,y){
var G__12440 = x;
var G__12441 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12440,G__12441) : f.call(null,G__12440,G__12441));
});
G__12442 = function(x,y){
switch(arguments.length){
case 0:
return G__12442__0.call(this);
case 1:
return G__12442__1.call(this,x);
case 2:
return G__12442__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12442.cljs$core$IFn$_invoke$arity$0 = G__12442__0;
G__12442.cljs$core$IFn$_invoke$arity$1 = G__12442__1;
G__12442.cljs$core$IFn$_invoke$arity$2 = G__12442__2;
return G__12442;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__12449 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12449) : xform.call(null,G__12449));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__12450 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__12450) : f__$1.call(null,G__12450));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__12451__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__12451 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12452__i = 0, G__12452__a = new Array(arguments.length -  2);
while (G__12452__i < G__12452__a.length) {G__12452__a[G__12452__i] = arguments[G__12452__i + 2]; ++G__12452__i;}
  more = new cljs.core.IndexedSeq(G__12452__a,0);
} 
return G__12451__delegate.call(this,x,y,more);};
G__12451.cljs$lang$maxFixedArity = 2;
G__12451.cljs$lang$applyTo = (function (arglist__12453){
var x = cljs.core.first(arglist__12453);
arglist__12453 = cljs.core.next(arglist__12453);
var y = cljs.core.first(arglist__12453);
var more = cljs.core.rest(arglist__12453);
return G__12451__delegate(x,y,more);
});
G__12451.cljs$core$IFn$_invoke$arity$variadic = G__12451__delegate;
return G__12451;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__12454 = null;
if (arguments.length > 2) {
var G__12455__i = 0, G__12455__a = new Array(arguments.length -  2);
while (G__12455__i < G__12455__a.length) {G__12455__a[G__12455__i] = arguments[G__12455__i + 2]; ++G__12455__i;}
G__12454 = new cljs.core.IndexedSeq(G__12455__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12454);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__12456__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__12456 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12457__i = 0, G__12457__a = new Array(arguments.length -  2);
while (G__12457__i < G__12457__a.length) {G__12457__a[G__12457__i] = arguments[G__12457__i + 2]; ++G__12457__i;}
  more = new cljs.core.IndexedSeq(G__12457__a,0);
} 
return G__12456__delegate.call(this,x,y,more);};
G__12456.cljs$lang$maxFixedArity = 2;
G__12456.cljs$lang$applyTo = (function (arglist__12458){
var x = cljs.core.first(arglist__12458);
arglist__12458 = cljs.core.next(arglist__12458);
var y = cljs.core.first(arglist__12458);
var more = cljs.core.rest(arglist__12458);
return G__12456__delegate(x,y,more);
});
G__12456.cljs$core$IFn$_invoke$arity$variadic = G__12456__delegate;
return G__12456;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__12459 = null;
if (arguments.length > 2) {
var G__12460__i = 0, G__12460__a = new Array(arguments.length -  2);
while (G__12460__i < G__12460__a.length) {G__12460__a[G__12460__i] = arguments[G__12460__i + 2]; ++G__12460__i;}
G__12459 = new cljs.core.IndexedSeq(G__12460__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12459);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__12461__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__12461 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12462__i = 0, G__12462__a = new Array(arguments.length -  2);
while (G__12462__i < G__12462__a.length) {G__12462__a[G__12462__i] = arguments[G__12462__i + 2]; ++G__12462__i;}
  more = new cljs.core.IndexedSeq(G__12462__a,0);
} 
return G__12461__delegate.call(this,x,y,more);};
G__12461.cljs$lang$maxFixedArity = 2;
G__12461.cljs$lang$applyTo = (function (arglist__12463){
var x = cljs.core.first(arglist__12463);
arglist__12463 = cljs.core.next(arglist__12463);
var y = cljs.core.first(arglist__12463);
var more = cljs.core.rest(arglist__12463);
return G__12461__delegate(x,y,more);
});
G__12461.cljs$core$IFn$_invoke$arity$variadic = G__12461__delegate;
return G__12461;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__12464 = null;
if (arguments.length > 2) {
var G__12465__i = 0, G__12465__a = new Array(arguments.length -  2);
while (G__12465__i < G__12465__a.length) {G__12465__a[G__12465__i] = arguments[G__12465__i + 2]; ++G__12465__i;}
G__12464 = new cljs.core.IndexedSeq(G__12465__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12464);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__12470__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__12470 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12471__i = 0, G__12471__a = new Array(arguments.length -  2);
while (G__12471__i < G__12471__a.length) {G__12471__a[G__12471__i] = arguments[G__12471__i + 2]; ++G__12471__i;}
  more = new cljs.core.IndexedSeq(G__12471__a,0);
} 
return G__12470__delegate.call(this,x,y,more);};
G__12470.cljs$lang$maxFixedArity = 2;
G__12470.cljs$lang$applyTo = (function (arglist__12472){
var x = cljs.core.first(arglist__12472);
arglist__12472 = cljs.core.next(arglist__12472);
var y = cljs.core.first(arglist__12472);
var more = cljs.core.rest(arglist__12472);
return G__12470__delegate(x,y,more);
});
G__12470.cljs$core$IFn$_invoke$arity$variadic = G__12470__delegate;
return G__12470;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__12473 = null;
if (arguments.length > 2) {
var G__12474__i = 0, G__12474__a = new Array(arguments.length -  2);
while (G__12474__i < G__12474__a.length) {G__12474__a[G__12474__i] = arguments[G__12474__i + 2]; ++G__12474__i;}
G__12473 = new cljs.core.IndexedSeq(G__12474__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12473);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__12475__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__12476 = y;
var G__12477 = cljs.core.first(more);
var G__12478 = cljs.core.next(more);
x = G__12476;
y = G__12477;
more = G__12478;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12475 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12479__i = 0, G__12479__a = new Array(arguments.length -  2);
while (G__12479__i < G__12479__a.length) {G__12479__a[G__12479__i] = arguments[G__12479__i + 2]; ++G__12479__i;}
  more = new cljs.core.IndexedSeq(G__12479__a,0);
} 
return G__12475__delegate.call(this,x,y,more);};
G__12475.cljs$lang$maxFixedArity = 2;
G__12475.cljs$lang$applyTo = (function (arglist__12480){
var x = cljs.core.first(arglist__12480);
arglist__12480 = cljs.core.next(arglist__12480);
var y = cljs.core.first(arglist__12480);
var more = cljs.core.rest(arglist__12480);
return G__12475__delegate(x,y,more);
});
G__12475.cljs$core$IFn$_invoke$arity$variadic = G__12475__delegate;
return G__12475;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__12481 = null;
if (arguments.length > 2) {
var G__12482__i = 0, G__12482__a = new Array(arguments.length -  2);
while (G__12482__i < G__12482__a.length) {G__12482__a[G__12482__i] = arguments[G__12482__i + 2]; ++G__12482__i;}
G__12481 = new cljs.core.IndexedSeq(G__12482__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12481);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__12483__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__12484 = y;
var G__12485 = cljs.core.first(more);
var G__12486 = cljs.core.next(more);
x = G__12484;
y = G__12485;
more = G__12486;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12483 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12487__i = 0, G__12487__a = new Array(arguments.length -  2);
while (G__12487__i < G__12487__a.length) {G__12487__a[G__12487__i] = arguments[G__12487__i + 2]; ++G__12487__i;}
  more = new cljs.core.IndexedSeq(G__12487__a,0);
} 
return G__12483__delegate.call(this,x,y,more);};
G__12483.cljs$lang$maxFixedArity = 2;
G__12483.cljs$lang$applyTo = (function (arglist__12488){
var x = cljs.core.first(arglist__12488);
arglist__12488 = cljs.core.next(arglist__12488);
var y = cljs.core.first(arglist__12488);
var more = cljs.core.rest(arglist__12488);
return G__12483__delegate(x,y,more);
});
G__12483.cljs$core$IFn$_invoke$arity$variadic = G__12483__delegate;
return G__12483;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__12489 = null;
if (arguments.length > 2) {
var G__12490__i = 0, G__12490__a = new Array(arguments.length -  2);
while (G__12490__i < G__12490__a.length) {G__12490__a[G__12490__i] = arguments[G__12490__i + 2]; ++G__12490__i;}
G__12489 = new cljs.core.IndexedSeq(G__12490__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__12491__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__12492 = y;
var G__12493 = cljs.core.first(more);
var G__12494 = cljs.core.next(more);
x = G__12492;
y = G__12493;
more = G__12494;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12491 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12495__i = 0, G__12495__a = new Array(arguments.length -  2);
while (G__12495__i < G__12495__a.length) {G__12495__a[G__12495__i] = arguments[G__12495__i + 2]; ++G__12495__i;}
  more = new cljs.core.IndexedSeq(G__12495__a,0);
} 
return G__12491__delegate.call(this,x,y,more);};
G__12491.cljs$lang$maxFixedArity = 2;
G__12491.cljs$lang$applyTo = (function (arglist__12496){
var x = cljs.core.first(arglist__12496);
arglist__12496 = cljs.core.next(arglist__12496);
var y = cljs.core.first(arglist__12496);
var more = cljs.core.rest(arglist__12496);
return G__12491__delegate(x,y,more);
});
G__12491.cljs$core$IFn$_invoke$arity$variadic = G__12491__delegate;
return G__12491;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__12497 = null;
if (arguments.length > 2) {
var G__12498__i = 0, G__12498__a = new Array(arguments.length -  2);
while (G__12498__i < G__12498__a.length) {G__12498__a[G__12498__i] = arguments[G__12498__i + 2]; ++G__12498__i;}
G__12497 = new cljs.core.IndexedSeq(G__12498__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12497);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__12499__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__12500 = y;
var G__12501 = cljs.core.first(more);
var G__12502 = cljs.core.next(more);
x = G__12500;
y = G__12501;
more = G__12502;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12499 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12503__i = 0, G__12503__a = new Array(arguments.length -  2);
while (G__12503__i < G__12503__a.length) {G__12503__a[G__12503__i] = arguments[G__12503__i + 2]; ++G__12503__i;}
  more = new cljs.core.IndexedSeq(G__12503__a,0);
} 
return G__12499__delegate.call(this,x,y,more);};
G__12499.cljs$lang$maxFixedArity = 2;
G__12499.cljs$lang$applyTo = (function (arglist__12504){
var x = cljs.core.first(arglist__12504);
arglist__12504 = cljs.core.next(arglist__12504);
var y = cljs.core.first(arglist__12504);
var more = cljs.core.rest(arglist__12504);
return G__12499__delegate(x,y,more);
});
G__12499.cljs$core$IFn$_invoke$arity$variadic = G__12499__delegate;
return G__12499;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__12505 = null;
if (arguments.length > 2) {
var G__12506__i = 0, G__12506__a = new Array(arguments.length -  2);
while (G__12506__i < G__12506__a.length) {G__12506__a[G__12506__i] = arguments[G__12506__i + 2]; ++G__12506__i;}
G__12505 = new cljs.core.IndexedSeq(G__12506__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12505);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4081__auto__ = x;
var y__4082__auto__ = y;
return ((x__4081__auto__ > y__4082__auto__) ? x__4081__auto__ : y__4082__auto__);
});
var max__3 = (function() { 
var G__12507__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4081__auto__ = x;
var y__4082__auto__ = y;
return ((x__4081__auto__ > y__4082__auto__) ? x__4081__auto__ : y__4082__auto__);
})(),more);
};
var G__12507 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12508__i = 0, G__12508__a = new Array(arguments.length -  2);
while (G__12508__i < G__12508__a.length) {G__12508__a[G__12508__i] = arguments[G__12508__i + 2]; ++G__12508__i;}
  more = new cljs.core.IndexedSeq(G__12508__a,0);
} 
return G__12507__delegate.call(this,x,y,more);};
G__12507.cljs$lang$maxFixedArity = 2;
G__12507.cljs$lang$applyTo = (function (arglist__12509){
var x = cljs.core.first(arglist__12509);
arglist__12509 = cljs.core.next(arglist__12509);
var y = cljs.core.first(arglist__12509);
var more = cljs.core.rest(arglist__12509);
return G__12507__delegate(x,y,more);
});
G__12507.cljs$core$IFn$_invoke$arity$variadic = G__12507__delegate;
return G__12507;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__12510 = null;
if (arguments.length > 2) {
var G__12511__i = 0, G__12511__a = new Array(arguments.length -  2);
while (G__12511__i < G__12511__a.length) {G__12511__a[G__12511__i] = arguments[G__12511__i + 2]; ++G__12511__i;}
G__12510 = new cljs.core.IndexedSeq(G__12511__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12510);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4088__auto__ = x;
var y__4089__auto__ = y;
return ((x__4088__auto__ < y__4089__auto__) ? x__4088__auto__ : y__4089__auto__);
});
var min__3 = (function() { 
var G__12512__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4088__auto__ = x;
var y__4089__auto__ = y;
return ((x__4088__auto__ < y__4089__auto__) ? x__4088__auto__ : y__4089__auto__);
})(),more);
};
var G__12512 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12513__i = 0, G__12513__a = new Array(arguments.length -  2);
while (G__12513__i < G__12513__a.length) {G__12513__a[G__12513__i] = arguments[G__12513__i + 2]; ++G__12513__i;}
  more = new cljs.core.IndexedSeq(G__12513__a,0);
} 
return G__12512__delegate.call(this,x,y,more);};
G__12512.cljs$lang$maxFixedArity = 2;
G__12512.cljs$lang$applyTo = (function (arglist__12514){
var x = cljs.core.first(arglist__12514);
arglist__12514 = cljs.core.next(arglist__12514);
var y = cljs.core.first(arglist__12514);
var more = cljs.core.rest(arglist__12514);
return G__12512__delegate(x,y,more);
});
G__12512.cljs$core$IFn$_invoke$arity$variadic = G__12512__delegate;
return G__12512;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__12515 = null;
if (arguments.length > 2) {
var G__12516__i = 0, G__12516__a = new Array(arguments.length -  2);
while (G__12516__i < G__12516__a.length) {G__12516__a[G__12516__i] = arguments[G__12516__i + 2]; ++G__12516__i;}
G__12515 = new cljs.core.IndexedSeq(G__12516__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12515);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__12517__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__12517 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12518__i = 0, G__12518__a = new Array(arguments.length -  2);
while (G__12518__i < G__12518__a.length) {G__12518__a[G__12518__i] = arguments[G__12518__i + 2]; ++G__12518__i;}
  more = new cljs.core.IndexedSeq(G__12518__a,0);
} 
return G__12517__delegate.call(this,x,y,more);};
G__12517.cljs$lang$maxFixedArity = 2;
G__12517.cljs$lang$applyTo = (function (arglist__12519){
var x = cljs.core.first(arglist__12519);
arglist__12519 = cljs.core.next(arglist__12519);
var y = cljs.core.first(arglist__12519);
var more = cljs.core.rest(arglist__12519);
return G__12517__delegate(x,y,more);
});
G__12517.cljs$core$IFn$_invoke$arity$variadic = G__12517__delegate;
return G__12517;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__12520 = null;
if (arguments.length > 2) {
var G__12521__i = 0, G__12521__a = new Array(arguments.length -  2);
while (G__12521__i < G__12521__a.length) {G__12521__a[G__12521__i] = arguments[G__12521__i + 2]; ++G__12521__i;}
G__12520 = new cljs.core.IndexedSeq(G__12521__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12520);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__12522__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__12522 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12523__i = 0, G__12523__a = new Array(arguments.length -  2);
while (G__12523__i < G__12523__a.length) {G__12523__a[G__12523__i] = arguments[G__12523__i + 2]; ++G__12523__i;}
  more = new cljs.core.IndexedSeq(G__12523__a,0);
} 
return G__12522__delegate.call(this,x,y,more);};
G__12522.cljs$lang$maxFixedArity = 2;
G__12522.cljs$lang$applyTo = (function (arglist__12524){
var x = cljs.core.first(arglist__12524);
arglist__12524 = cljs.core.next(arglist__12524);
var y = cljs.core.first(arglist__12524);
var more = cljs.core.rest(arglist__12524);
return G__12522__delegate(x,y,more);
});
G__12522.cljs$core$IFn$_invoke$arity$variadic = G__12522__delegate;
return G__12522;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__12525 = null;
if (arguments.length > 2) {
var G__12526__i = 0, G__12526__a = new Array(arguments.length -  2);
while (G__12526__i < G__12526__a.length) {G__12526__a[G__12526__i] = arguments[G__12526__i + 2]; ++G__12526__i;}
G__12525 = new cljs.core.IndexedSeq(G__12526__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12525);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__12531__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__12531 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12532__i = 0, G__12532__a = new Array(arguments.length -  2);
while (G__12532__i < G__12532__a.length) {G__12532__a[G__12532__i] = arguments[G__12532__i + 2]; ++G__12532__i;}
  more = new cljs.core.IndexedSeq(G__12532__a,0);
} 
return G__12531__delegate.call(this,x,y,more);};
G__12531.cljs$lang$maxFixedArity = 2;
G__12531.cljs$lang$applyTo = (function (arglist__12533){
var x = cljs.core.first(arglist__12533);
arglist__12533 = cljs.core.next(arglist__12533);
var y = cljs.core.first(arglist__12533);
var more = cljs.core.rest(arglist__12533);
return G__12531__delegate(x,y,more);
});
G__12531.cljs$core$IFn$_invoke$arity$variadic = G__12531__delegate;
return G__12531;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__12534 = null;
if (arguments.length > 2) {
var G__12535__i = 0, G__12535__a = new Array(arguments.length -  2);
while (G__12535__i < G__12535__a.length) {G__12535__a[G__12535__i] = arguments[G__12535__i + 2]; ++G__12535__i;}
G__12534 = new cljs.core.IndexedSeq(G__12535__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12534);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__12536__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__12536 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12537__i = 0, G__12537__a = new Array(arguments.length -  2);
while (G__12537__i < G__12537__a.length) {G__12537__a[G__12537__i] = arguments[G__12537__i + 2]; ++G__12537__i;}
  more = new cljs.core.IndexedSeq(G__12537__a,0);
} 
return G__12536__delegate.call(this,x,y,more);};
G__12536.cljs$lang$maxFixedArity = 2;
G__12536.cljs$lang$applyTo = (function (arglist__12538){
var x = cljs.core.first(arglist__12538);
arglist__12538 = cljs.core.next(arglist__12538);
var y = cljs.core.first(arglist__12538);
var more = cljs.core.rest(arglist__12538);
return G__12536__delegate(x,y,more);
});
G__12536.cljs$core$IFn$_invoke$arity$variadic = G__12536__delegate;
return G__12536;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__12539 = null;
if (arguments.length > 2) {
var G__12540__i = 0, G__12540__a = new Array(arguments.length -  2);
while (G__12540__i < G__12540__a.length) {G__12540__a[G__12540__i] = arguments[G__12540__i + 2]; ++G__12540__i;}
G__12539 = new cljs.core.IndexedSeq(G__12540__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12539);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__12541__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__12541 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12542__i = 0, G__12542__a = new Array(arguments.length -  2);
while (G__12542__i < G__12542__a.length) {G__12542__a[G__12542__i] = arguments[G__12542__i + 2]; ++G__12542__i;}
  more = new cljs.core.IndexedSeq(G__12542__a,0);
} 
return G__12541__delegate.call(this,x,y,more);};
G__12541.cljs$lang$maxFixedArity = 2;
G__12541.cljs$lang$applyTo = (function (arglist__12543){
var x = cljs.core.first(arglist__12543);
arglist__12543 = cljs.core.next(arglist__12543);
var y = cljs.core.first(arglist__12543);
var more = cljs.core.rest(arglist__12543);
return G__12541__delegate(x,y,more);
});
G__12541.cljs$core$IFn$_invoke$arity$variadic = G__12541__delegate;
return G__12541;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__12544 = null;
if (arguments.length > 2) {
var G__12545__i = 0, G__12545__a = new Array(arguments.length -  2);
while (G__12545__i < G__12545__a.length) {G__12545__a[G__12545__i] = arguments[G__12545__i + 2]; ++G__12545__i;}
G__12544 = new cljs.core.IndexedSeq(G__12545__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12544);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__12548 = x;
var G__12549 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__12548,G__12549) : cljs.core.mod.call(null,G__12548,G__12549));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__12550__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__12550 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12551__i = 0, G__12551__a = new Array(arguments.length -  2);
while (G__12551__i < G__12551__a.length) {G__12551__a[G__12551__i] = arguments[G__12551__i + 2]; ++G__12551__i;}
  more = new cljs.core.IndexedSeq(G__12551__a,0);
} 
return G__12550__delegate.call(this,x,y,more);};
G__12550.cljs$lang$maxFixedArity = 2;
G__12550.cljs$lang$applyTo = (function (arglist__12552){
var x = cljs.core.first(arglist__12552);
arglist__12552 = cljs.core.next(arglist__12552);
var y = cljs.core.first(arglist__12552);
var more = cljs.core.rest(arglist__12552);
return G__12550__delegate(x,y,more);
});
G__12550.cljs$core$IFn$_invoke$arity$variadic = G__12550__delegate;
return G__12550;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__12553 = null;
if (arguments.length > 2) {
var G__12554__i = 0, G__12554__a = new Array(arguments.length -  2);
while (G__12554__i < G__12554__a.length) {G__12554__a[G__12554__i] = arguments[G__12554__i + 2]; ++G__12554__i;}
G__12553 = new cljs.core.IndexedSeq(G__12554__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12553);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__12555__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__12555 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12556__i = 0, G__12556__a = new Array(arguments.length -  2);
while (G__12556__i < G__12556__a.length) {G__12556__a[G__12556__i] = arguments[G__12556__i + 2]; ++G__12556__i;}
  more = new cljs.core.IndexedSeq(G__12556__a,0);
} 
return G__12555__delegate.call(this,x,y,more);};
G__12555.cljs$lang$maxFixedArity = 2;
G__12555.cljs$lang$applyTo = (function (arglist__12557){
var x = cljs.core.first(arglist__12557);
arglist__12557 = cljs.core.next(arglist__12557);
var y = cljs.core.first(arglist__12557);
var more = cljs.core.rest(arglist__12557);
return G__12555__delegate(x,y,more);
});
G__12555.cljs$core$IFn$_invoke$arity$variadic = G__12555__delegate;
return G__12555;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__12558 = null;
if (arguments.length > 2) {
var G__12559__i = 0, G__12559__a = new Array(arguments.length -  2);
while (G__12559__i < G__12559__a.length) {G__12559__a[G__12559__i] = arguments[G__12559__i + 2]; ++G__12559__i;}
G__12558 = new cljs.core.IndexedSeq(G__12559__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12558);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__12562 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12562) : Math.floor.call(null,G__12562));
} else {
var G__12563 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12563) : Math.ceil.call(null,G__12563));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__12564__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__12564 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12565__i = 0, G__12565__a = new Array(arguments.length -  2);
while (G__12565__i < G__12565__a.length) {G__12565__a[G__12565__i] = arguments[G__12565__i + 2]; ++G__12565__i;}
  more = new cljs.core.IndexedSeq(G__12565__a,0);
} 
return G__12564__delegate.call(this,x,y,more);};
G__12564.cljs$lang$maxFixedArity = 2;
G__12564.cljs$lang$applyTo = (function (arglist__12566){
var x = cljs.core.first(arglist__12566);
arglist__12566 = cljs.core.next(arglist__12566);
var y = cljs.core.first(arglist__12566);
var more = cljs.core.rest(arglist__12566);
return G__12564__delegate(x,y,more);
});
G__12564.cljs$core$IFn$_invoke$arity$variadic = G__12564__delegate;
return G__12564;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__12567 = null;
if (arguments.length > 2) {
var G__12568__i = 0, G__12568__a = new Array(arguments.length -  2);
while (G__12568__i < G__12568__a.length) {G__12568__a[G__12568__i] = arguments[G__12568__i + 2]; ++G__12568__i;}
G__12567 = new cljs.core.IndexedSeq(G__12568__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12567);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__12569__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__12569 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12570__i = 0, G__12570__a = new Array(arguments.length -  2);
while (G__12570__i < G__12570__a.length) {G__12570__a[G__12570__i] = arguments[G__12570__i + 2]; ++G__12570__i;}
  more = new cljs.core.IndexedSeq(G__12570__a,0);
} 
return G__12569__delegate.call(this,x,y,more);};
G__12569.cljs$lang$maxFixedArity = 2;
G__12569.cljs$lang$applyTo = (function (arglist__12571){
var x = cljs.core.first(arglist__12571);
arglist__12571 = cljs.core.next(arglist__12571);
var y = cljs.core.first(arglist__12571);
var more = cljs.core.rest(arglist__12571);
return G__12569__delegate(x,y,more);
});
G__12569.cljs$core$IFn$_invoke$arity$variadic = G__12569__delegate;
return G__12569;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__12572 = null;
if (arguments.length > 2) {
var G__12573__i = 0, G__12573__a = new Array(arguments.length -  2);
while (G__12573__i < G__12573__a.length) {G__12573__a[G__12573__i] = arguments[G__12573__i + 2]; ++G__12573__i;}
G__12572 = new cljs.core.IndexedSeq(G__12573__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12572);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__12574__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__12574 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12575__i = 0, G__12575__a = new Array(arguments.length -  2);
while (G__12575__i < G__12575__a.length) {G__12575__a[G__12575__i] = arguments[G__12575__i + 2]; ++G__12575__i;}
  more = new cljs.core.IndexedSeq(G__12575__a,0);
} 
return G__12574__delegate.call(this,x,y,more);};
G__12574.cljs$lang$maxFixedArity = 2;
G__12574.cljs$lang$applyTo = (function (arglist__12576){
var x = cljs.core.first(arglist__12576);
arglist__12576 = cljs.core.next(arglist__12576);
var y = cljs.core.first(arglist__12576);
var more = cljs.core.rest(arglist__12576);
return G__12574__delegate(x,y,more);
});
G__12574.cljs$core$IFn$_invoke$arity$variadic = G__12574__delegate;
return G__12574;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__12577 = null;
if (arguments.length > 2) {
var G__12578__i = 0, G__12578__a = new Array(arguments.length -  2);
while (G__12578__i < G__12578__a.length) {G__12578__a[G__12578__i] = arguments[G__12578__i + 2]; ++G__12578__i;}
G__12577 = new cljs.core.IndexedSeq(G__12578__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12577);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__12579__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__12579 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12580__i = 0, G__12580__a = new Array(arguments.length -  2);
while (G__12580__i < G__12580__a.length) {G__12580__a[G__12580__i] = arguments[G__12580__i + 2]; ++G__12580__i;}
  more = new cljs.core.IndexedSeq(G__12580__a,0);
} 
return G__12579__delegate.call(this,x,y,more);};
G__12579.cljs$lang$maxFixedArity = 2;
G__12579.cljs$lang$applyTo = (function (arglist__12581){
var x = cljs.core.first(arglist__12581);
arglist__12581 = cljs.core.next(arglist__12581);
var y = cljs.core.first(arglist__12581);
var more = cljs.core.rest(arglist__12581);
return G__12579__delegate(x,y,more);
});
G__12579.cljs$core$IFn$_invoke$arity$variadic = G__12579__delegate;
return G__12579;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__12582 = null;
if (arguments.length > 2) {
var G__12583__i = 0, G__12583__a = new Array(arguments.length -  2);
while (G__12583__i < G__12583__a.length) {G__12583__a[G__12583__i] = arguments[G__12583__i + 2]; ++G__12583__i;}
G__12582 = new cljs.core.IndexedSeq(G__12583__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12582);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__12588__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__12589 = y;
var G__12590 = cljs.core.first(more);
var G__12591 = cljs.core.next(more);
x = G__12589;
y = G__12590;
more = G__12591;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12588 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12592__i = 0, G__12592__a = new Array(arguments.length -  2);
while (G__12592__i < G__12592__a.length) {G__12592__a[G__12592__i] = arguments[G__12592__i + 2]; ++G__12592__i;}
  more = new cljs.core.IndexedSeq(G__12592__a,0);
} 
return G__12588__delegate.call(this,x,y,more);};
G__12588.cljs$lang$maxFixedArity = 2;
G__12588.cljs$lang$applyTo = (function (arglist__12593){
var x = cljs.core.first(arglist__12593);
arglist__12593 = cljs.core.next(arglist__12593);
var y = cljs.core.first(arglist__12593);
var more = cljs.core.rest(arglist__12593);
return G__12588__delegate(x,y,more);
});
G__12588.cljs$core$IFn$_invoke$arity$variadic = G__12588__delegate;
return G__12588;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__12594 = null;
if (arguments.length > 2) {
var G__12595__i = 0, G__12595__a = new Array(arguments.length -  2);
while (G__12595__i < G__12595__a.length) {G__12595__a[G__12595__i] = arguments[G__12595__i + 2]; ++G__12595__i;}
G__12594 = new cljs.core.IndexedSeq(G__12595__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12594);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__12596 = (n__$1 - (1));
var G__12597 = cljs.core.next(xs);
n__$1 = G__12596;
xs = G__12597;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__12601 = x;
return goog.string.buildString(G__12601);
}
});
var str__2 = (function() { 
var G__12602__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__12603 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__12604 = cljs.core.next(more);
sb = G__12603;
more = G__12604;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__12602 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__12605__i = 0, G__12605__a = new Array(arguments.length -  1);
while (G__12605__i < G__12605__a.length) {G__12605__a[G__12605__i] = arguments[G__12605__i + 1]; ++G__12605__i;}
  ys = new cljs.core.IndexedSeq(G__12605__a,0);
} 
return G__12602__delegate.call(this,x,ys);};
G__12602.cljs$lang$maxFixedArity = 1;
G__12602.cljs$lang$applyTo = (function (arglist__12606){
var x = cljs.core.first(arglist__12606);
var ys = cljs.core.rest(arglist__12606);
return G__12602__delegate(x,ys);
});
G__12602.cljs$core$IFn$_invoke$arity$variadic = G__12602__delegate;
return G__12602;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__12607 = null;
if (arguments.length > 1) {
var G__12608__i = 0, G__12608__a = new Array(arguments.length -  1);
while (G__12608__i < G__12608__a.length) {G__12608__a[G__12608__i] = arguments[G__12608__i + 1]; ++G__12608__i;}
G__12607 = new cljs.core.IndexedSeq(G__12608__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12607);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__12609 = cljs.core.next(xs);
var G__12610 = cljs.core.next(ys);
xs = G__12609;
ys = G__12610;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__12611 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__12612 = cljs.core.next(s);
res = G__12611;
s = G__12612;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__12617 = ((h + (cljs.core.hash((function (){var G__12615 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12615) : cljs.core.key.call(null,G__12615));
})()) ^ cljs.core.hash((function (){var G__12616 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12616) : cljs.core.val.call(null,G__12616));
})()))) % (4503599627370496));
var G__12618 = cljs.core.next(s);
h = G__12617;
s = G__12618;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__12619 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__12620 = cljs.core.next(s__$1);
h = G__12619;
s__$1 = G__12620;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__12631_12641 = cljs.core.seq(fn_map);
var chunk__12632_12642 = null;
var count__12633_12643 = (0);
var i__12634_12644 = (0);
while(true){
if((i__12634_12644 < count__12633_12643)){
var vec__12635_12645 = chunk__12632_12642.cljs$core$IIndexed$_nth$arity$2(null,i__12634_12644);
var key_name_12646 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12635_12645,(0),null);
var f_12647 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12635_12645,(1),null);
var str_name_12648 = (function (){var G__12636 = key_name_12646;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12636) : cljs.core.name.call(null,G__12636));
})();
(obj[str_name_12648] = f_12647);

var G__12649 = seq__12631_12641;
var G__12650 = chunk__12632_12642;
var G__12651 = count__12633_12643;
var G__12652 = (i__12634_12644 + (1));
seq__12631_12641 = G__12649;
chunk__12632_12642 = G__12650;
count__12633_12643 = G__12651;
i__12634_12644 = G__12652;
continue;
} else {
var temp__4126__auto___12653 = cljs.core.seq(seq__12631_12641);
if(temp__4126__auto___12653){
var seq__12631_12654__$1 = temp__4126__auto___12653;
if(cljs.core.chunked_seq_QMARK_(seq__12631_12654__$1)){
var c__4551__auto___12655 = (function (){var G__12637 = seq__12631_12654__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__12637) : cljs.core.chunk_first.call(null,G__12637));
})();
var G__12656 = (function (){var G__12638 = seq__12631_12654__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__12638) : cljs.core.chunk_rest.call(null,G__12638));
})();
var G__12657 = c__4551__auto___12655;
var G__12658 = cljs.core.count(c__4551__auto___12655);
var G__12659 = (0);
seq__12631_12641 = G__12656;
chunk__12632_12642 = G__12657;
count__12633_12643 = G__12658;
i__12634_12644 = G__12659;
continue;
} else {
var vec__12639_12660 = cljs.core.first(seq__12631_12654__$1);
var key_name_12661 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12639_12660,(0),null);
var f_12662 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12639_12660,(1),null);
var str_name_12663 = (function (){var G__12640 = key_name_12661;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12640) : cljs.core.name.call(null,G__12640));
})();
(obj[str_name_12663] = f_12662);

var G__12664 = cljs.core.next(seq__12631_12654__$1);
var G__12665 = null;
var G__12666 = (0);
var G__12667 = (0);
seq__12631_12641 = G__12664;
chunk__12632_12642 = G__12665;
count__12633_12643 = G__12666;
i__12634_12644 = G__12667;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__12669 = coll;
if(G__12669){
var bit__4445__auto__ = (G__12669.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4445__auto__) || (G__12669.cljs$core$IReversible$)){
return true;
} else {
if((!G__12669.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12669);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12669);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__12670 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__12670;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__12671 = (i - (1));
var G__12672 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__12671;
r = G__12672;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__12673__i = 0, G__12673__a = new Array(arguments.length -  0);
while (G__12673__i < G__12673__a.length) {G__12673__a[G__12673__i] = arguments[G__12673__i + 0]; ++G__12673__i;}
  xs = new cljs.core.IndexedSeq(G__12673__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__12674){
var xs = cljs.core.seq(arglist__12674);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3764__auto__ = (coll == null);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var G__12678 = coll;
if(G__12678){
var bit__4438__auto__ = (G__12678.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4438__auto__) || (G__12678.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__12680 = x;
if(G__12680){
var bit__4445__auto__ = (G__12680.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4445__auto__) || (G__12680.cljs$core$IList$)){
return true;
} else {
if((!G__12680.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12680);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12680);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3752__auto__ = cljs.core.not(a.ns);
if(and__3752__auto__){
return b.ns;
} else {
return and__3752__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__12687 = a.ns;
var G__12688 = b.ns;
return goog.array.defaultCompare(G__12687,G__12688);
})();
if(((0) === nsc)){
var G__12689 = a.name;
var G__12690 = b.name;
return goog.array.defaultCompare(G__12689,G__12690);
} else {
return nsc;
}
}
} else {
var G__12691 = a.name;
var G__12692 = b.name;
return goog.array.defaultCompare(G__12691,G__12692);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4185__auto__ = self__._hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__12694 = null;
var G__12694__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__12694__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__12694 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__12694__2.call(this,self__,coll);
case 3:
return G__12694__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12694.cljs$core$IFn$_invoke$arity$2 = G__12694__2;
G__12694.cljs$core$IFn$_invoke$arity$3 = G__12694__3;
return G__12694;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args12693){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12693)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__12696 = x;
if(G__12696){
var bit__4438__auto__ = (G__12696.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4438__auto__) || (G__12696.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__12698 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12698) : cljs.core.name.call(null,G__12698));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__12699 = ls.sval();
ls = G__12699;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__12701 = s;
if(G__12701){
var bit__4438__auto__ = (G__12701.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4438__auto__) || (G__12701.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__12702 = cljs.core.next(s__$1);
s__$1 = G__12702;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_12703 = (0);
var xs_12704 = cljs.core.seq(coll);
while(true){
if(xs_12704){
(ret[i_12703] = cljs.core.to_array(cljs.core.first(xs_12704)));

var G__12705 = (i_12703 + (1));
var G__12706 = cljs.core.next(xs_12704);
i_12703 = G__12705;
xs_12704 = G__12706;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12709 = (i + (1));
var G__12710 = cljs.core.next(s__$1);
i = G__12709;
s__$1 = G__12710;
continue;
} else {
return a;
}
break;
}
} else {
var n__4651__auto___12711 = size;
var i_12712 = (0);
while(true){
if((i_12712 < n__4651__auto___12711)){
(a[i_12712] = init_val_or_seq);

var G__12713 = (i_12712 + (1));
i_12712 = G__12713;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12716 = (i + (1));
var G__12717 = cljs.core.next(s__$1);
i = G__12716;
s__$1 = G__12717;
continue;
} else {
return a;
}
break;
}
} else {
var n__4651__auto___12718 = size;
var i_12719 = (0);
while(true){
if((i_12719 < n__4651__auto___12718)){
(a[i_12719] = init_val_or_seq);

var G__12720 = (i_12719 + (1));
i_12719 = G__12720;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12723 = (i + (1));
var G__12724 = cljs.core.next(s__$1);
i = G__12723;
s__$1 = G__12724;
continue;
} else {
return a;
}
break;
}
} else {
var n__4651__auto___12725 = size;
var i_12726 = (0);
while(true){
if((i_12726 < n__4651__auto___12725)){
(a[i_12726] = init_val_or_seq);

var G__12727 = (i_12726 + (1));
i_12726 = G__12727;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12730 = (i + (1));
var G__12731 = cljs.core.next(s__$1);
i = G__12730;
s__$1 = G__12731;
continue;
} else {
return a;
}
break;
}
} else {
var n__4651__auto___12732 = size;
var i_12733 = (0);
while(true){
if((i_12733 < n__4651__auto___12732)){
(a[i_12733] = init_val_or_seq);

var G__12734 = (i_12733 + (1));
i_12733 = G__12734;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__12735 = cljs.core.next(s__$1);
var G__12736 = (i - (1));
var G__12737 = (sum + (1));
s__$1 = G__12735;
i = G__12736;
sum = G__12737;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__12757__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__12757 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__12758__i = 0, G__12758__a = new Array(arguments.length -  2);
while (G__12758__i < G__12758__a.length) {G__12758__a[G__12758__i] = arguments[G__12758__i + 2]; ++G__12758__i;}
  zs = new cljs.core.IndexedSeq(G__12758__a,0);
} 
return G__12757__delegate.call(this,x,y,zs);};
G__12757.cljs$lang$maxFixedArity = 2;
G__12757.cljs$lang$applyTo = (function (arglist__12759){
var x = cljs.core.first(arglist__12759);
arglist__12759 = cljs.core.next(arglist__12759);
var y = cljs.core.first(arglist__12759);
var zs = cljs.core.rest(arglist__12759);
return G__12757__delegate(x,y,zs);
});
G__12757.cljs$core$IFn$_invoke$arity$variadic = G__12757__delegate;
return G__12757;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__12760 = null;
if (arguments.length > 2) {
var G__12761__i = 0, G__12761__a = new Array(arguments.length -  2);
while (G__12761__i < G__12761__a.length) {G__12761__a[G__12761__i] = arguments[G__12761__i + 2]; ++G__12761__i;}
G__12760 = new cljs.core.IndexedSeq(G__12761__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12760);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__12762__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__12762 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__12763__i = 0, G__12763__a = new Array(arguments.length -  4);
while (G__12763__i < G__12763__a.length) {G__12763__a[G__12763__i] = arguments[G__12763__i + 4]; ++G__12763__i;}
  more = new cljs.core.IndexedSeq(G__12763__a,0);
} 
return G__12762__delegate.call(this,a,b,c,d,more);};
G__12762.cljs$lang$maxFixedArity = 4;
G__12762.cljs$lang$applyTo = (function (arglist__12764){
var a = cljs.core.first(arglist__12764);
arglist__12764 = cljs.core.next(arglist__12764);
var b = cljs.core.first(arglist__12764);
arglist__12764 = cljs.core.next(arglist__12764);
var c = cljs.core.first(arglist__12764);
arglist__12764 = cljs.core.next(arglist__12764);
var d = cljs.core.first(arglist__12764);
var more = cljs.core.rest(arglist__12764);
return G__12762__delegate(a,b,c,d,more);
});
G__12762.cljs$core$IFn$_invoke$arity$variadic = G__12762__delegate;
return G__12762;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__12765 = null;
if (arguments.length > 4) {
var G__12766__i = 0, G__12766__a = new Array(arguments.length -  4);
while (G__12766__i < G__12766__a.length) {G__12766__a[G__12766__i] = arguments[G__12766__i + 4]; ++G__12766__i;}
G__12765 = new cljs.core.IndexedSeq(G__12766__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__12765);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__12767__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__12768 = ntcoll;
var G__12769 = cljs.core.first(vals);
var G__12770 = cljs.core.next(vals);
tcoll = G__12768;
val = G__12769;
vals = G__12770;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12767 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__12771__i = 0, G__12771__a = new Array(arguments.length -  2);
while (G__12771__i < G__12771__a.length) {G__12771__a[G__12771__i] = arguments[G__12771__i + 2]; ++G__12771__i;}
  vals = new cljs.core.IndexedSeq(G__12771__a,0);
} 
return G__12767__delegate.call(this,tcoll,val,vals);};
G__12767.cljs$lang$maxFixedArity = 2;
G__12767.cljs$lang$applyTo = (function (arglist__12772){
var tcoll = cljs.core.first(arglist__12772);
arglist__12772 = cljs.core.next(arglist__12772);
var val = cljs.core.first(arglist__12772);
var vals = cljs.core.rest(arglist__12772);
return G__12767__delegate(tcoll,val,vals);
});
G__12767.cljs$core$IFn$_invoke$arity$variadic = G__12767__delegate;
return G__12767;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__12773 = null;
if (arguments.length > 2) {
var G__12774__i = 0, G__12774__a = new Array(arguments.length -  2);
while (G__12774__i < G__12774__a.length) {G__12774__a[G__12774__i] = arguments[G__12774__i + 2]; ++G__12774__i;}
G__12773 = new cljs.core.IndexedSeq(G__12774__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__12773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__12775__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__12776 = ntcoll;
var G__12777 = cljs.core.first(kvs);
var G__12778 = cljs.core.second(kvs);
var G__12779 = cljs.core.nnext(kvs);
tcoll = G__12776;
key = G__12777;
val = G__12778;
kvs = G__12779;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12775 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__12780__i = 0, G__12780__a = new Array(arguments.length -  3);
while (G__12780__i < G__12780__a.length) {G__12780__a[G__12780__i] = arguments[G__12780__i + 3]; ++G__12780__i;}
  kvs = new cljs.core.IndexedSeq(G__12780__a,0);
} 
return G__12775__delegate.call(this,tcoll,key,val,kvs);};
G__12775.cljs$lang$maxFixedArity = 3;
G__12775.cljs$lang$applyTo = (function (arglist__12781){
var tcoll = cljs.core.first(arglist__12781);
arglist__12781 = cljs.core.next(arglist__12781);
var key = cljs.core.first(arglist__12781);
arglist__12781 = cljs.core.next(arglist__12781);
var val = cljs.core.first(arglist__12781);
var kvs = cljs.core.rest(arglist__12781);
return G__12775__delegate(tcoll,key,val,kvs);
});
G__12775.cljs$core$IFn$_invoke$arity$variadic = G__12775__delegate;
return G__12775;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__12782 = null;
if (arguments.length > 3) {
var G__12783__i = 0, G__12783__a = new Array(arguments.length -  3);
while (G__12783__i < G__12783__a.length) {G__12783__a[G__12783__i] = arguments[G__12783__i + 3]; ++G__12783__i;}
G__12782 = new cljs.core.IndexedSeq(G__12783__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__12782);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__12784__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__12785 = ntcoll;
var G__12786 = cljs.core.first(ks);
var G__12787 = cljs.core.next(ks);
tcoll = G__12785;
key = G__12786;
ks = G__12787;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12784 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12788__i = 0, G__12788__a = new Array(arguments.length -  2);
while (G__12788__i < G__12788__a.length) {G__12788__a[G__12788__i] = arguments[G__12788__i + 2]; ++G__12788__i;}
  ks = new cljs.core.IndexedSeq(G__12788__a,0);
} 
return G__12784__delegate.call(this,tcoll,key,ks);};
G__12784.cljs$lang$maxFixedArity = 2;
G__12784.cljs$lang$applyTo = (function (arglist__12789){
var tcoll = cljs.core.first(arglist__12789);
arglist__12789 = cljs.core.next(arglist__12789);
var key = cljs.core.first(arglist__12789);
var ks = cljs.core.rest(arglist__12789);
return G__12784__delegate(tcoll,key,ks);
});
G__12784.cljs$core$IFn$_invoke$arity$variadic = G__12784__delegate;
return G__12784;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__12790 = null;
if (arguments.length > 2) {
var G__12791__i = 0, G__12791__a = new Array(arguments.length -  2);
while (G__12791__i < G__12791__a.length) {G__12791__a[G__12791__i] = arguments[G__12791__i + 2]; ++G__12791__i;}
G__12790 = new cljs.core.IndexedSeq(G__12791__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__12790);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__12792__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__12793 = ntcoll;
var G__12794 = cljs.core.first(vals);
var G__12795 = cljs.core.next(vals);
tcoll = G__12793;
val = G__12794;
vals = G__12795;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12792 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__12796__i = 0, G__12796__a = new Array(arguments.length -  2);
while (G__12796__i < G__12796__a.length) {G__12796__a[G__12796__i] = arguments[G__12796__i + 2]; ++G__12796__i;}
  vals = new cljs.core.IndexedSeq(G__12796__a,0);
} 
return G__12792__delegate.call(this,tcoll,val,vals);};
G__12792.cljs$lang$maxFixedArity = 2;
G__12792.cljs$lang$applyTo = (function (arglist__12797){
var tcoll = cljs.core.first(arglist__12797);
arglist__12797 = cljs.core.next(arglist__12797);
var val = cljs.core.first(arglist__12797);
var vals = cljs.core.rest(arglist__12797);
return G__12792__delegate(tcoll,val,vals);
});
G__12792.cljs$core$IFn$_invoke$arity$variadic = G__12792__delegate;
return G__12792;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__12798 = null;
if (arguments.length > 2) {
var G__12799__i = 0, G__12799__a = new Array(arguments.length -  2);
while (G__12799__i < G__12799__a.length) {G__12799__a[G__12799__i] = arguments[G__12799__i + 2]; ++G__12799__i;}
G__12798 = new cljs.core.IndexedSeq(G__12799__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__12798);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4695 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4695);
} else {
var G__13010 = a4695;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13010) : f.call(null,G__13010));
}
} else {
var b4696 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4695,b4696);
} else {
var G__13011 = a4695;
var G__13012 = b4696;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13011,G__13012) : f.call(null,G__13011,G__13012));
}
} else {
var c4697 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4695,b4696,c4697);
} else {
var G__13013 = a4695;
var G__13014 = b4696;
var G__13015 = c4697;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13013,G__13014,G__13015) : f.call(null,G__13013,G__13014,G__13015));
}
} else {
var d4698 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4695,b4696,c4697,d4698);
} else {
var G__13016 = a4695;
var G__13017 = b4696;
var G__13018 = c4697;
var G__13019 = d4698;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13016,G__13017,G__13018,G__13019) : f.call(null,G__13016,G__13017,G__13018,G__13019));
}
} else {
var e4699 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4695,b4696,c4697,d4698,e4699);
} else {
var G__13020 = a4695;
var G__13021 = b4696;
var G__13022 = c4697;
var G__13023 = d4698;
var G__13024 = e4699;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13020,G__13021,G__13022,G__13023,G__13024) : f.call(null,G__13020,G__13021,G__13022,G__13023,G__13024));
}
} else {
var f4700 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4695,b4696,c4697,d4698,e4699,f4700);
} else {
var G__13025 = a4695;
var G__13026 = b4696;
var G__13027 = c4697;
var G__13028 = d4698;
var G__13029 = e4699;
var G__13030 = f4700;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13025,G__13026,G__13027,G__13028,G__13029,G__13030) : f.call(null,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030));
}
} else {
var g4701 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4695,b4696,c4697,d4698,e4699,f4700,g4701);
} else {
var G__13031 = a4695;
var G__13032 = b4696;
var G__13033 = c4697;
var G__13034 = d4698;
var G__13035 = e4699;
var G__13036 = f4700;
var G__13037 = g4701;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037) : f.call(null,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037));
}
} else {
var h4702 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702);
} else {
var G__13038 = a4695;
var G__13039 = b4696;
var G__13040 = c4697;
var G__13041 = d4698;
var G__13042 = e4699;
var G__13043 = f4700;
var G__13044 = g4701;
var G__13045 = h4702;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__13038,G__13039,G__13040,G__13041,G__13042,G__13043,G__13044,G__13045) : f.call(null,G__13038,G__13039,G__13040,G__13041,G__13042,G__13043,G__13044,G__13045));
}
} else {
var i4703 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703);
} else {
var G__13046 = a4695;
var G__13047 = b4696;
var G__13048 = c4697;
var G__13049 = d4698;
var G__13050 = e4699;
var G__13051 = f4700;
var G__13052 = g4701;
var G__13053 = h4702;
var G__13054 = i4703;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__13046,G__13047,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054) : f.call(null,G__13046,G__13047,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054));
}
} else {
var j4704 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704);
} else {
var G__13055 = a4695;
var G__13056 = b4696;
var G__13057 = c4697;
var G__13058 = d4698;
var G__13059 = e4699;
var G__13060 = f4700;
var G__13061 = g4701;
var G__13062 = h4702;
var G__13063 = i4703;
var G__13064 = j4704;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__13055,G__13056,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064) : f.call(null,G__13055,G__13056,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064));
}
} else {
var k4705 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705);
} else {
var G__13065 = a4695;
var G__13066 = b4696;
var G__13067 = c4697;
var G__13068 = d4698;
var G__13069 = e4699;
var G__13070 = f4700;
var G__13071 = g4701;
var G__13072 = h4702;
var G__13073 = i4703;
var G__13074 = j4704;
var G__13075 = k4705;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__13065,G__13066,G__13067,G__13068,G__13069,G__13070,G__13071,G__13072,G__13073,G__13074,G__13075) : f.call(null,G__13065,G__13066,G__13067,G__13068,G__13069,G__13070,G__13071,G__13072,G__13073,G__13074,G__13075));
}
} else {
var l4706 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706);
} else {
var G__13076 = a4695;
var G__13077 = b4696;
var G__13078 = c4697;
var G__13079 = d4698;
var G__13080 = e4699;
var G__13081 = f4700;
var G__13082 = g4701;
var G__13083 = h4702;
var G__13084 = i4703;
var G__13085 = j4704;
var G__13086 = k4705;
var G__13087 = l4706;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__13076,G__13077,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087) : f.call(null,G__13076,G__13077,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087));
}
} else {
var m4707 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707);
} else {
var G__13088 = a4695;
var G__13089 = b4696;
var G__13090 = c4697;
var G__13091 = d4698;
var G__13092 = e4699;
var G__13093 = f4700;
var G__13094 = g4701;
var G__13095 = h4702;
var G__13096 = i4703;
var G__13097 = j4704;
var G__13098 = k4705;
var G__13099 = l4706;
var G__13100 = m4707;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__13088,G__13089,G__13090,G__13091,G__13092,G__13093,G__13094,G__13095,G__13096,G__13097,G__13098,G__13099,G__13100) : f.call(null,G__13088,G__13089,G__13090,G__13091,G__13092,G__13093,G__13094,G__13095,G__13096,G__13097,G__13098,G__13099,G__13100));
}
} else {
var n4708 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707,n4708);
} else {
var G__13101 = a4695;
var G__13102 = b4696;
var G__13103 = c4697;
var G__13104 = d4698;
var G__13105 = e4699;
var G__13106 = f4700;
var G__13107 = g4701;
var G__13108 = h4702;
var G__13109 = i4703;
var G__13110 = j4704;
var G__13111 = k4705;
var G__13112 = l4706;
var G__13113 = m4707;
var G__13114 = n4708;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__13101,G__13102,G__13103,G__13104,G__13105,G__13106,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114) : f.call(null,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114));
}
} else {
var o4709 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707,n4708,o4709);
} else {
var G__13115 = a4695;
var G__13116 = b4696;
var G__13117 = c4697;
var G__13118 = d4698;
var G__13119 = e4699;
var G__13120 = f4700;
var G__13121 = g4701;
var G__13122 = h4702;
var G__13123 = i4703;
var G__13124 = j4704;
var G__13125 = k4705;
var G__13126 = l4706;
var G__13127 = m4707;
var G__13128 = n4708;
var G__13129 = o4709;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124,G__13125,G__13126,G__13127,G__13128,G__13129) : f.call(null,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124,G__13125,G__13126,G__13127,G__13128,G__13129));
}
} else {
var p4710 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707,n4708,o4709,p4710);
} else {
var G__13130 = a4695;
var G__13131 = b4696;
var G__13132 = c4697;
var G__13133 = d4698;
var G__13134 = e4699;
var G__13135 = f4700;
var G__13136 = g4701;
var G__13137 = h4702;
var G__13138 = i4703;
var G__13139 = j4704;
var G__13140 = k4705;
var G__13141 = l4706;
var G__13142 = m4707;
var G__13143 = n4708;
var G__13144 = o4709;
var G__13145 = p4710;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144,G__13145) : f.call(null,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144,G__13145));
}
} else {
var q4711 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707,n4708,o4709,p4710,q4711);
} else {
var G__13146 = a4695;
var G__13147 = b4696;
var G__13148 = c4697;
var G__13149 = d4698;
var G__13150 = e4699;
var G__13151 = f4700;
var G__13152 = g4701;
var G__13153 = h4702;
var G__13154 = i4703;
var G__13155 = j4704;
var G__13156 = k4705;
var G__13157 = l4706;
var G__13158 = m4707;
var G__13159 = n4708;
var G__13160 = o4709;
var G__13161 = p4710;
var G__13162 = q4711;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154,G__13155,G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162) : f.call(null,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154,G__13155,G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162));
}
} else {
var r4712 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707,n4708,o4709,p4710,q4711,r4712);
} else {
var G__13163 = a4695;
var G__13164 = b4696;
var G__13165 = c4697;
var G__13166 = d4698;
var G__13167 = e4699;
var G__13168 = f4700;
var G__13169 = g4701;
var G__13170 = h4702;
var G__13171 = i4703;
var G__13172 = j4704;
var G__13173 = k4705;
var G__13174 = l4706;
var G__13175 = m4707;
var G__13176 = n4708;
var G__13177 = o4709;
var G__13178 = p4710;
var G__13179 = q4711;
var G__13180 = r4712;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__13163,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170,G__13171,G__13172,G__13173,G__13174,G__13175,G__13176,G__13177,G__13178,G__13179,G__13180) : f.call(null,G__13163,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170,G__13171,G__13172,G__13173,G__13174,G__13175,G__13176,G__13177,G__13178,G__13179,G__13180));
}
} else {
var s4713 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707,n4708,o4709,p4710,q4711,r4712,s4713);
} else {
var G__13181 = a4695;
var G__13182 = b4696;
var G__13183 = c4697;
var G__13184 = d4698;
var G__13185 = e4699;
var G__13186 = f4700;
var G__13187 = g4701;
var G__13188 = h4702;
var G__13189 = i4703;
var G__13190 = j4704;
var G__13191 = k4705;
var G__13192 = l4706;
var G__13193 = m4707;
var G__13194 = n4708;
var G__13195 = o4709;
var G__13196 = p4710;
var G__13197 = q4711;
var G__13198 = r4712;
var G__13199 = s4713;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__13181,G__13182,G__13183,G__13184,G__13185,G__13186,G__13187,G__13188,G__13189,G__13190,G__13191,G__13192,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199) : f.call(null,G__13181,G__13182,G__13183,G__13184,G__13185,G__13186,G__13187,G__13188,G__13189,G__13190,G__13191,G__13192,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199));
}
} else {
var t4714 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4695,b4696,c4697,d4698,e4699,f4700,g4701,h4702,i4703,j4704,k4705,l4706,m4707,n4708,o4709,p4710,q4711,r4712,s4713,t4714);
} else {
var G__13200 = a4695;
var G__13201 = b4696;
var G__13202 = c4697;
var G__13203 = d4698;
var G__13204 = e4699;
var G__13205 = f4700;
var G__13206 = g4701;
var G__13207 = h4702;
var G__13208 = i4703;
var G__13209 = j4704;
var G__13210 = k4705;
var G__13211 = l4706;
var G__13212 = m4707;
var G__13213 = n4708;
var G__13214 = o4709;
var G__13215 = p4710;
var G__13216 = q4711;
var G__13217 = r4712;
var G__13218 = s4713;
var G__13219 = t4714;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__13200,G__13201,G__13202,G__13203,G__13204,G__13205,G__13206,G__13207,G__13208,G__13209,G__13210,G__13211,G__13212,G__13213,G__13214,G__13215,G__13216,G__13217,G__13218,G__13219) : f.call(null,G__13200,G__13201,G__13202,G__13203,G__13204,G__13205,G__13206,G__13207,G__13208,G__13209,G__13210,G__13211,G__13212,G__13213,G__13214,G__13215,G__13216,G__13217,G__13218,G__13219));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__13220__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__13220 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__13221__i = 0, G__13221__a = new Array(arguments.length -  5);
while (G__13221__i < G__13221__a.length) {G__13221__a[G__13221__i] = arguments[G__13221__i + 5]; ++G__13221__i;}
  args = new cljs.core.IndexedSeq(G__13221__a,0);
} 
return G__13220__delegate.call(this,f,a,b,c,d,args);};
G__13220.cljs$lang$maxFixedArity = 5;
G__13220.cljs$lang$applyTo = (function (arglist__13222){
var f = cljs.core.first(arglist__13222);
arglist__13222 = cljs.core.next(arglist__13222);
var a = cljs.core.first(arglist__13222);
arglist__13222 = cljs.core.next(arglist__13222);
var b = cljs.core.first(arglist__13222);
arglist__13222 = cljs.core.next(arglist__13222);
var c = cljs.core.first(arglist__13222);
arglist__13222 = cljs.core.next(arglist__13222);
var d = cljs.core.first(arglist__13222);
var args = cljs.core.rest(arglist__13222);
return G__13220__delegate(f,a,b,c,d,args);
});
G__13220.cljs$core$IFn$_invoke$arity$variadic = G__13220__delegate;
return G__13220;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__13223 = null;
if (arguments.length > 5) {
var G__13224__i = 0, G__13224__a = new Array(arguments.length -  5);
while (G__13224__i < G__13224__a.length) {G__13224__a[G__13224__i] = arguments[G__13224__i + 5]; ++G__13224__i;}
G__13223 = new cljs.core.IndexedSeq(G__13224__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__13223);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__13240 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13240) : f.call(null,G__13240));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__13241 = cljs.core.meta(obj);
var G__13242 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13241,G__13242) : f.call(null,G__13241,G__13242));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__13243 = cljs.core.meta(obj);
var G__13244 = a;
var G__13245 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13243,G__13244,G__13245) : f.call(null,G__13243,G__13244,G__13245));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__13246 = cljs.core.meta(obj);
var G__13247 = a;
var G__13248 = b;
var G__13249 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13246,G__13247,G__13248,G__13249) : f.call(null,G__13246,G__13247,G__13248,G__13249));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__13250 = cljs.core.meta(obj);
var G__13251 = a;
var G__13252 = b;
var G__13253 = c;
var G__13254 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13250,G__13251,G__13252,G__13253,G__13254) : f.call(null,G__13250,G__13251,G__13252,G__13253,G__13254));
})());
});
var vary_meta__7 = (function() { 
var G__13255__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__13255 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__13256__i = 0, G__13256__a = new Array(arguments.length -  6);
while (G__13256__i < G__13256__a.length) {G__13256__a[G__13256__i] = arguments[G__13256__i + 6]; ++G__13256__i;}
  args = new cljs.core.IndexedSeq(G__13256__a,0);
} 
return G__13255__delegate.call(this,obj,f,a,b,c,d,args);};
G__13255.cljs$lang$maxFixedArity = 6;
G__13255.cljs$lang$applyTo = (function (arglist__13257){
var obj = cljs.core.first(arglist__13257);
arglist__13257 = cljs.core.next(arglist__13257);
var f = cljs.core.first(arglist__13257);
arglist__13257 = cljs.core.next(arglist__13257);
var a = cljs.core.first(arglist__13257);
arglist__13257 = cljs.core.next(arglist__13257);
var b = cljs.core.first(arglist__13257);
arglist__13257 = cljs.core.next(arglist__13257);
var c = cljs.core.first(arglist__13257);
arglist__13257 = cljs.core.next(arglist__13257);
var d = cljs.core.first(arglist__13257);
var args = cljs.core.rest(arglist__13257);
return G__13255__delegate(obj,f,a,b,c,d,args);
});
G__13255.cljs$core$IFn$_invoke$arity$variadic = G__13255__delegate;
return G__13255;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__13258 = null;
if (arguments.length > 6) {
var G__13259__i = 0, G__13259__a = new Array(arguments.length -  6);
while (G__13259__i < G__13259__a.length) {G__13259__a[G__13259__i] = arguments[G__13259__i + 6]; ++G__13259__i;}
G__13258 = new cljs.core.IndexedSeq(G__13259__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__13258);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__13260__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__13260 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13261__i = 0, G__13261__a = new Array(arguments.length -  2);
while (G__13261__i < G__13261__a.length) {G__13261__a[G__13261__i] = arguments[G__13261__i + 2]; ++G__13261__i;}
  more = new cljs.core.IndexedSeq(G__13261__a,0);
} 
return G__13260__delegate.call(this,x,y,more);};
G__13260.cljs$lang$maxFixedArity = 2;
G__13260.cljs$lang$applyTo = (function (arglist__13262){
var x = cljs.core.first(arglist__13262);
arglist__13262 = cljs.core.next(arglist__13262);
var y = cljs.core.first(arglist__13262);
var more = cljs.core.rest(arglist__13262);
return G__13260__delegate(x,y,more);
});
G__13260.cljs$core$IFn$_invoke$arity$variadic = G__13260__delegate;
return G__13260;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__13263 = null;
if (arguments.length > 2) {
var G__13264__i = 0, G__13264__a = new Array(arguments.length -  2);
while (G__13264__i < G__13264__a.length) {G__13264__a[G__13264__i] = arguments[G__13264__i + 2]; ++G__13264__i;}
G__13263 = new cljs.core.IndexedSeq(G__13264__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13263);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t13268 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t13268 = (function (nil_iter,meta13269){
this.nil_iter = nil_iter;
this.meta13269 = meta13269;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t13268.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t13268.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t13268.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t13268.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_13270){
var self__ = this;
var _13270__$1 = this;
return self__.meta13269;
});

cljs.core.t13268.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_13270,meta13269__$1){
var self__ = this;
var _13270__$1 = this;
return (new cljs.core.t13268(self__.nil_iter,meta13269__$1));
});

cljs.core.t13268.cljs$lang$type = true;

cljs.core.t13268.cljs$lang$ctorStr = "cljs.core/t13268";

cljs.core.t13268.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/t13268");
});

cljs.core.__GT_t13268 = (function __GT_t13268(nil_iter__$1,meta13269){
return (new cljs.core.t13268(nil_iter__$1,meta13269));
});

}

return (new cljs.core.t13268(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$8,54,cljs.core.constant$keyword$9,3067,cljs.core.constant$keyword$10,3,cljs.core.constant$keyword$11,3063,cljs.core.constant$keyword$12,"/home/bsima/.boot/cache/tmp/home/bsima/workspace/nebula/nebulabio.github.io/2hv/-ern396/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3752__auto__ = !((lt.stepper == null));
if(and__3752__auto__){
return self__.iter.hasNext();
} else {
return and__3752__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__13271 = lt;
var G__13272 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__13271,G__13272) : self__.xform.call(null,G__13271,G__13272));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__13273 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13273) : self__.xform.call(null,G__13273));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__13275 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13275) : xform.call(null,G__13275));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__13277 = cljs.core.next(iters__$1);
iters__$1 = G__13277;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4651__auto___13278 = self__.iters.length;
var i_13279 = (0);
while(true){
if((i_13279 < n__4651__auto___13278)){
(self__.nexts[i_13279] = (self__.iters[i_13279]).next());

var G__13280 = (i_13279 + (1));
i_13279 = G__13280;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3752__auto__ = !((lt.stepper == null));
if(and__3752__auto__){
return this$.hasNext();
} else {
return and__3752__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__13276 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13276) : self__.xform.call(null,G__13276));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__13285 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13285) : xform.call(null,G__13285));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__13286_13290 = cljs.core.seq(colls);
var chunk__13287_13291 = null;
var count__13288_13292 = (0);
var i__13289_13293 = (0);
while(true){
if((i__13289_13293 < count__13288_13292)){
var coll_13294 = chunk__13287_13291.cljs$core$IIndexed$_nth$arity$2(null,i__13289_13293);
iters.push(cljs.core.iter(coll_13294));

var G__13295 = seq__13286_13290;
var G__13296 = chunk__13287_13291;
var G__13297 = count__13288_13292;
var G__13298 = (i__13289_13293 + (1));
seq__13286_13290 = G__13295;
chunk__13287_13291 = G__13296;
count__13288_13292 = G__13297;
i__13289_13293 = G__13298;
continue;
} else {
var temp__4126__auto___13299 = cljs.core.seq(seq__13286_13290);
if(temp__4126__auto___13299){
var seq__13286_13300__$1 = temp__4126__auto___13299;
if(cljs.core.chunked_seq_QMARK_(seq__13286_13300__$1)){
var c__4551__auto___13301 = cljs.core.chunk_first(seq__13286_13300__$1);
var G__13302 = cljs.core.chunk_rest(seq__13286_13300__$1);
var G__13303 = c__4551__auto___13301;
var G__13304 = cljs.core.count(c__4551__auto___13301);
var G__13305 = (0);
seq__13286_13290 = G__13302;
chunk__13287_13291 = G__13303;
count__13288_13292 = G__13304;
i__13289_13293 = G__13305;
continue;
} else {
var coll_13306 = cljs.core.first(seq__13286_13300__$1);
iters.push(cljs.core.iter(coll_13306));

var G__13307 = cljs.core.next(seq__13286_13300__$1);
var G__13308 = null;
var G__13309 = (0);
var G__13310 = (0);
seq__13286_13290 = G__13307;
chunk__13287_13291 = G__13308;
count__13288_13292 = G__13309;
i__13289_13293 = G__13310;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3764__auto__ = cljs.core.seq(coll);
if(or__3764__auto__){
return or__3764__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__13311__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__13311 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__13312__i = 0, G__13312__a = new Array(arguments.length -  2);
while (G__13312__i < G__13312__a.length) {G__13312__a[G__13312__i] = arguments[G__13312__i + 2]; ++G__13312__i;}
  colls = new cljs.core.IndexedSeq(G__13312__a,0);
} 
return G__13311__delegate.call(this,xform,coll,colls);};
G__13311.cljs$lang$maxFixedArity = 2;
G__13311.cljs$lang$applyTo = (function (arglist__13313){
var xform = cljs.core.first(arglist__13313);
arglist__13313 = cljs.core.next(arglist__13313);
var coll = cljs.core.first(arglist__13313);
var colls = cljs.core.rest(arglist__13313);
return G__13311__delegate(xform,coll,colls);
});
G__13311.cljs$core$IFn$_invoke$arity$variadic = G__13311__delegate;
return G__13311;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__13314 = null;
if (arguments.length > 2) {
var G__13315__i = 0, G__13315__a = new Array(arguments.length -  2);
while (G__13315__i < G__13315__a.length) {G__13315__a[G__13315__i] = arguments[G__13315__i + 2]; ++G__13315__i;}
G__13314 = new cljs.core.IndexedSeq(G__13315__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__13314);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__13317 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13317) : pred.call(null,G__13317));
})())){
var G__13318 = pred;
var G__13319 = cljs.core.next(coll);
pred = G__13318;
coll = G__13319;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3764__auto__ = (function (){var G__13323 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13323) : pred.call(null,G__13323));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var G__13324 = pred;
var G__13325 = cljs.core.next(coll);
pred = G__13324;
coll = G__13325;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__13332 = null;
var G__13332__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__13332__1 = (function (x){
return cljs.core.not((function (){var G__13329 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13329) : f.call(null,G__13329));
})());
});
var G__13332__2 = (function (x,y){
return cljs.core.not((function (){var G__13330 = x;
var G__13331 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13330,G__13331) : f.call(null,G__13330,G__13331));
})());
});
var G__13332__3 = (function() { 
var G__13333__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__13333 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__13334__i = 0, G__13334__a = new Array(arguments.length -  2);
while (G__13334__i < G__13334__a.length) {G__13334__a[G__13334__i] = arguments[G__13334__i + 2]; ++G__13334__i;}
  zs = new cljs.core.IndexedSeq(G__13334__a,0);
} 
return G__13333__delegate.call(this,x,y,zs);};
G__13333.cljs$lang$maxFixedArity = 2;
G__13333.cljs$lang$applyTo = (function (arglist__13335){
var x = cljs.core.first(arglist__13335);
arglist__13335 = cljs.core.next(arglist__13335);
var y = cljs.core.first(arglist__13335);
var zs = cljs.core.rest(arglist__13335);
return G__13333__delegate(x,y,zs);
});
G__13333.cljs$core$IFn$_invoke$arity$variadic = G__13333__delegate;
return G__13333;
})()
;
G__13332 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__13332__0.call(this);
case 1:
return G__13332__1.call(this,x);
case 2:
return G__13332__2.call(this,x,y);
default:
var G__13336 = null;
if (arguments.length > 2) {
var G__13337__i = 0, G__13337__a = new Array(arguments.length -  2);
while (G__13337__i < G__13337__a.length) {G__13337__a[G__13337__i] = arguments[G__13337__i + 2]; ++G__13337__i;}
G__13336 = new cljs.core.IndexedSeq(G__13337__a,0);
}
return G__13332__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13336);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13332.cljs$lang$maxFixedArity = 2;
G__13332.cljs$lang$applyTo = G__13332__3.cljs$lang$applyTo;
G__13332.cljs$core$IFn$_invoke$arity$0 = G__13332__0;
G__13332.cljs$core$IFn$_invoke$arity$1 = G__13332__1;
G__13332.cljs$core$IFn$_invoke$arity$2 = G__13332__2;
G__13332.cljs$core$IFn$_invoke$arity$variadic = G__13332__3.cljs$core$IFn$_invoke$arity$variadic;
return G__13332;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__13338__delegate = function (args){
return x;
};
var G__13338 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13339__i = 0, G__13339__a = new Array(arguments.length -  0);
while (G__13339__i < G__13339__a.length) {G__13339__a[G__13339__i] = arguments[G__13339__i + 0]; ++G__13339__i;}
  args = new cljs.core.IndexedSeq(G__13339__a,0);
} 
return G__13338__delegate.call(this,args);};
G__13338.cljs$lang$maxFixedArity = 0;
G__13338.cljs$lang$applyTo = (function (arglist__13340){
var args = cljs.core.seq(arglist__13340);
return G__13338__delegate(args);
});
G__13338.cljs$core$IFn$_invoke$arity$variadic = G__13338__delegate;
return G__13338;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__13395 = null;
var G__13395__0 = (function (){
var G__13368 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13368) : f.call(null,G__13368));
});
var G__13395__1 = (function (x){
var G__13369 = (function (){var G__13370 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13370) : g.call(null,G__13370));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13369) : f.call(null,G__13369));
});
var G__13395__2 = (function (x,y){
var G__13371 = (function (){var G__13372 = x;
var G__13373 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__13372,G__13373) : g.call(null,G__13372,G__13373));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13371) : f.call(null,G__13371));
});
var G__13395__3 = (function (x,y,z){
var G__13374 = (function (){var G__13375 = x;
var G__13376 = y;
var G__13377 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__13375,G__13376,G__13377) : g.call(null,G__13375,G__13376,G__13377));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13374) : f.call(null,G__13374));
});
var G__13395__4 = (function() { 
var G__13396__delegate = function (x,y,z,args){
var G__13378 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13378) : f.call(null,G__13378));
};
var G__13396 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13397__i = 0, G__13397__a = new Array(arguments.length -  3);
while (G__13397__i < G__13397__a.length) {G__13397__a[G__13397__i] = arguments[G__13397__i + 3]; ++G__13397__i;}
  args = new cljs.core.IndexedSeq(G__13397__a,0);
} 
return G__13396__delegate.call(this,x,y,z,args);};
G__13396.cljs$lang$maxFixedArity = 3;
G__13396.cljs$lang$applyTo = (function (arglist__13398){
var x = cljs.core.first(arglist__13398);
arglist__13398 = cljs.core.next(arglist__13398);
var y = cljs.core.first(arglist__13398);
arglist__13398 = cljs.core.next(arglist__13398);
var z = cljs.core.first(arglist__13398);
var args = cljs.core.rest(arglist__13398);
return G__13396__delegate(x,y,z,args);
});
G__13396.cljs$core$IFn$_invoke$arity$variadic = G__13396__delegate;
return G__13396;
})()
;
G__13395 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13395__0.call(this);
case 1:
return G__13395__1.call(this,x);
case 2:
return G__13395__2.call(this,x,y);
case 3:
return G__13395__3.call(this,x,y,z);
default:
var G__13399 = null;
if (arguments.length > 3) {
var G__13400__i = 0, G__13400__a = new Array(arguments.length -  3);
while (G__13400__i < G__13400__a.length) {G__13400__a[G__13400__i] = arguments[G__13400__i + 3]; ++G__13400__i;}
G__13399 = new cljs.core.IndexedSeq(G__13400__a,0);
}
return G__13395__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13399);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13395.cljs$lang$maxFixedArity = 3;
G__13395.cljs$lang$applyTo = G__13395__4.cljs$lang$applyTo;
G__13395.cljs$core$IFn$_invoke$arity$0 = G__13395__0;
G__13395.cljs$core$IFn$_invoke$arity$1 = G__13395__1;
G__13395.cljs$core$IFn$_invoke$arity$2 = G__13395__2;
G__13395.cljs$core$IFn$_invoke$arity$3 = G__13395__3;
G__13395.cljs$core$IFn$_invoke$arity$variadic = G__13395__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13395;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__13401 = null;
var G__13401__0 = (function (){
var G__13379 = (function (){var G__13380 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13380) : g.call(null,G__13380));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13379) : f.call(null,G__13379));
});
var G__13401__1 = (function (x){
var G__13381 = (function (){var G__13382 = (function (){var G__13383 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__13383) : h.call(null,G__13383));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13382) : g.call(null,G__13382));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13381) : f.call(null,G__13381));
});
var G__13401__2 = (function (x,y){
var G__13384 = (function (){var G__13385 = (function (){var G__13386 = x;
var G__13387 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__13386,G__13387) : h.call(null,G__13386,G__13387));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13385) : g.call(null,G__13385));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13384) : f.call(null,G__13384));
});
var G__13401__3 = (function (x,y,z){
var G__13388 = (function (){var G__13389 = (function (){var G__13390 = x;
var G__13391 = y;
var G__13392 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__13390,G__13391,G__13392) : h.call(null,G__13390,G__13391,G__13392));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13389) : g.call(null,G__13389));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13388) : f.call(null,G__13388));
});
var G__13401__4 = (function() { 
var G__13402__delegate = function (x,y,z,args){
var G__13393 = (function (){var G__13394 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13394) : g.call(null,G__13394));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13393) : f.call(null,G__13393));
};
var G__13402 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13403__i = 0, G__13403__a = new Array(arguments.length -  3);
while (G__13403__i < G__13403__a.length) {G__13403__a[G__13403__i] = arguments[G__13403__i + 3]; ++G__13403__i;}
  args = new cljs.core.IndexedSeq(G__13403__a,0);
} 
return G__13402__delegate.call(this,x,y,z,args);};
G__13402.cljs$lang$maxFixedArity = 3;
G__13402.cljs$lang$applyTo = (function (arglist__13404){
var x = cljs.core.first(arglist__13404);
arglist__13404 = cljs.core.next(arglist__13404);
var y = cljs.core.first(arglist__13404);
arglist__13404 = cljs.core.next(arglist__13404);
var z = cljs.core.first(arglist__13404);
var args = cljs.core.rest(arglist__13404);
return G__13402__delegate(x,y,z,args);
});
G__13402.cljs$core$IFn$_invoke$arity$variadic = G__13402__delegate;
return G__13402;
})()
;
G__13401 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13401__0.call(this);
case 1:
return G__13401__1.call(this,x);
case 2:
return G__13401__2.call(this,x,y);
case 3:
return G__13401__3.call(this,x,y,z);
default:
var G__13405 = null;
if (arguments.length > 3) {
var G__13406__i = 0, G__13406__a = new Array(arguments.length -  3);
while (G__13406__i < G__13406__a.length) {G__13406__a[G__13406__i] = arguments[G__13406__i + 3]; ++G__13406__i;}
G__13405 = new cljs.core.IndexedSeq(G__13406__a,0);
}
return G__13401__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13405);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13401.cljs$lang$maxFixedArity = 3;
G__13401.cljs$lang$applyTo = G__13401__4.cljs$lang$applyTo;
G__13401.cljs$core$IFn$_invoke$arity$0 = G__13401__0;
G__13401.cljs$core$IFn$_invoke$arity$1 = G__13401__1;
G__13401.cljs$core$IFn$_invoke$arity$2 = G__13401__2;
G__13401.cljs$core$IFn$_invoke$arity$3 = G__13401__3;
G__13401.cljs$core$IFn$_invoke$arity$variadic = G__13401__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13401;
})()
});
var comp__4 = (function() { 
var G__13407__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__13408__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__13409 = cljs.core.first(fs__$2).call(null,ret);
var G__13410 = cljs.core.next(fs__$2);
ret = G__13409;
fs__$2 = G__13410;
continue;
} else {
return ret;
}
break;
}
};
var G__13408 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13411__i = 0, G__13411__a = new Array(arguments.length -  0);
while (G__13411__i < G__13411__a.length) {G__13411__a[G__13411__i] = arguments[G__13411__i + 0]; ++G__13411__i;}
  args = new cljs.core.IndexedSeq(G__13411__a,0);
} 
return G__13408__delegate.call(this,args);};
G__13408.cljs$lang$maxFixedArity = 0;
G__13408.cljs$lang$applyTo = (function (arglist__13412){
var args = cljs.core.seq(arglist__13412);
return G__13408__delegate(args);
});
G__13408.cljs$core$IFn$_invoke$arity$variadic = G__13408__delegate;
return G__13408;
})()
;
;})(fs__$1))
};
var G__13407 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__13413__i = 0, G__13413__a = new Array(arguments.length -  3);
while (G__13413__i < G__13413__a.length) {G__13413__a[G__13413__i] = arguments[G__13413__i + 3]; ++G__13413__i;}
  fs = new cljs.core.IndexedSeq(G__13413__a,0);
} 
return G__13407__delegate.call(this,f1,f2,f3,fs);};
G__13407.cljs$lang$maxFixedArity = 3;
G__13407.cljs$lang$applyTo = (function (arglist__13414){
var f1 = cljs.core.first(arglist__13414);
arglist__13414 = cljs.core.next(arglist__13414);
var f2 = cljs.core.first(arglist__13414);
arglist__13414 = cljs.core.next(arglist__13414);
var f3 = cljs.core.first(arglist__13414);
var fs = cljs.core.rest(arglist__13414);
return G__13407__delegate(f1,f2,f3,fs);
});
G__13407.cljs$core$IFn$_invoke$arity$variadic = G__13407__delegate;
return G__13407;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__13415 = null;
if (arguments.length > 3) {
var G__13416__i = 0, G__13416__a = new Array(arguments.length -  3);
while (G__13416__i < G__13416__a.length) {G__13416__a[G__13416__i] = arguments[G__13416__i + 3]; ++G__13416__i;}
G__13415 = new cljs.core.IndexedSeq(G__13416__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__13415);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__13501 = null;
var G__13501__0 = (function (){
var G__13459 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13459) : f.call(null,G__13459));
});
var G__13501__1 = (function (x){
var G__13460 = arg1;
var G__13461 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13460,G__13461) : f.call(null,G__13460,G__13461));
});
var G__13501__2 = (function (x,y){
var G__13462 = arg1;
var G__13463 = x;
var G__13464 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13462,G__13463,G__13464) : f.call(null,G__13462,G__13463,G__13464));
});
var G__13501__3 = (function (x,y,z){
var G__13465 = arg1;
var G__13466 = x;
var G__13467 = y;
var G__13468 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13465,G__13466,G__13467,G__13468) : f.call(null,G__13465,G__13466,G__13467,G__13468));
});
var G__13501__4 = (function() { 
var G__13502__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__13502 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13503__i = 0, G__13503__a = new Array(arguments.length -  3);
while (G__13503__i < G__13503__a.length) {G__13503__a[G__13503__i] = arguments[G__13503__i + 3]; ++G__13503__i;}
  args = new cljs.core.IndexedSeq(G__13503__a,0);
} 
return G__13502__delegate.call(this,x,y,z,args);};
G__13502.cljs$lang$maxFixedArity = 3;
G__13502.cljs$lang$applyTo = (function (arglist__13504){
var x = cljs.core.first(arglist__13504);
arglist__13504 = cljs.core.next(arglist__13504);
var y = cljs.core.first(arglist__13504);
arglist__13504 = cljs.core.next(arglist__13504);
var z = cljs.core.first(arglist__13504);
var args = cljs.core.rest(arglist__13504);
return G__13502__delegate(x,y,z,args);
});
G__13502.cljs$core$IFn$_invoke$arity$variadic = G__13502__delegate;
return G__13502;
})()
;
G__13501 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13501__0.call(this);
case 1:
return G__13501__1.call(this,x);
case 2:
return G__13501__2.call(this,x,y);
case 3:
return G__13501__3.call(this,x,y,z);
default:
var G__13505 = null;
if (arguments.length > 3) {
var G__13506__i = 0, G__13506__a = new Array(arguments.length -  3);
while (G__13506__i < G__13506__a.length) {G__13506__a[G__13506__i] = arguments[G__13506__i + 3]; ++G__13506__i;}
G__13505 = new cljs.core.IndexedSeq(G__13506__a,0);
}
return G__13501__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13505);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13501.cljs$lang$maxFixedArity = 3;
G__13501.cljs$lang$applyTo = G__13501__4.cljs$lang$applyTo;
G__13501.cljs$core$IFn$_invoke$arity$0 = G__13501__0;
G__13501.cljs$core$IFn$_invoke$arity$1 = G__13501__1;
G__13501.cljs$core$IFn$_invoke$arity$2 = G__13501__2;
G__13501.cljs$core$IFn$_invoke$arity$3 = G__13501__3;
G__13501.cljs$core$IFn$_invoke$arity$variadic = G__13501__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13501;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__13507 = null;
var G__13507__0 = (function (){
var G__13469 = arg1;
var G__13470 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13469,G__13470) : f.call(null,G__13469,G__13470));
});
var G__13507__1 = (function (x){
var G__13471 = arg1;
var G__13472 = arg2;
var G__13473 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13471,G__13472,G__13473) : f.call(null,G__13471,G__13472,G__13473));
});
var G__13507__2 = (function (x,y){
var G__13474 = arg1;
var G__13475 = arg2;
var G__13476 = x;
var G__13477 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13474,G__13475,G__13476,G__13477) : f.call(null,G__13474,G__13475,G__13476,G__13477));
});
var G__13507__3 = (function (x,y,z){
var G__13478 = arg1;
var G__13479 = arg2;
var G__13480 = x;
var G__13481 = y;
var G__13482 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13478,G__13479,G__13480,G__13481,G__13482) : f.call(null,G__13478,G__13479,G__13480,G__13481,G__13482));
});
var G__13507__4 = (function() { 
var G__13508__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__13508 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13509__i = 0, G__13509__a = new Array(arguments.length -  3);
while (G__13509__i < G__13509__a.length) {G__13509__a[G__13509__i] = arguments[G__13509__i + 3]; ++G__13509__i;}
  args = new cljs.core.IndexedSeq(G__13509__a,0);
} 
return G__13508__delegate.call(this,x,y,z,args);};
G__13508.cljs$lang$maxFixedArity = 3;
G__13508.cljs$lang$applyTo = (function (arglist__13510){
var x = cljs.core.first(arglist__13510);
arglist__13510 = cljs.core.next(arglist__13510);
var y = cljs.core.first(arglist__13510);
arglist__13510 = cljs.core.next(arglist__13510);
var z = cljs.core.first(arglist__13510);
var args = cljs.core.rest(arglist__13510);
return G__13508__delegate(x,y,z,args);
});
G__13508.cljs$core$IFn$_invoke$arity$variadic = G__13508__delegate;
return G__13508;
})()
;
G__13507 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13507__0.call(this);
case 1:
return G__13507__1.call(this,x);
case 2:
return G__13507__2.call(this,x,y);
case 3:
return G__13507__3.call(this,x,y,z);
default:
var G__13511 = null;
if (arguments.length > 3) {
var G__13512__i = 0, G__13512__a = new Array(arguments.length -  3);
while (G__13512__i < G__13512__a.length) {G__13512__a[G__13512__i] = arguments[G__13512__i + 3]; ++G__13512__i;}
G__13511 = new cljs.core.IndexedSeq(G__13512__a,0);
}
return G__13507__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13511);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13507.cljs$lang$maxFixedArity = 3;
G__13507.cljs$lang$applyTo = G__13507__4.cljs$lang$applyTo;
G__13507.cljs$core$IFn$_invoke$arity$0 = G__13507__0;
G__13507.cljs$core$IFn$_invoke$arity$1 = G__13507__1;
G__13507.cljs$core$IFn$_invoke$arity$2 = G__13507__2;
G__13507.cljs$core$IFn$_invoke$arity$3 = G__13507__3;
G__13507.cljs$core$IFn$_invoke$arity$variadic = G__13507__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13507;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__13513 = null;
var G__13513__0 = (function (){
var G__13483 = arg1;
var G__13484 = arg2;
var G__13485 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13483,G__13484,G__13485) : f.call(null,G__13483,G__13484,G__13485));
});
var G__13513__1 = (function (x){
var G__13486 = arg1;
var G__13487 = arg2;
var G__13488 = arg3;
var G__13489 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13486,G__13487,G__13488,G__13489) : f.call(null,G__13486,G__13487,G__13488,G__13489));
});
var G__13513__2 = (function (x,y){
var G__13490 = arg1;
var G__13491 = arg2;
var G__13492 = arg3;
var G__13493 = x;
var G__13494 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13490,G__13491,G__13492,G__13493,G__13494) : f.call(null,G__13490,G__13491,G__13492,G__13493,G__13494));
});
var G__13513__3 = (function (x,y,z){
var G__13495 = arg1;
var G__13496 = arg2;
var G__13497 = arg3;
var G__13498 = x;
var G__13499 = y;
var G__13500 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13495,G__13496,G__13497,G__13498,G__13499,G__13500) : f.call(null,G__13495,G__13496,G__13497,G__13498,G__13499,G__13500));
});
var G__13513__4 = (function() { 
var G__13514__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__13514 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13515__i = 0, G__13515__a = new Array(arguments.length -  3);
while (G__13515__i < G__13515__a.length) {G__13515__a[G__13515__i] = arguments[G__13515__i + 3]; ++G__13515__i;}
  args = new cljs.core.IndexedSeq(G__13515__a,0);
} 
return G__13514__delegate.call(this,x,y,z,args);};
G__13514.cljs$lang$maxFixedArity = 3;
G__13514.cljs$lang$applyTo = (function (arglist__13516){
var x = cljs.core.first(arglist__13516);
arglist__13516 = cljs.core.next(arglist__13516);
var y = cljs.core.first(arglist__13516);
arglist__13516 = cljs.core.next(arglist__13516);
var z = cljs.core.first(arglist__13516);
var args = cljs.core.rest(arglist__13516);
return G__13514__delegate(x,y,z,args);
});
G__13514.cljs$core$IFn$_invoke$arity$variadic = G__13514__delegate;
return G__13514;
})()
;
G__13513 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13513__0.call(this);
case 1:
return G__13513__1.call(this,x);
case 2:
return G__13513__2.call(this,x,y);
case 3:
return G__13513__3.call(this,x,y,z);
default:
var G__13517 = null;
if (arguments.length > 3) {
var G__13518__i = 0, G__13518__a = new Array(arguments.length -  3);
while (G__13518__i < G__13518__a.length) {G__13518__a[G__13518__i] = arguments[G__13518__i + 3]; ++G__13518__i;}
G__13517 = new cljs.core.IndexedSeq(G__13518__a,0);
}
return G__13513__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13517);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13513.cljs$lang$maxFixedArity = 3;
G__13513.cljs$lang$applyTo = G__13513__4.cljs$lang$applyTo;
G__13513.cljs$core$IFn$_invoke$arity$0 = G__13513__0;
G__13513.cljs$core$IFn$_invoke$arity$1 = G__13513__1;
G__13513.cljs$core$IFn$_invoke$arity$2 = G__13513__2;
G__13513.cljs$core$IFn$_invoke$arity$3 = G__13513__3;
G__13513.cljs$core$IFn$_invoke$arity$variadic = G__13513__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13513;
})()
});
var partial__5 = (function() { 
var G__13519__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__13520__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__13520 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13521__i = 0, G__13521__a = new Array(arguments.length -  0);
while (G__13521__i < G__13521__a.length) {G__13521__a[G__13521__i] = arguments[G__13521__i + 0]; ++G__13521__i;}
  args = new cljs.core.IndexedSeq(G__13521__a,0);
} 
return G__13520__delegate.call(this,args);};
G__13520.cljs$lang$maxFixedArity = 0;
G__13520.cljs$lang$applyTo = (function (arglist__13522){
var args = cljs.core.seq(arglist__13522);
return G__13520__delegate(args);
});
G__13520.cljs$core$IFn$_invoke$arity$variadic = G__13520__delegate;
return G__13520;
})()
;
};
var G__13519 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__13523__i = 0, G__13523__a = new Array(arguments.length -  4);
while (G__13523__i < G__13523__a.length) {G__13523__a[G__13523__i] = arguments[G__13523__i + 4]; ++G__13523__i;}
  more = new cljs.core.IndexedSeq(G__13523__a,0);
} 
return G__13519__delegate.call(this,f,arg1,arg2,arg3,more);};
G__13519.cljs$lang$maxFixedArity = 4;
G__13519.cljs$lang$applyTo = (function (arglist__13524){
var f = cljs.core.first(arglist__13524);
arglist__13524 = cljs.core.next(arglist__13524);
var arg1 = cljs.core.first(arglist__13524);
arglist__13524 = cljs.core.next(arglist__13524);
var arg2 = cljs.core.first(arglist__13524);
arglist__13524 = cljs.core.next(arglist__13524);
var arg3 = cljs.core.first(arglist__13524);
var more = cljs.core.rest(arglist__13524);
return G__13519__delegate(f,arg1,arg2,arg3,more);
});
G__13519.cljs$core$IFn$_invoke$arity$variadic = G__13519__delegate;
return G__13519;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__13525 = null;
if (arguments.length > 4) {
var G__13526__i = 0, G__13526__a = new Array(arguments.length -  4);
while (G__13526__i < G__13526__a.length) {G__13526__a[G__13526__i] = arguments[G__13526__i + 4]; ++G__13526__i;}
G__13525 = new cljs.core.IndexedSeq(G__13526__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__13525);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__13559 = null;
var G__13559__1 = (function (a){
var G__13543 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13543) : f.call(null,G__13543));
});
var G__13559__2 = (function (a,b){
var G__13544 = (((a == null))?x:a);
var G__13545 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13544,G__13545) : f.call(null,G__13544,G__13545));
});
var G__13559__3 = (function (a,b,c){
var G__13546 = (((a == null))?x:a);
var G__13547 = b;
var G__13548 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13546,G__13547,G__13548) : f.call(null,G__13546,G__13547,G__13548));
});
var G__13559__4 = (function() { 
var G__13560__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__13560 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13561__i = 0, G__13561__a = new Array(arguments.length -  3);
while (G__13561__i < G__13561__a.length) {G__13561__a[G__13561__i] = arguments[G__13561__i + 3]; ++G__13561__i;}
  ds = new cljs.core.IndexedSeq(G__13561__a,0);
} 
return G__13560__delegate.call(this,a,b,c,ds);};
G__13560.cljs$lang$maxFixedArity = 3;
G__13560.cljs$lang$applyTo = (function (arglist__13562){
var a = cljs.core.first(arglist__13562);
arglist__13562 = cljs.core.next(arglist__13562);
var b = cljs.core.first(arglist__13562);
arglist__13562 = cljs.core.next(arglist__13562);
var c = cljs.core.first(arglist__13562);
var ds = cljs.core.rest(arglist__13562);
return G__13560__delegate(a,b,c,ds);
});
G__13560.cljs$core$IFn$_invoke$arity$variadic = G__13560__delegate;
return G__13560;
})()
;
G__13559 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__13559__1.call(this,a);
case 2:
return G__13559__2.call(this,a,b);
case 3:
return G__13559__3.call(this,a,b,c);
default:
var G__13563 = null;
if (arguments.length > 3) {
var G__13564__i = 0, G__13564__a = new Array(arguments.length -  3);
while (G__13564__i < G__13564__a.length) {G__13564__a[G__13564__i] = arguments[G__13564__i + 3]; ++G__13564__i;}
G__13563 = new cljs.core.IndexedSeq(G__13564__a,0);
}
return G__13559__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13563);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13559.cljs$lang$maxFixedArity = 3;
G__13559.cljs$lang$applyTo = G__13559__4.cljs$lang$applyTo;
G__13559.cljs$core$IFn$_invoke$arity$1 = G__13559__1;
G__13559.cljs$core$IFn$_invoke$arity$2 = G__13559__2;
G__13559.cljs$core$IFn$_invoke$arity$3 = G__13559__3;
G__13559.cljs$core$IFn$_invoke$arity$variadic = G__13559__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13559;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__13565 = null;
var G__13565__2 = (function (a,b){
var G__13549 = (((a == null))?x:a);
var G__13550 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13549,G__13550) : f.call(null,G__13549,G__13550));
});
var G__13565__3 = (function (a,b,c){
var G__13551 = (((a == null))?x:a);
var G__13552 = (((b == null))?y:b);
var G__13553 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13551,G__13552,G__13553) : f.call(null,G__13551,G__13552,G__13553));
});
var G__13565__4 = (function() { 
var G__13566__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__13566 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13567__i = 0, G__13567__a = new Array(arguments.length -  3);
while (G__13567__i < G__13567__a.length) {G__13567__a[G__13567__i] = arguments[G__13567__i + 3]; ++G__13567__i;}
  ds = new cljs.core.IndexedSeq(G__13567__a,0);
} 
return G__13566__delegate.call(this,a,b,c,ds);};
G__13566.cljs$lang$maxFixedArity = 3;
G__13566.cljs$lang$applyTo = (function (arglist__13568){
var a = cljs.core.first(arglist__13568);
arglist__13568 = cljs.core.next(arglist__13568);
var b = cljs.core.first(arglist__13568);
arglist__13568 = cljs.core.next(arglist__13568);
var c = cljs.core.first(arglist__13568);
var ds = cljs.core.rest(arglist__13568);
return G__13566__delegate(a,b,c,ds);
});
G__13566.cljs$core$IFn$_invoke$arity$variadic = G__13566__delegate;
return G__13566;
})()
;
G__13565 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__13565__2.call(this,a,b);
case 3:
return G__13565__3.call(this,a,b,c);
default:
var G__13569 = null;
if (arguments.length > 3) {
var G__13570__i = 0, G__13570__a = new Array(arguments.length -  3);
while (G__13570__i < G__13570__a.length) {G__13570__a[G__13570__i] = arguments[G__13570__i + 3]; ++G__13570__i;}
G__13569 = new cljs.core.IndexedSeq(G__13570__a,0);
}
return G__13565__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13569);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13565.cljs$lang$maxFixedArity = 3;
G__13565.cljs$lang$applyTo = G__13565__4.cljs$lang$applyTo;
G__13565.cljs$core$IFn$_invoke$arity$2 = G__13565__2;
G__13565.cljs$core$IFn$_invoke$arity$3 = G__13565__3;
G__13565.cljs$core$IFn$_invoke$arity$variadic = G__13565__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13565;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__13571 = null;
var G__13571__2 = (function (a,b){
var G__13554 = (((a == null))?x:a);
var G__13555 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13554,G__13555) : f.call(null,G__13554,G__13555));
});
var G__13571__3 = (function (a,b,c){
var G__13556 = (((a == null))?x:a);
var G__13557 = (((b == null))?y:b);
var G__13558 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13556,G__13557,G__13558) : f.call(null,G__13556,G__13557,G__13558));
});
var G__13571__4 = (function() { 
var G__13572__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__13572 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13573__i = 0, G__13573__a = new Array(arguments.length -  3);
while (G__13573__i < G__13573__a.length) {G__13573__a[G__13573__i] = arguments[G__13573__i + 3]; ++G__13573__i;}
  ds = new cljs.core.IndexedSeq(G__13573__a,0);
} 
return G__13572__delegate.call(this,a,b,c,ds);};
G__13572.cljs$lang$maxFixedArity = 3;
G__13572.cljs$lang$applyTo = (function (arglist__13574){
var a = cljs.core.first(arglist__13574);
arglist__13574 = cljs.core.next(arglist__13574);
var b = cljs.core.first(arglist__13574);
arglist__13574 = cljs.core.next(arglist__13574);
var c = cljs.core.first(arglist__13574);
var ds = cljs.core.rest(arglist__13574);
return G__13572__delegate(a,b,c,ds);
});
G__13572.cljs$core$IFn$_invoke$arity$variadic = G__13572__delegate;
return G__13572;
})()
;
G__13571 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__13571__2.call(this,a,b);
case 3:
return G__13571__3.call(this,a,b,c);
default:
var G__13575 = null;
if (arguments.length > 3) {
var G__13576__i = 0, G__13576__a = new Array(arguments.length -  3);
while (G__13576__i < G__13576__a.length) {G__13576__a[G__13576__i] = arguments[G__13576__i + 3]; ++G__13576__i;}
G__13575 = new cljs.core.IndexedSeq(G__13576__a,0);
}
return G__13571__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13575);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13571.cljs$lang$maxFixedArity = 3;
G__13571.cljs$lang$applyTo = G__13571__4.cljs$lang$applyTo;
G__13571.cljs$core$IFn$_invoke$arity$2 = G__13571__2;
G__13571.cljs$core$IFn$_invoke$arity$3 = G__13571__3;
G__13571.cljs$core$IFn$_invoke$arity$variadic = G__13571__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13571;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__13607 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__13607) : cljs.core.volatile_BANG_.call(null,G__13607));
})();
return ((function (i){
return (function() {
var G__13637 = null;
var G__13637__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13637__1 = (function (result){
var G__13608 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13608) : rf.call(null,G__13608));
});
var G__13637__2 = (function (result,input){
var G__13609 = result;
var G__13610 = (function (){var G__13611 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__13612 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13611,G__13612) : f.call(null,G__13611,G__13612));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13609,G__13610) : rf.call(null,G__13609,G__13610));
});
G__13637 = function(result,input){
switch(arguments.length){
case 0:
return G__13637__0.call(this);
case 1:
return G__13637__1.call(this,result);
case 2:
return G__13637__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13637.cljs$core$IFn$_invoke$arity$0 = G__13637__0;
G__13637.cljs$core$IFn$_invoke$arity$1 = G__13637__1;
G__13637.cljs$core$IFn$_invoke$arity$2 = G__13637__2;
return G__13637;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4651__auto___13638 = size;
var i_13639 = (0);
while(true){
if((i_13639 < n__4651__auto___13638)){
cljs.core.chunk_append(b,(function (){var G__13633 = (idx + i_13639);
var G__13634 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13639);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13633,G__13634) : f.call(null,G__13633,G__13634));
})());

var G__13640 = (i_13639 + (1));
i_13639 = G__13640;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__13635 = idx;
var G__13636 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13635,G__13636) : f.call(null,G__13635,G__13636));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__13659 = null;
var G__13659__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13659__1 = (function (result){
var G__13653 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13653) : rf.call(null,G__13653));
});
var G__13659__2 = (function (result,input){
var v = (function (){var G__13654 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13654) : f.call(null,G__13654));
})();
if((v == null)){
return result;
} else {
var G__13655 = result;
var G__13656 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13655,G__13656) : rf.call(null,G__13655,G__13656));
}
});
G__13659 = function(result,input){
switch(arguments.length){
case 0:
return G__13659__0.call(this);
case 1:
return G__13659__1.call(this,result);
case 2:
return G__13659__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13659.cljs$core$IFn$_invoke$arity$0 = G__13659__0;
G__13659.cljs$core$IFn$_invoke$arity$1 = G__13659__1;
G__13659.cljs$core$IFn$_invoke$arity$2 = G__13659__2;
return G__13659;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4651__auto___13660 = size;
var i_13661 = (0);
while(true){
if((i_13661 < n__4651__auto___13660)){
var x_13662 = (function (){var G__13657 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13661);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13657) : f.call(null,G__13657));
})();
if((x_13662 == null)){
} else {
cljs.core.chunk_append(b,x_13662);
}

var G__13663 = (i_13661 + (1));
i_13661 = G__13663;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13658 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13658) : f.call(null,G__13658));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13664 = this$__$1;
return goog.getUid(G__13664);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__13665 = cljs.core.seq(self__.watches);
var chunk__13666 = null;
var count__13667 = (0);
var i__13668 = (0);
while(true){
if((i__13668 < count__13667)){
var vec__13669 = chunk__13666.cljs$core$IIndexed$_nth$arity$2(null,i__13668);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13669,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13669,(1),null);
var G__13670_13679 = key;
var G__13671_13680 = this$__$1;
var G__13672_13681 = oldval;
var G__13673_13682 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13670_13679,G__13671_13680,G__13672_13681,G__13673_13682) : f.call(null,G__13670_13679,G__13671_13680,G__13672_13681,G__13673_13682));

var G__13683 = seq__13665;
var G__13684 = chunk__13666;
var G__13685 = count__13667;
var G__13686 = (i__13668 + (1));
seq__13665 = G__13683;
chunk__13666 = G__13684;
count__13667 = G__13685;
i__13668 = G__13686;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13665);
if(temp__4126__auto__){
var seq__13665__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13665__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__13665__$1);
var G__13687 = cljs.core.chunk_rest(seq__13665__$1);
var G__13688 = c__4551__auto__;
var G__13689 = cljs.core.count(c__4551__auto__);
var G__13690 = (0);
seq__13665 = G__13687;
chunk__13666 = G__13688;
count__13667 = G__13689;
i__13668 = G__13690;
continue;
} else {
var vec__13674 = cljs.core.first(seq__13665__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13674,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13674,(1),null);
var G__13675_13691 = key;
var G__13676_13692 = this$__$1;
var G__13677_13693 = oldval;
var G__13678_13694 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13675_13691,G__13676_13692,G__13677_13693,G__13678_13694) : f.call(null,G__13675_13691,G__13676_13692,G__13677_13693,G__13678_13694));

var G__13695 = cljs.core.next(seq__13665__$1);
var G__13696 = null;
var G__13697 = (0);
var G__13698 = (0);
seq__13665 = G__13695;
chunk__13666 = G__13696;
count__13667 = G__13697;
i__13668 = G__13698;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__13702__delegate = function (x,p__13699){
var map__13701 = p__13699;
var map__13701__$1 = ((cljs.core.seq_QMARK_(map__13701))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__13701):map__13701);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13701__$1,cljs.core.constant$keyword$13);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13701__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__13702 = function (x,var_args){
var p__13699 = null;
if (arguments.length > 1) {
var G__13703__i = 0, G__13703__a = new Array(arguments.length -  1);
while (G__13703__i < G__13703__a.length) {G__13703__a[G__13703__i] = arguments[G__13703__i + 1]; ++G__13703__i;}
  p__13699 = new cljs.core.IndexedSeq(G__13703__a,0);
} 
return G__13702__delegate.call(this,x,p__13699);};
G__13702.cljs$lang$maxFixedArity = 1;
G__13702.cljs$lang$applyTo = (function (arglist__13704){
var x = cljs.core.first(arglist__13704);
var p__13699 = cljs.core.rest(arglist__13704);
return G__13702__delegate(x,p__13699);
});
G__13702.cljs$core$IFn$_invoke$arity$variadic = G__13702__delegate;
return G__13702;
})()
;
atom = function(x,var_args){
var p__13699 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__13705 = null;
if (arguments.length > 1) {
var G__13706__i = 0, G__13706__a = new Array(arguments.length -  1);
while (G__13706__i < G__13706__a.length) {G__13706__a[G__13706__i] = arguments[G__13706__i + 1]; ++G__13706__i;}
G__13705 = new cljs.core.IndexedSeq(G__13706__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13705);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13713 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13713) : f.call(null,G__13713));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13714 = a.state;
var G__13715 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13714,G__13715) : f.call(null,G__13714,G__13715));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13716 = a.state;
var G__13717 = x;
var G__13718 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13716,G__13717,G__13718) : f.call(null,G__13716,G__13717,G__13718));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__13719__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__13719 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__13720__i = 0, G__13720__a = new Array(arguments.length -  4);
while (G__13720__i < G__13720__a.length) {G__13720__a[G__13720__i] = arguments[G__13720__i + 4]; ++G__13720__i;}
  more = new cljs.core.IndexedSeq(G__13720__a,0);
} 
return G__13719__delegate.call(this,a,f,x,y,more);};
G__13719.cljs$lang$maxFixedArity = 4;
G__13719.cljs$lang$applyTo = (function (arglist__13721){
var a = cljs.core.first(arglist__13721);
arglist__13721 = cljs.core.next(arglist__13721);
var f = cljs.core.first(arglist__13721);
arglist__13721 = cljs.core.next(arglist__13721);
var x = cljs.core.first(arglist__13721);
arglist__13721 = cljs.core.next(arglist__13721);
var y = cljs.core.first(arglist__13721);
var more = cljs.core.rest(arglist__13721);
return G__13719__delegate(a,f,x,y,more);
});
G__13719.cljs$core$IFn$_invoke$arity$variadic = G__13719__delegate;
return G__13719;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__13722 = null;
if (arguments.length > 4) {
var G__13723__i = 0, G__13723__a = new Array(arguments.length -  4);
while (G__13723__i < G__13723__a.length) {G__13723__a[G__13723__i] = arguments[G__13723__i + 4]; ++G__13723__i;}
G__13722 = new cljs.core.IndexedSeq(G__13723__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__13722);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__13790 = null;
var G__13790__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13790__1 = (function (result){
var G__13757 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13757) : rf.call(null,G__13757));
});
var G__13790__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__13758 = i;
var G__13759 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13758,G__13759) : f.call(null,G__13758,G__13759));
})();
if((v == null)){
return result;
} else {
var G__13760 = result;
var G__13761 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13760,G__13761) : rf.call(null,G__13760,G__13761));
}
});
G__13790 = function(result,input){
switch(arguments.length){
case 0:
return G__13790__0.call(this);
case 1:
return G__13790__1.call(this,result);
case 2:
return G__13790__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13790.cljs$core$IFn$_invoke$arity$0 = G__13790__0;
G__13790.cljs$core$IFn$_invoke$arity$1 = G__13790__1;
G__13790.cljs$core$IFn$_invoke$arity$2 = G__13790__2;
return G__13790;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4651__auto___13791 = size;
var i_13792 = (0);
while(true){
if((i_13792 < n__4651__auto___13791)){
var x_13793 = (function (){var G__13786 = (idx + i_13792);
var G__13787 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13792);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13786,G__13787) : f.call(null,G__13786,G__13787));
})();
if((x_13793 == null)){
} else {
cljs.core.chunk_append(b,x_13793);
}

var G__13794 = (i_13792 + (1));
i_13792 = G__13794;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13788 = idx;
var G__13789 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13788,G__13789) : f.call(null,G__13788,G__13789));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__14008 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14008) : p.call(null,G__14008));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__14010 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14010) : p.call(null,G__14010));
})();
if(cljs.core.truth_(and__3752__auto__)){
var G__14011 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14011) : p.call(null,G__14011));
} else {
return and__3752__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__14013 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14013) : p.call(null,G__14013));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__14015 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14015) : p.call(null,G__14015));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var G__14016 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14016) : p.call(null,G__14016));
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__14185__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__14185 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14186__i = 0, G__14186__a = new Array(arguments.length -  3);
while (G__14186__i < G__14186__a.length) {G__14186__a[G__14186__i] = arguments[G__14186__i + 3]; ++G__14186__i;}
  args = new cljs.core.IndexedSeq(G__14186__a,0);
} 
return G__14185__delegate.call(this,x,y,z,args);};
G__14185.cljs$lang$maxFixedArity = 3;
G__14185.cljs$lang$applyTo = (function (arglist__14187){
var x = cljs.core.first(arglist__14187);
arglist__14187 = cljs.core.next(arglist__14187);
var y = cljs.core.first(arglist__14187);
arglist__14187 = cljs.core.next(arglist__14187);
var z = cljs.core.first(arglist__14187);
var args = cljs.core.rest(arglist__14187);
return G__14185__delegate(x,y,z,args);
});
G__14185.cljs$core$IFn$_invoke$arity$variadic = G__14185__delegate;
return G__14185;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__14188 = null;
if (arguments.length > 3) {
var G__14189__i = 0, G__14189__a = new Array(arguments.length -  3);
while (G__14189__i < G__14189__a.length) {G__14189__a[G__14189__i] = arguments[G__14189__i + 3]; ++G__14189__i;}
G__14188 = new cljs.core.IndexedSeq(G__14189__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14188);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__14048 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14048) : p1.call(null,G__14048));
})();
if(cljs.core.truth_(and__3752__auto__)){
var G__14049 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14049) : p2.call(null,G__14049));
} else {
return and__3752__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__14051 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14051) : p1.call(null,G__14051));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__14053 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14053) : p1.call(null,G__14053));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var and__3752__auto____$2 = (function (){var G__14055 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14055) : p2.call(null,G__14055));
})();
if(cljs.core.truth_(and__3752__auto____$2)){
var G__14056 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14056) : p2.call(null,G__14056));
} else {
return and__3752__auto____$2;
}
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__14058 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14058) : p1.call(null,G__14058));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__14060 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14060) : p1.call(null,G__14060));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var and__3752__auto____$2 = (function (){var G__14062 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14062) : p1.call(null,G__14062));
})();
if(cljs.core.truth_(and__3752__auto____$2)){
var and__3752__auto____$3 = (function (){var G__14064 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14064) : p2.call(null,G__14064));
})();
if(cljs.core.truth_(and__3752__auto____$3)){
var and__3752__auto____$4 = (function (){var G__14066 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14066) : p2.call(null,G__14066));
})();
if(cljs.core.truth_(and__3752__auto____$4)){
var G__14067 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14067) : p2.call(null,G__14067));
} else {
return and__3752__auto____$4;
}
} else {
return and__3752__auto____$3;
}
} else {
return and__3752__auto____$2;
}
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__14190__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__13795_SHARP_){
var and__3752__auto__ = (function (){var G__14072 = p1__13795_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14072) : p1.call(null,G__14072));
})();
if(cljs.core.truth_(and__3752__auto__)){
var G__14073 = p1__13795_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14073) : p2.call(null,G__14073));
} else {
return and__3752__auto__;
}
}),args)));
};
var G__14190 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14191__i = 0, G__14191__a = new Array(arguments.length -  3);
while (G__14191__i < G__14191__a.length) {G__14191__a[G__14191__i] = arguments[G__14191__i + 3]; ++G__14191__i;}
  args = new cljs.core.IndexedSeq(G__14191__a,0);
} 
return G__14190__delegate.call(this,x,y,z,args);};
G__14190.cljs$lang$maxFixedArity = 3;
G__14190.cljs$lang$applyTo = (function (arglist__14192){
var x = cljs.core.first(arglist__14192);
arglist__14192 = cljs.core.next(arglist__14192);
var y = cljs.core.first(arglist__14192);
arglist__14192 = cljs.core.next(arglist__14192);
var z = cljs.core.first(arglist__14192);
var args = cljs.core.rest(arglist__14192);
return G__14190__delegate(x,y,z,args);
});
G__14190.cljs$core$IFn$_invoke$arity$variadic = G__14190__delegate;
return G__14190;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__14193 = null;
if (arguments.length > 3) {
var G__14194__i = 0, G__14194__a = new Array(arguments.length -  3);
while (G__14194__i < G__14194__a.length) {G__14194__a[G__14194__i] = arguments[G__14194__i + 3]; ++G__14194__i;}
G__14193 = new cljs.core.IndexedSeq(G__14194__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14193);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__14119 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14119) : p1.call(null,G__14119));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__14121 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14121) : p2.call(null,G__14121));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var G__14122 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14122) : p3.call(null,G__14122));
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__14124 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14124) : p1.call(null,G__14124));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__14126 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14126) : p2.call(null,G__14126));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var and__3752__auto____$2 = (function (){var G__14128 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14128) : p3.call(null,G__14128));
})();
if(cljs.core.truth_(and__3752__auto____$2)){
var and__3752__auto____$3 = (function (){var G__14130 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14130) : p1.call(null,G__14130));
})();
if(cljs.core.truth_(and__3752__auto____$3)){
var and__3752__auto____$4 = (function (){var G__14132 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14132) : p2.call(null,G__14132));
})();
if(cljs.core.truth_(and__3752__auto____$4)){
var G__14133 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14133) : p3.call(null,G__14133));
} else {
return and__3752__auto____$4;
}
} else {
return and__3752__auto____$3;
}
} else {
return and__3752__auto____$2;
}
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3752__auto__ = (function (){var G__14135 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14135) : p1.call(null,G__14135));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__14137 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14137) : p2.call(null,G__14137));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var and__3752__auto____$2 = (function (){var G__14139 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14139) : p3.call(null,G__14139));
})();
if(cljs.core.truth_(and__3752__auto____$2)){
var and__3752__auto____$3 = (function (){var G__14141 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14141) : p1.call(null,G__14141));
})();
if(cljs.core.truth_(and__3752__auto____$3)){
var and__3752__auto____$4 = (function (){var G__14143 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14143) : p2.call(null,G__14143));
})();
if(cljs.core.truth_(and__3752__auto____$4)){
var and__3752__auto____$5 = (function (){var G__14145 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14145) : p3.call(null,G__14145));
})();
if(cljs.core.truth_(and__3752__auto____$5)){
var and__3752__auto____$6 = (function (){var G__14147 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14147) : p1.call(null,G__14147));
})();
if(cljs.core.truth_(and__3752__auto____$6)){
var and__3752__auto____$7 = (function (){var G__14149 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14149) : p2.call(null,G__14149));
})();
if(cljs.core.truth_(and__3752__auto____$7)){
var G__14150 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14150) : p3.call(null,G__14150));
} else {
return and__3752__auto____$7;
}
} else {
return and__3752__auto____$6;
}
} else {
return and__3752__auto____$5;
}
} else {
return and__3752__auto____$4;
}
} else {
return and__3752__auto____$3;
}
} else {
return and__3752__auto____$2;
}
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__14195__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__13796_SHARP_){
var and__3752__auto__ = (function (){var G__14157 = p1__13796_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14157) : p1.call(null,G__14157));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__14159 = p1__13796_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14159) : p2.call(null,G__14159));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var G__14160 = p1__13796_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14160) : p3.call(null,G__14160));
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
}),args)));
};
var G__14195 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14196__i = 0, G__14196__a = new Array(arguments.length -  3);
while (G__14196__i < G__14196__a.length) {G__14196__a[G__14196__i] = arguments[G__14196__i + 3]; ++G__14196__i;}
  args = new cljs.core.IndexedSeq(G__14196__a,0);
} 
return G__14195__delegate.call(this,x,y,z,args);};
G__14195.cljs$lang$maxFixedArity = 3;
G__14195.cljs$lang$applyTo = (function (arglist__14197){
var x = cljs.core.first(arglist__14197);
arglist__14197 = cljs.core.next(arglist__14197);
var y = cljs.core.first(arglist__14197);
arglist__14197 = cljs.core.next(arglist__14197);
var z = cljs.core.first(arglist__14197);
var args = cljs.core.rest(arglist__14197);
return G__14195__delegate(x,y,z,args);
});
G__14195.cljs$core$IFn$_invoke$arity$variadic = G__14195__delegate;
return G__14195;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__14198 = null;
if (arguments.length > 3) {
var G__14199__i = 0, G__14199__a = new Array(arguments.length -  3);
while (G__14199__i < G__14199__a.length) {G__14199__a[G__14199__i] = arguments[G__14199__i + 3]; ++G__14199__i;}
G__14198 = new cljs.core.IndexedSeq(G__14199__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14198);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__14200__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13797_SHARP_){
var G__14176 = x;
return (p1__13797_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13797_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14176) : p1__13797_SHARP_.call(null,G__14176));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13798_SHARP_){
var and__3752__auto__ = (function (){var G__14178 = x;
return (p1__13798_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13798_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14178) : p1__13798_SHARP_.call(null,G__14178));
})();
if(cljs.core.truth_(and__3752__auto__)){
var G__14179 = y;
return (p1__13798_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13798_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14179) : p1__13798_SHARP_.call(null,G__14179));
} else {
return and__3752__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13799_SHARP_){
var and__3752__auto__ = (function (){var G__14181 = x;
return (p1__13799_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13799_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14181) : p1__13799_SHARP_.call(null,G__14181));
})();
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__14183 = y;
return (p1__13799_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13799_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14183) : p1__13799_SHARP_.call(null,G__14183));
})();
if(cljs.core.truth_(and__3752__auto____$1)){
var G__14184 = z;
return (p1__13799_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13799_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14184) : p1__13799_SHARP_.call(null,G__14184));
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__14201__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13800_SHARP_){
return cljs.core.every_QMARK_(p1__13800_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__14201 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14202__i = 0, G__14202__a = new Array(arguments.length -  3);
while (G__14202__i < G__14202__a.length) {G__14202__a[G__14202__i] = arguments[G__14202__i + 3]; ++G__14202__i;}
  args = new cljs.core.IndexedSeq(G__14202__a,0);
} 
return G__14201__delegate.call(this,x,y,z,args);};
G__14201.cljs$lang$maxFixedArity = 3;
G__14201.cljs$lang$applyTo = (function (arglist__14203){
var x = cljs.core.first(arglist__14203);
arglist__14203 = cljs.core.next(arglist__14203);
var y = cljs.core.first(arglist__14203);
arglist__14203 = cljs.core.next(arglist__14203);
var z = cljs.core.first(arglist__14203);
var args = cljs.core.rest(arglist__14203);
return G__14201__delegate(x,y,z,args);
});
G__14201.cljs$core$IFn$_invoke$arity$variadic = G__14201__delegate;
return G__14201;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__14204 = null;
if (arguments.length > 3) {
var G__14205__i = 0, G__14205__a = new Array(arguments.length -  3);
while (G__14205__i < G__14205__a.length) {G__14205__a[G__14205__i] = arguments[G__14205__i + 3]; ++G__14205__i;}
G__14204 = new cljs.core.IndexedSeq(G__14205__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14204);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__14200 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14206__i = 0, G__14206__a = new Array(arguments.length -  3);
while (G__14206__i < G__14206__a.length) {G__14206__a[G__14206__i] = arguments[G__14206__i + 3]; ++G__14206__i;}
  ps = new cljs.core.IndexedSeq(G__14206__a,0);
} 
return G__14200__delegate.call(this,p1,p2,p3,ps);};
G__14200.cljs$lang$maxFixedArity = 3;
G__14200.cljs$lang$applyTo = (function (arglist__14207){
var p1 = cljs.core.first(arglist__14207);
arglist__14207 = cljs.core.next(arglist__14207);
var p2 = cljs.core.first(arglist__14207);
arglist__14207 = cljs.core.next(arglist__14207);
var p3 = cljs.core.first(arglist__14207);
var ps = cljs.core.rest(arglist__14207);
return G__14200__delegate(p1,p2,p3,ps);
});
G__14200.cljs$core$IFn$_invoke$arity$variadic = G__14200__delegate;
return G__14200;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__14208 = null;
if (arguments.length > 3) {
var G__14209__i = 0, G__14209__a = new Array(arguments.length -  3);
while (G__14209__i < G__14209__a.length) {G__14209__a[G__14209__i] = arguments[G__14209__i + 3]; ++G__14209__i;}
G__14208 = new cljs.core.IndexedSeq(G__14209__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14208);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__14415 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14415) : p.call(null,G__14415));
});
var sp1__2 = (function (x,y){
var or__3764__auto__ = (function (){var G__14417 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14417) : p.call(null,G__14417));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var G__14418 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14418) : p.call(null,G__14418));
}
});
var sp1__3 = (function (x,y,z){
var or__3764__auto__ = (function (){var G__14420 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14420) : p.call(null,G__14420));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var G__14422 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14422) : p.call(null,G__14422));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var G__14423 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14423) : p.call(null,G__14423));
}
}
});
var sp1__4 = (function() { 
var G__14584__delegate = function (x,y,z,args){
var or__3764__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__14584 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14585__i = 0, G__14585__a = new Array(arguments.length -  3);
while (G__14585__i < G__14585__a.length) {G__14585__a[G__14585__i] = arguments[G__14585__i + 3]; ++G__14585__i;}
  args = new cljs.core.IndexedSeq(G__14585__a,0);
} 
return G__14584__delegate.call(this,x,y,z,args);};
G__14584.cljs$lang$maxFixedArity = 3;
G__14584.cljs$lang$applyTo = (function (arglist__14586){
var x = cljs.core.first(arglist__14586);
arglist__14586 = cljs.core.next(arglist__14586);
var y = cljs.core.first(arglist__14586);
arglist__14586 = cljs.core.next(arglist__14586);
var z = cljs.core.first(arglist__14586);
var args = cljs.core.rest(arglist__14586);
return G__14584__delegate(x,y,z,args);
});
G__14584.cljs$core$IFn$_invoke$arity$variadic = G__14584__delegate;
return G__14584;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__14587 = null;
if (arguments.length > 3) {
var G__14588__i = 0, G__14588__a = new Array(arguments.length -  3);
while (G__14588__i < G__14588__a.length) {G__14588__a[G__14588__i] = arguments[G__14588__i + 3]; ++G__14588__i;}
G__14587 = new cljs.core.IndexedSeq(G__14588__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14587);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3764__auto__ = (function (){var G__14455 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14455) : p1.call(null,G__14455));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var G__14456 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14456) : p2.call(null,G__14456));
}
});
var sp2__2 = (function (x,y){
var or__3764__auto__ = (function (){var G__14458 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14458) : p1.call(null,G__14458));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var G__14460 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14460) : p1.call(null,G__14460));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var or__3764__auto____$2 = (function (){var G__14462 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14462) : p2.call(null,G__14462));
})();
if(cljs.core.truth_(or__3764__auto____$2)){
return or__3764__auto____$2;
} else {
var G__14463 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14463) : p2.call(null,G__14463));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3764__auto__ = (function (){var G__14465 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14465) : p1.call(null,G__14465));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var G__14467 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14467) : p1.call(null,G__14467));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var or__3764__auto____$2 = (function (){var G__14469 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14469) : p1.call(null,G__14469));
})();
if(cljs.core.truth_(or__3764__auto____$2)){
return or__3764__auto____$2;
} else {
var or__3764__auto____$3 = (function (){var G__14471 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14471) : p2.call(null,G__14471));
})();
if(cljs.core.truth_(or__3764__auto____$3)){
return or__3764__auto____$3;
} else {
var or__3764__auto____$4 = (function (){var G__14473 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14473) : p2.call(null,G__14473));
})();
if(cljs.core.truth_(or__3764__auto____$4)){
return or__3764__auto____$4;
} else {
var G__14474 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14474) : p2.call(null,G__14474));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__14589__delegate = function (x,y,z,args){
var or__3764__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.some(((function (or__3764__auto__){
return (function (p1__14210_SHARP_){
var or__3764__auto____$1 = (function (){var G__14476 = p1__14210_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14476) : p1.call(null,G__14476));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var G__14477 = p1__14210_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14477) : p2.call(null,G__14477));
}
});})(or__3764__auto__))
,args);
}
};
var G__14589 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14590__i = 0, G__14590__a = new Array(arguments.length -  3);
while (G__14590__i < G__14590__a.length) {G__14590__a[G__14590__i] = arguments[G__14590__i + 3]; ++G__14590__i;}
  args = new cljs.core.IndexedSeq(G__14590__a,0);
} 
return G__14589__delegate.call(this,x,y,z,args);};
G__14589.cljs$lang$maxFixedArity = 3;
G__14589.cljs$lang$applyTo = (function (arglist__14591){
var x = cljs.core.first(arglist__14591);
arglist__14591 = cljs.core.next(arglist__14591);
var y = cljs.core.first(arglist__14591);
arglist__14591 = cljs.core.next(arglist__14591);
var z = cljs.core.first(arglist__14591);
var args = cljs.core.rest(arglist__14591);
return G__14589__delegate(x,y,z,args);
});
G__14589.cljs$core$IFn$_invoke$arity$variadic = G__14589__delegate;
return G__14589;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__14592 = null;
if (arguments.length > 3) {
var G__14593__i = 0, G__14593__a = new Array(arguments.length -  3);
while (G__14593__i < G__14593__a.length) {G__14593__a[G__14593__i] = arguments[G__14593__i + 3]; ++G__14593__i;}
G__14592 = new cljs.core.IndexedSeq(G__14593__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14592);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3764__auto__ = (function (){var G__14523 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14523) : p1.call(null,G__14523));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var G__14525 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14525) : p2.call(null,G__14525));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var G__14526 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14526) : p3.call(null,G__14526));
}
}
});
var sp3__2 = (function (x,y){
var or__3764__auto__ = (function (){var G__14528 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14528) : p1.call(null,G__14528));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var G__14530 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14530) : p2.call(null,G__14530));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var or__3764__auto____$2 = (function (){var G__14532 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14532) : p3.call(null,G__14532));
})();
if(cljs.core.truth_(or__3764__auto____$2)){
return or__3764__auto____$2;
} else {
var or__3764__auto____$3 = (function (){var G__14534 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14534) : p1.call(null,G__14534));
})();
if(cljs.core.truth_(or__3764__auto____$3)){
return or__3764__auto____$3;
} else {
var or__3764__auto____$4 = (function (){var G__14536 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14536) : p2.call(null,G__14536));
})();
if(cljs.core.truth_(or__3764__auto____$4)){
return or__3764__auto____$4;
} else {
var G__14537 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14537) : p3.call(null,G__14537));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3764__auto__ = (function (){var G__14539 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14539) : p1.call(null,G__14539));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var G__14541 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14541) : p2.call(null,G__14541));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var or__3764__auto____$2 = (function (){var G__14543 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14543) : p3.call(null,G__14543));
})();
if(cljs.core.truth_(or__3764__auto____$2)){
return or__3764__auto____$2;
} else {
var or__3764__auto____$3 = (function (){var G__14545 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14545) : p1.call(null,G__14545));
})();
if(cljs.core.truth_(or__3764__auto____$3)){
return or__3764__auto____$3;
} else {
var or__3764__auto____$4 = (function (){var G__14547 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14547) : p2.call(null,G__14547));
})();
if(cljs.core.truth_(or__3764__auto____$4)){
return or__3764__auto____$4;
} else {
var or__3764__auto____$5 = (function (){var G__14549 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14549) : p3.call(null,G__14549));
})();
if(cljs.core.truth_(or__3764__auto____$5)){
return or__3764__auto____$5;
} else {
var or__3764__auto____$6 = (function (){var G__14551 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14551) : p1.call(null,G__14551));
})();
if(cljs.core.truth_(or__3764__auto____$6)){
return or__3764__auto____$6;
} else {
var or__3764__auto____$7 = (function (){var G__14553 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14553) : p2.call(null,G__14553));
})();
if(cljs.core.truth_(or__3764__auto____$7)){
return or__3764__auto____$7;
} else {
var G__14554 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14554) : p3.call(null,G__14554));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__14594__delegate = function (x,y,z,args){
var or__3764__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.some(((function (or__3764__auto__){
return (function (p1__14211_SHARP_){
var or__3764__auto____$1 = (function (){var G__14556 = p1__14211_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14556) : p1.call(null,G__14556));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var or__3764__auto____$2 = (function (){var G__14558 = p1__14211_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14558) : p2.call(null,G__14558));
})();
if(cljs.core.truth_(or__3764__auto____$2)){
return or__3764__auto____$2;
} else {
var G__14559 = p1__14211_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14559) : p3.call(null,G__14559));
}
}
});})(or__3764__auto__))
,args);
}
};
var G__14594 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14595__i = 0, G__14595__a = new Array(arguments.length -  3);
while (G__14595__i < G__14595__a.length) {G__14595__a[G__14595__i] = arguments[G__14595__i + 3]; ++G__14595__i;}
  args = new cljs.core.IndexedSeq(G__14595__a,0);
} 
return G__14594__delegate.call(this,x,y,z,args);};
G__14594.cljs$lang$maxFixedArity = 3;
G__14594.cljs$lang$applyTo = (function (arglist__14596){
var x = cljs.core.first(arglist__14596);
arglist__14596 = cljs.core.next(arglist__14596);
var y = cljs.core.first(arglist__14596);
arglist__14596 = cljs.core.next(arglist__14596);
var z = cljs.core.first(arglist__14596);
var args = cljs.core.rest(arglist__14596);
return G__14594__delegate(x,y,z,args);
});
G__14594.cljs$core$IFn$_invoke$arity$variadic = G__14594__delegate;
return G__14594;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__14597 = null;
if (arguments.length > 3) {
var G__14598__i = 0, G__14598__a = new Array(arguments.length -  3);
while (G__14598__i < G__14598__a.length) {G__14598__a[G__14598__i] = arguments[G__14598__i + 3]; ++G__14598__i;}
G__14597 = new cljs.core.IndexedSeq(G__14598__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14597);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__14599__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__14212_SHARP_){
var G__14575 = x;
return (p1__14212_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14212_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14575) : p1__14212_SHARP_.call(null,G__14575));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__14213_SHARP_){
var or__3764__auto__ = (function (){var G__14577 = x;
return (p1__14213_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14213_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14577) : p1__14213_SHARP_.call(null,G__14577));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var G__14578 = y;
return (p1__14213_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14213_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14578) : p1__14213_SHARP_.call(null,G__14578));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__14214_SHARP_){
var or__3764__auto__ = (function (){var G__14580 = x;
return (p1__14214_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14214_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14580) : p1__14214_SHARP_.call(null,G__14580));
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var G__14582 = y;
return (p1__14214_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14214_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14582) : p1__14214_SHARP_.call(null,G__14582));
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var G__14583 = z;
return (p1__14214_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14214_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14583) : p1__14214_SHARP_.call(null,G__14583));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__14600__delegate = function (x,y,z,args){
var or__3764__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.some(((function (or__3764__auto__,ps__$1){
return (function (p1__14215_SHARP_){
return cljs.core.some(p1__14215_SHARP_,args);
});})(or__3764__auto__,ps__$1))
,ps__$1);
}
};
var G__14600 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14601__i = 0, G__14601__a = new Array(arguments.length -  3);
while (G__14601__i < G__14601__a.length) {G__14601__a[G__14601__i] = arguments[G__14601__i + 3]; ++G__14601__i;}
  args = new cljs.core.IndexedSeq(G__14601__a,0);
} 
return G__14600__delegate.call(this,x,y,z,args);};
G__14600.cljs$lang$maxFixedArity = 3;
G__14600.cljs$lang$applyTo = (function (arglist__14602){
var x = cljs.core.first(arglist__14602);
arglist__14602 = cljs.core.next(arglist__14602);
var y = cljs.core.first(arglist__14602);
arglist__14602 = cljs.core.next(arglist__14602);
var z = cljs.core.first(arglist__14602);
var args = cljs.core.rest(arglist__14602);
return G__14600__delegate(x,y,z,args);
});
G__14600.cljs$core$IFn$_invoke$arity$variadic = G__14600__delegate;
return G__14600;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__14603 = null;
if (arguments.length > 3) {
var G__14604__i = 0, G__14604__a = new Array(arguments.length -  3);
while (G__14604__i < G__14604__a.length) {G__14604__a[G__14604__i] = arguments[G__14604__i + 3]; ++G__14604__i;}
G__14603 = new cljs.core.IndexedSeq(G__14604__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14603);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__14599 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14605__i = 0, G__14605__a = new Array(arguments.length -  3);
while (G__14605__i < G__14605__a.length) {G__14605__a[G__14605__i] = arguments[G__14605__i + 3]; ++G__14605__i;}
  ps = new cljs.core.IndexedSeq(G__14605__a,0);
} 
return G__14599__delegate.call(this,p1,p2,p3,ps);};
G__14599.cljs$lang$maxFixedArity = 3;
G__14599.cljs$lang$applyTo = (function (arglist__14606){
var p1 = cljs.core.first(arglist__14606);
arglist__14606 = cljs.core.next(arglist__14606);
var p2 = cljs.core.first(arglist__14606);
arglist__14606 = cljs.core.next(arglist__14606);
var p3 = cljs.core.first(arglist__14606);
var ps = cljs.core.rest(arglist__14606);
return G__14599__delegate(p1,p2,p3,ps);
});
G__14599.cljs$core$IFn$_invoke$arity$variadic = G__14599__delegate;
return G__14599;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__14607 = null;
if (arguments.length > 3) {
var G__14608__i = 0, G__14608__a = new Array(arguments.length -  3);
while (G__14608__i < G__14608__a.length) {G__14608__a[G__14608__i] = arguments[G__14608__i + 3]; ++G__14608__i;}
G__14607 = new cljs.core.IndexedSeq(G__14608__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14607);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__14663 = null;
var G__14663__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14663__1 = (function (result){
var G__14649 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14649) : rf.call(null,G__14649));
});
var G__14663__2 = (function (result,input){
var G__14650 = result;
var G__14651 = (function (){var G__14652 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14652) : f.call(null,G__14652));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14650,G__14651) : rf.call(null,G__14650,G__14651));
});
var G__14663__3 = (function() { 
var G__14664__delegate = function (result,input,inputs){
var G__14653 = result;
var G__14654 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14653,G__14654) : rf.call(null,G__14653,G__14654));
};
var G__14664 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__14665__i = 0, G__14665__a = new Array(arguments.length -  2);
while (G__14665__i < G__14665__a.length) {G__14665__a[G__14665__i] = arguments[G__14665__i + 2]; ++G__14665__i;}
  inputs = new cljs.core.IndexedSeq(G__14665__a,0);
} 
return G__14664__delegate.call(this,result,input,inputs);};
G__14664.cljs$lang$maxFixedArity = 2;
G__14664.cljs$lang$applyTo = (function (arglist__14666){
var result = cljs.core.first(arglist__14666);
arglist__14666 = cljs.core.next(arglist__14666);
var input = cljs.core.first(arglist__14666);
var inputs = cljs.core.rest(arglist__14666);
return G__14664__delegate(result,input,inputs);
});
G__14664.cljs$core$IFn$_invoke$arity$variadic = G__14664__delegate;
return G__14664;
})()
;
G__14663 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__14663__0.call(this);
case 1:
return G__14663__1.call(this,result);
case 2:
return G__14663__2.call(this,result,input);
default:
var G__14667 = null;
if (arguments.length > 2) {
var G__14668__i = 0, G__14668__a = new Array(arguments.length -  2);
while (G__14668__i < G__14668__a.length) {G__14668__a[G__14668__i] = arguments[G__14668__i + 2]; ++G__14668__i;}
G__14667 = new cljs.core.IndexedSeq(G__14668__a,0);
}
return G__14663__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__14667);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14663.cljs$lang$maxFixedArity = 2;
G__14663.cljs$lang$applyTo = G__14663__3.cljs$lang$applyTo;
G__14663.cljs$core$IFn$_invoke$arity$0 = G__14663__0;
G__14663.cljs$core$IFn$_invoke$arity$1 = G__14663__1;
G__14663.cljs$core$IFn$_invoke$arity$2 = G__14663__2;
G__14663.cljs$core$IFn$_invoke$arity$variadic = G__14663__3.cljs$core$IFn$_invoke$arity$variadic;
return G__14663;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4651__auto___14669 = size;
var i_14670 = (0);
while(true){
if((i_14670 < n__4651__auto___14669)){
cljs.core.chunk_append(b,(function (){var G__14655 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14670);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14655) : f.call(null,G__14655));
})());

var G__14671 = (i_14670 + (1));
i_14670 = G__14671;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__14656 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14656) : f.call(null,G__14656));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__14657 = cljs.core.first(s1);
var G__14658 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14657,G__14658) : f.call(null,G__14657,G__14658));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__14659 = cljs.core.first(s1);
var G__14660 = cljs.core.first(s2);
var G__14661 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14659,G__14660,G__14661) : f.call(null,G__14659,G__14660,G__14661));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__14672__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__14609_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__14609_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__14672 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14673__i = 0, G__14673__a = new Array(arguments.length -  4);
while (G__14673__i < G__14673__a.length) {G__14673__a[G__14673__i] = arguments[G__14673__i + 4]; ++G__14673__i;}
  colls = new cljs.core.IndexedSeq(G__14673__a,0);
} 
return G__14672__delegate.call(this,f,c1,c2,c3,colls);};
G__14672.cljs$lang$maxFixedArity = 4;
G__14672.cljs$lang$applyTo = (function (arglist__14674){
var f = cljs.core.first(arglist__14674);
arglist__14674 = cljs.core.next(arglist__14674);
var c1 = cljs.core.first(arglist__14674);
arglist__14674 = cljs.core.next(arglist__14674);
var c2 = cljs.core.first(arglist__14674);
arglist__14674 = cljs.core.next(arglist__14674);
var c3 = cljs.core.first(arglist__14674);
var colls = cljs.core.rest(arglist__14674);
return G__14672__delegate(f,c1,c2,c3,colls);
});
G__14672.cljs$core$IFn$_invoke$arity$variadic = G__14672__delegate;
return G__14672;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__14675 = null;
if (arguments.length > 4) {
var G__14676__i = 0, G__14676__a = new Array(arguments.length -  4);
while (G__14676__i < G__14676__a.length) {G__14676__a[G__14676__i] = arguments[G__14676__i + 4]; ++G__14676__i;}
G__14675 = new cljs.core.IndexedSeq(G__14676__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14675);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14685 = null;
var G__14685__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14685__1 = (function (result){
var G__14682 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14682) : rf.call(null,G__14682));
});
var G__14685__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__14683 = result;
var G__14684 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14683,G__14684) : rf.call(null,G__14683,G__14684));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__14685 = function(result,input){
switch(arguments.length){
case 0:
return G__14685__0.call(this);
case 1:
return G__14685__1.call(this,result);
case 2:
return G__14685__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14685.cljs$core$IFn$_invoke$arity$0 = G__14685__0;
G__14685.cljs$core$IFn$_invoke$arity$1 = G__14685__1;
G__14685.cljs$core$IFn$_invoke$arity$2 = G__14685__2;
return G__14685;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14692 = null;
var G__14692__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14692__1 = (function (result){
var G__14689 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14689) : rf.call(null,G__14689));
});
var G__14692__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__14690 = result;
var G__14691 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14690,G__14691) : rf.call(null,G__14690,G__14691));
}
});
G__14692 = function(result,input){
switch(arguments.length){
case 0:
return G__14692__0.call(this);
case 1:
return G__14692__1.call(this,result);
case 2:
return G__14692__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14692.cljs$core$IFn$_invoke$arity$0 = G__14692__0;
G__14692.cljs$core$IFn$_invoke$arity$1 = G__14692__1;
G__14692.cljs$core$IFn$_invoke$arity$2 = G__14692__2;
return G__14692;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__14693 = (n__$1 - (1));
var G__14694 = cljs.core.rest(s);
n__$1 = G__14693;
coll__$1 = G__14694;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__14697 = cljs.core.next(s);
var G__14698 = cljs.core.next(lead);
s = G__14697;
lead = G__14698;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__14711 = null;
var G__14711__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14711__1 = (function (result){
var G__14705 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14705) : rf.call(null,G__14705));
});
var G__14711__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3752__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3752__auto__)){
var G__14706 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14706) : pred.call(null,G__14706));
} else {
return and__3752__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__14707 = result;
var G__14708 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14707,G__14708) : rf.call(null,G__14707,G__14708));
}
});
G__14711 = function(result,input){
switch(arguments.length){
case 0:
return G__14711__0.call(this);
case 1:
return G__14711__1.call(this,result);
case 2:
return G__14711__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14711.cljs$core$IFn$_invoke$arity$0 = G__14711__0;
G__14711.cljs$core$IFn$_invoke$arity$1 = G__14711__1;
G__14711.cljs$core$IFn$_invoke$arity$2 = G__14711__2;
return G__14711;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3752__auto__ = s;
if(and__3752__auto__){
var G__14710 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__14710) : pred__$1.call(null,G__14710));
} else {
return and__3752__auto__;
}
})())){
var G__14712 = pred__$1;
var G__14713 = cljs.core.rest(s);
pred__$1 = G__14712;
coll__$1 = G__14713;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__14722 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14722) : f.call(null,G__14722));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__14725__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__14725 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__14726__i = 0, G__14726__a = new Array(arguments.length -  2);
while (G__14726__i < G__14726__a.length) {G__14726__a[G__14726__i] = arguments[G__14726__i + 2]; ++G__14726__i;}
  colls = new cljs.core.IndexedSeq(G__14726__a,0);
} 
return G__14725__delegate.call(this,c1,c2,colls);};
G__14725.cljs$lang$maxFixedArity = 2;
G__14725.cljs$lang$applyTo = (function (arglist__14727){
var c1 = cljs.core.first(arglist__14727);
arglist__14727 = cljs.core.next(arglist__14727);
var c2 = cljs.core.first(arglist__14727);
var colls = cljs.core.rest(arglist__14727);
return G__14725__delegate(c1,c2,colls);
});
G__14725.cljs$core$IFn$_invoke$arity$variadic = G__14725__delegate;
return G__14725;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__14728 = null;
if (arguments.length > 2) {
var G__14729__i = 0, G__14729__a = new Array(arguments.length -  2);
while (G__14729__i < G__14729__a.length) {G__14729__a[G__14729__i] = arguments[G__14729__i + 2]; ++G__14729__i;}
G__14728 = new cljs.core.IndexedSeq(G__14729__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__14728);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__14744 = null;
var G__14744__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14744__1 = (function (result){
var G__14737 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14737) : rf.call(null,G__14737));
});
var G__14744__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__14738 = result;
var G__14739 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14738,G__14739) : rf.call(null,G__14738,G__14739));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__14740 = sepr;
var G__14741 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14740,G__14741) : rf.call(null,G__14740,G__14741));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__14742 = result;
var G__14743 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14742,G__14743) : rf.call(null,G__14742,G__14743));
}
});
G__14744 = function(result,input){
switch(arguments.length){
case 0:
return G__14744__0.call(this);
case 1:
return G__14744__1.call(this,result);
case 2:
return G__14744__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14744.cljs$core$IFn$_invoke$arity$0 = G__14744__0;
G__14744.cljs$core$IFn$_invoke$arity$1 = G__14744__1;
G__14744.cljs$core$IFn$_invoke$arity$2 = G__14744__2;
return G__14744;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__14753__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__14753 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__14754__i = 0, G__14754__a = new Array(arguments.length -  1);
while (G__14754__i < G__14754__a.length) {G__14754__a[G__14754__i] = arguments[G__14754__i + 1]; ++G__14754__i;}
  colls = new cljs.core.IndexedSeq(G__14754__a,0);
} 
return G__14753__delegate.call(this,f,colls);};
G__14753.cljs$lang$maxFixedArity = 1;
G__14753.cljs$lang$applyTo = (function (arglist__14755){
var f = cljs.core.first(arglist__14755);
var colls = cljs.core.rest(arglist__14755);
return G__14753__delegate(f,colls);
});
G__14753.cljs$core$IFn$_invoke$arity$variadic = G__14753__delegate;
return G__14753;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__14756 = null;
if (arguments.length > 1) {
var G__14757__i = 0, G__14757__a = new Array(arguments.length -  1);
while (G__14757__i < G__14757__a.length) {G__14757__a[G__14757__i] = arguments[G__14757__i + 1]; ++G__14757__i;}
G__14756 = new cljs.core.IndexedSeq(G__14757__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14756);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__14776 = null;
var G__14776__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14776__1 = (function (result){
var G__14770 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14770) : rf.call(null,G__14770));
});
var G__14776__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__14771 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14771) : pred.call(null,G__14771));
})())){
var G__14772 = result;
var G__14773 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14772,G__14773) : rf.call(null,G__14772,G__14773));
} else {
return result;
}
});
G__14776 = function(result,input){
switch(arguments.length){
case 0:
return G__14776__0.call(this);
case 1:
return G__14776__1.call(this,result);
case 2:
return G__14776__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14776.cljs$core$IFn$_invoke$arity$0 = G__14776__0;
G__14776.cljs$core$IFn$_invoke$arity$1 = G__14776__1;
G__14776.cljs$core$IFn$_invoke$arity$2 = G__14776__2;
return G__14776;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4651__auto___14777 = size;
var i_14778 = (0);
while(true){
if((i_14778 < n__4651__auto___14777)){
if(cljs.core.truth_((function (){var G__14774 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14778);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14774) : pred.call(null,G__14774));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14778));
} else {
}

var G__14779 = (i_14778 + (1));
i_14778 = G__14779;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__14775 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14775) : pred.call(null,G__14775));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__14786 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__14786) : branch_QMARK_.call(null,G__14786));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__14787 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__14787) : children.call(null,G__14787));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__14788_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__14788_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__14791 = to;
if(G__14791){
var bit__4438__auto__ = (G__14791.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4438__auto__) || (G__14791.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__14792 = to;
if(G__14792){
var bit__4438__auto__ = (G__14792.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4438__auto__) || (G__14792.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__14794 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14794) : f.call(null,G__14794));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__14795__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__14795 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14796__i = 0, G__14796__a = new Array(arguments.length -  4);
while (G__14796__i < G__14796__a.length) {G__14796__a[G__14796__i] = arguments[G__14796__i + 4]; ++G__14796__i;}
  colls = new cljs.core.IndexedSeq(G__14796__a,0);
} 
return G__14795__delegate.call(this,f,c1,c2,c3,colls);};
G__14795.cljs$lang$maxFixedArity = 4;
G__14795.cljs$lang$applyTo = (function (arglist__14797){
var f = cljs.core.first(arglist__14797);
arglist__14797 = cljs.core.next(arglist__14797);
var c1 = cljs.core.first(arglist__14797);
arglist__14797 = cljs.core.next(arglist__14797);
var c2 = cljs.core.first(arglist__14797);
arglist__14797 = cljs.core.next(arglist__14797);
var c3 = cljs.core.first(arglist__14797);
var colls = cljs.core.rest(arglist__14797);
return G__14795__delegate(f,c1,c2,c3,colls);
});
G__14795.cljs$core$IFn$_invoke$arity$variadic = G__14795__delegate;
return G__14795;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__14798 = null;
if (arguments.length > 4) {
var G__14799__i = 0, G__14799__a = new Array(arguments.length -  4);
while (G__14799__i < G__14799__a.length) {G__14799__a[G__14799__i] = arguments[G__14799__i + 4]; ++G__14799__i;}
G__14798 = new cljs.core.IndexedSeq(G__14799__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14798);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__14801 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14801) : pred.call(null,G__14801));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__14816 = m__$1;
if(G__14816){
var bit__4445__auto__ = (G__14816.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4445__auto__) || (G__14816.cljs$core$ILookup$)){
return true;
} else {
if((!G__14816.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__14816);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__14816);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__14817 = sentinel;
var G__14818 = m__$2;
var G__14819 = cljs.core.next(ks__$1);
sentinel = G__14817;
m__$1 = G__14818;
ks__$1 = G__14819;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__14820,v){
var vec__14825 = p__14820;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14825,(0),null);
var ks = cljs.core.nthnext(vec__14825,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__14826,f){
var vec__14864 = p__14826;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14864,(0),null);
var ks = cljs.core.nthnext(vec__14864,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14865 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14865) : f.call(null,G__14865));
})());
}
});
var update_in__4 = (function (m,p__14827,f,a){
var vec__14866 = p__14827;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14866,(0),null);
var ks = cljs.core.nthnext(vec__14866,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14867 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14868 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14867,G__14868) : f.call(null,G__14867,G__14868));
})());
}
});
var update_in__5 = (function (m,p__14828,f,a,b){
var vec__14869 = p__14828;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14869,(0),null);
var ks = cljs.core.nthnext(vec__14869,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14870 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14871 = a;
var G__14872 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14870,G__14871,G__14872) : f.call(null,G__14870,G__14871,G__14872));
})());
}
});
var update_in__6 = (function (m,p__14829,f,a,b,c){
var vec__14873 = p__14829;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14873,(0),null);
var ks = cljs.core.nthnext(vec__14873,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14874 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14875 = a;
var G__14876 = b;
var G__14877 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14874,G__14875,G__14876,G__14877) : f.call(null,G__14874,G__14875,G__14876,G__14877));
})());
}
});
var update_in__7 = (function() { 
var G__14879__delegate = function (m,p__14830,f,a,b,c,args){
var vec__14878 = p__14830;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14878,(0),null);
var ks = cljs.core.nthnext(vec__14878,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__14879 = function (m,p__14830,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__14880__i = 0, G__14880__a = new Array(arguments.length -  6);
while (G__14880__i < G__14880__a.length) {G__14880__a[G__14880__i] = arguments[G__14880__i + 6]; ++G__14880__i;}
  args = new cljs.core.IndexedSeq(G__14880__a,0);
} 
return G__14879__delegate.call(this,m,p__14830,f,a,b,c,args);};
G__14879.cljs$lang$maxFixedArity = 6;
G__14879.cljs$lang$applyTo = (function (arglist__14881){
var m = cljs.core.first(arglist__14881);
arglist__14881 = cljs.core.next(arglist__14881);
var p__14830 = cljs.core.first(arglist__14881);
arglist__14881 = cljs.core.next(arglist__14881);
var f = cljs.core.first(arglist__14881);
arglist__14881 = cljs.core.next(arglist__14881);
var a = cljs.core.first(arglist__14881);
arglist__14881 = cljs.core.next(arglist__14881);
var b = cljs.core.first(arglist__14881);
arglist__14881 = cljs.core.next(arglist__14881);
var c = cljs.core.first(arglist__14881);
var args = cljs.core.rest(arglist__14881);
return G__14879__delegate(m,p__14830,f,a,b,c,args);
});
G__14879.cljs$core$IFn$_invoke$arity$variadic = G__14879__delegate;
return G__14879;
})()
;
update_in = function(m,p__14830,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__14830,f);
case 4:
return update_in__4.call(this,m,p__14830,f,a);
case 5:
return update_in__5.call(this,m,p__14830,f,a,b);
case 6:
return update_in__6.call(this,m,p__14830,f,a,b,c);
default:
var G__14882 = null;
if (arguments.length > 6) {
var G__14883__i = 0, G__14883__a = new Array(arguments.length -  6);
while (G__14883__i < G__14883__a.length) {G__14883__a[G__14883__i] = arguments[G__14883__i + 6]; ++G__14883__i;}
G__14882 = new cljs.core.IndexedSeq(G__14883__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__14830,f,a,b,c, G__14882);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14894 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14894) : f.call(null,G__14894));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14895 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14896 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14895,G__14896) : f.call(null,G__14895,G__14896));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14897 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14898 = x;
var G__14899 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14897,G__14898,G__14899) : f.call(null,G__14897,G__14898,G__14899));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14900 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14901 = x;
var G__14902 = y;
var G__14903 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14900,G__14901,G__14902,G__14903) : f.call(null,G__14900,G__14901,G__14902,G__14903));
})());
});
var update__7 = (function() { 
var G__14904__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__14904 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__14905__i = 0, G__14905__a = new Array(arguments.length -  6);
while (G__14905__i < G__14905__a.length) {G__14905__a[G__14905__i] = arguments[G__14905__i + 6]; ++G__14905__i;}
  more = new cljs.core.IndexedSeq(G__14905__a,0);
} 
return G__14904__delegate.call(this,m,k,f,x,y,z,more);};
G__14904.cljs$lang$maxFixedArity = 6;
G__14904.cljs$lang$applyTo = (function (arglist__14906){
var m = cljs.core.first(arglist__14906);
arglist__14906 = cljs.core.next(arglist__14906);
var k = cljs.core.first(arglist__14906);
arglist__14906 = cljs.core.next(arglist__14906);
var f = cljs.core.first(arglist__14906);
arglist__14906 = cljs.core.next(arglist__14906);
var x = cljs.core.first(arglist__14906);
arglist__14906 = cljs.core.next(arglist__14906);
var y = cljs.core.first(arglist__14906);
arglist__14906 = cljs.core.next(arglist__14906);
var z = cljs.core.first(arglist__14906);
var more = cljs.core.rest(arglist__14906);
return G__14904__delegate(m,k,f,x,y,z,more);
});
G__14904.cljs$core$IFn$_invoke$arity$variadic = G__14904__delegate;
return G__14904;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__14907 = null;
if (arguments.length > 6) {
var G__14908__i = 0, G__14908__a = new Array(arguments.length -  6);
while (G__14908__i < G__14908__a.length) {G__14908__a[G__14908__i] = arguments[G__14908__i + 6]; ++G__14908__i;}
G__14907 = new cljs.core.IndexedSeq(G__14908__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__14907);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__14909 = (ll - (5));
var G__14910 = r;
ll = G__14909;
ret = G__14910;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__14915 = cljs.core.pv_aget(node,(0));
var G__14916 = (level - (5));
node = G__14915;
level = G__14916;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__14917 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__14918 = (level - (5));
node = G__14917;
level = G__14918;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__14928 = init__$2;
var G__14929 = (j + i);
var G__14930 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14928,G__14929,G__14930) : f.call(null,G__14928,G__14929,G__14930));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__14941 = (j + (1));
var G__14942 = init__$3;
j = G__14941;
init__$2 = G__14942;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14931 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14931) : cljs.core.deref.call(null,G__14931));
} else {
var G__14943 = (i + len);
var G__14944 = init__$2;
i = G__14943;
init__$1 = G__14944;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__14932 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__14932) : cljs.core.tv_editable_root.call(null,G__14932));
})(),(function (){var G__14933 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__14933) : cljs.core.tv_editable_tail.call(null,G__14933));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__14934 = init__$2;
var G__14935 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14934,G__14935) : f.call(null,G__14934,G__14935));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__14945 = (j + (1));
var G__14946 = init__$3;
j = G__14945;
init__$2 = G__14946;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14936 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14936) : cljs.core.deref.call(null,G__14936));
} else {
var G__14947 = (i + len);
var G__14948 = init__$2;
i = G__14947;
init__$1 = G__14948;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__14937 = coll__$1;
var G__14938 = cljs.core.first_array_for_longvec(coll__$1);
var G__14939 = (0);
var G__14940 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14937,G__14938,G__14939,G__14940) : cljs.core.chunked_seq.call(null,G__14937,G__14938,G__14939,G__14940));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4651__auto___14949 = len;
var i_14950 = (0);
while(true){
if((i_14950 < n__4651__auto___14949)){
(new_tail[i_14950] = (self__.tail[i_14950]));

var G__14951 = (i_14950 + (1));
i_14950 = G__14951;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__14952 = null;
var G__14952__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__14952__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__14952 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14952__2.call(this,self__,k);
case 3:
return G__14952__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14952.cljs$core$IFn$_invoke$arity$2 = G__14952__2;
G__14952.cljs$core$IFn$_invoke$arity$3 = G__14952__3;
return G__14952;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args14927){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14927)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__14953 = (i + (1));
var G__14954 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__14953;
out = G__14954;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14955__i = 0, G__14955__a = new Array(arguments.length -  0);
while (G__14955__i < G__14955__a.length) {G__14955__a[G__14955__i] = arguments[G__14955__i + 0]; ++G__14955__i;}
  args = new cljs.core.IndexedSeq(G__14955__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__14956){
var args = cljs.core.seq(arglist__14956);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__14957 = self__.vec;
var G__14958 = self__.node;
var G__14959 = self__.i;
var G__14960 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14957,G__14958,G__14959,G__14960) : cljs.core.chunked_seq.call(null,G__14957,G__14958,G__14959,G__14960));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__14961 = self__.vec;
var G__14962 = (self__.i + self__.off);
var G__14963 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14961,G__14962,G__14963) : cljs.core.subvec.call(null,G__14961,G__14962,G__14963));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__14964 = self__.vec;
var G__14965 = (self__.i + self__.off);
var G__14966 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14964,G__14965,G__14966) : cljs.core.subvec.call(null,G__14964,G__14965,G__14966));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__14967 = self__.vec;
var G__14968 = self__.node;
var G__14969 = self__.i;
var G__14970 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14967,G__14968,G__14969,G__14970) : cljs.core.chunked_seq.call(null,G__14967,G__14968,G__14969,G__14970));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__14971 = self__.vec;
var G__14972 = cljs.core.unchecked_array_for(self__.vec,end);
var G__14973 = end;
var G__14974 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14971,G__14972,G__14973,G__14974) : cljs.core.chunked_seq.call(null,G__14971,G__14972,G__14973,G__14974));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__14975 = self__.vec;
var G__14976 = self__.node;
var G__14977 = self__.i;
var G__14978 = self__.off;
var G__14979 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__14975,G__14976,G__14977,G__14978,G__14979) : cljs.core.chunked_seq.call(null,G__14975,G__14976,G__14977,G__14978,G__14979));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__14980 = self__.vec;
var G__14981 = cljs.core.unchecked_array_for(self__.vec,end);
var G__14982 = end;
var G__14983 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14980,G__14981,G__14982,G__14983) : cljs.core.chunked_seq.call(null,G__14980,G__14981,G__14982,G__14983));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__14985 = self__.meta;
var G__14986 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__14987 = self__.start;
var G__14988 = (function (){var x__4081__auto__ = self__.end;
var y__4082__auto__ = (v_pos + (1));
return ((x__4081__auto__ > y__4082__auto__) ? x__4081__auto__ : y__4082__auto__);
})();
var G__14989 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14985,G__14986,G__14987,G__14988,G__14989) : cljs.core.build_subvec.call(null,G__14985,G__14986,G__14987,G__14988,G__14989));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__14990 = self__.meta;
var G__14991 = self__.v;
var G__14992 = self__.start;
var G__14993 = (self__.end - (1));
var G__14994 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14990,G__14991,G__14992,G__14993,G__14994) : cljs.core.build_subvec.call(null,G__14990,G__14991,G__14992,G__14993,G__14994));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__14996 = meta__$1;
var G__14997 = self__.v;
var G__14998 = self__.start;
var G__14999 = self__.end;
var G__15000 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14996,G__14997,G__14998,G__14999,G__15000) : cljs.core.build_subvec.call(null,G__14996,G__14997,G__14998,G__14999,G__15000));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__15001 = self__.meta;
var G__15002 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__15003 = self__.start;
var G__15004 = (self__.end + (1));
var G__15005 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15001,G__15002,G__15003,G__15004,G__15005) : cljs.core.build_subvec.call(null,G__15001,G__15002,G__15003,G__15004,G__15005));
});

cljs.core.Subvec.prototype.call = (function() {
var G__15006 = null;
var G__15006__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__15006__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__15006 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15006__2.call(this,self__,k);
case 3:
return G__15006__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15006.cljs$core$IFn$_invoke$arity$2 = G__15006__2;
G__15006.cljs$core$IFn$_invoke$arity$3 = G__15006__3;
return G__15006;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args14984){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14984)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__15007 = meta;
var G__15008 = v.v;
var G__15009 = (v.start + start);
var G__15010 = (v.start + end);
var G__15011 = __hash;
meta = G__15007;
v = G__15008;
start = G__15009;
end = G__15010;
__hash = G__15011;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj15018 = {};
return obj15018;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__15026 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__15027 = (level - (5));
node = G__15026;
level = G__15027;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__15031 = null;
var G__15031__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15031__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15031 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15031__2.call(this,self__,k);
case 3:
return G__15031__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15031.cljs$core$IFn$_invoke$arity$2 = G__15031__2;
G__15031.cljs$core$IFn$_invoke$arity$3 = G__15031__3;
return G__15031;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args15028){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15028)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3764__auto__ = self__.front;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3764__auto__ = self__.rear;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__15032 = (i + incr);
i = G__15032;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__15033 = (i + (1));
var G__15034 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__15033;
out = G__15034;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj15038 = {};
return obj15038;
})();
var l = ks.length;
var i_15039 = (0);
while(true){
if((i_15039 < l)){
var k_15040 = (ks[i_15039]);
(new_obj[k_15040] = (obj[k_15040]));

var G__15041 = (i_15039 + (1));
i_15039 = G__15041;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3752__auto__ = (function (){var G__15045 = k;
return goog.isString(G__15045);
})();
if(cljs.core.truth_(and__3752__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3752__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__15046 = init__$1;
var G__15047 = k;
var G__15048 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15046,G__15047,G__15048) : f.call(null,G__15046,G__15047,G__15048));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15049 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15049) : cljs.core.deref.call(null,G__15049));
} else {
var G__15055 = cljs.core.rest(keys__$1);
var G__15056 = init__$2;
keys__$1 = G__15055;
init__$1 = G__15056;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3752__auto__ = (function (){var G__15051 = k;
return goog.isString(G__15051);
})();
if(cljs.core.truth_(and__3752__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3752__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__15052 = k;
return goog.isString(G__15052);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3752__auto__ = (function (){var G__15054 = k;
return goog.isString(G__15054);
})();
if(cljs.core.truth_(and__3752__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3752__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__15042_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__15042_SHARP_,(self__.strobj[p1__15042_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__15057 = null;
var G__15057__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15057__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15057 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15057__2.call(this,self__,k);
case 3:
return G__15057__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15057.cljs$core$IFn$_invoke$arity$2 = G__15057__2;
G__15057.cljs$core$IFn$_invoke$arity$3 = G__15057__3;
return G__15057;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args15043){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15043)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj15059 = {};
return obj15059;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__15060 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15060,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15060,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__15061 = (i + (2));
i = G__15061;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__15062 = (i + (2));
i = G__15062;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__15063 = (i + (2));
i = G__15063;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__15064 = (i + (2));
i = G__15064;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__15065 = (i + (2));
i = G__15065;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3764__auto__ = (function (){var G__15069 = k;
return goog.isString(G__15069);
})();
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_15070 = (0);
while(true){
if((i_15070 < l)){
(narr[i_15070] = (arr[i_15070]));

var G__15071 = (i_15070 + (1));
i_15070 = G__15071;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15073 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15073) : cljs.core.keys.call(null,G__15073));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15074 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15074) : cljs.core.vals.call(null,G__15074));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15075 = cljs.core.seq(coll);
var chunk__15076 = null;
var count__15077 = (0);
var i__15078 = (0);
while(true){
if((i__15078 < count__15077)){
var vec__15079 = chunk__15076.cljs$core$IIndexed$_nth$arity$2(null,i__15078);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15079,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15079,(1),null);
var G__15080_15093 = v;
var G__15081_15094 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15080_15093,G__15081_15094) : f.call(null,G__15080_15093,G__15081_15094));

var G__15095 = seq__15075;
var G__15096 = chunk__15076;
var G__15097 = count__15077;
var G__15098 = (i__15078 + (1));
seq__15075 = G__15095;
chunk__15076 = G__15096;
count__15077 = G__15097;
i__15078 = G__15098;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15075);
if(temp__4126__auto__){
var seq__15075__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15075__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__15075__$1);
var G__15099 = cljs.core.chunk_rest(seq__15075__$1);
var G__15100 = c__4551__auto__;
var G__15101 = cljs.core.count(c__4551__auto__);
var G__15102 = (0);
seq__15075 = G__15099;
chunk__15076 = G__15100;
count__15077 = G__15101;
i__15078 = G__15102;
continue;
} else {
var vec__15082 = cljs.core.first(seq__15075__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15082,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15082,(1),null);
var G__15083_15103 = v;
var G__15084_15104 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15083_15103,G__15084_15104) : f.call(null,G__15083_15103,G__15084_15104));

var G__15105 = cljs.core.next(seq__15075__$1);
var G__15106 = null;
var G__15107 = (0);
var G__15108 = (0);
seq__15075 = G__15105;
chunk__15076 = G__15106;
count__15077 = G__15107;
i__15078 = G__15108;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__15085 = init__$1;
var G__15086 = (self__.arr[i]);
var G__15087 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15085,G__15086,G__15087) : f.call(null,G__15085,G__15086,G__15087));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15088 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15088) : cljs.core.deref.call(null,G__15088));
} else {
var G__15109 = (i + (2));
var G__15110 = init__$2;
i = G__15109;
init__$1 = G__15110;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__15089 = other;
if(G__15089){
var bit__4438__auto__ = (G__15089.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4438__auto__) || (G__15089.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__15111 = (i + (2));
i = G__15111;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj15091 = {};
return obj15091;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__15112 = (s + (2));
var G__15113 = d;
s = G__15112;
d = G__15113;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__15114 = (s + (2));
var G__15115 = (d + (2));
s = G__15114;
d = G__15115;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__15092 = cljs.core.aclone(self__.arr);
(G__15092[(idx + (1))] = v);

return G__15092;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15116 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15117 = cljs.core.next(es);
ret = G__15116;
es = G__15117;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__15118 = null;
var G__15118__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15118__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15118 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15118__2.call(this,self__,k);
case 3:
return G__15118__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15118.cljs$core$IFn$_invoke$arity$2 = G__15118__2;
G__15118.cljs$core$IFn$_invoke$arity$3 = G__15118__3;
return G__15118;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args15072){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15072)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__15119 = (i + (2));
var G__15120 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__15119;
ret = G__15120;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__15121_15129 = self__.arr;
G__15121_15129.pop();

G__15121_15129.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__15122 = self__.len;
var G__15123 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__15122,G__15123) : cljs.core.array__GT_transient_hash_map.call(null,G__15122,G__15123));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__15124 = o;
if(G__15124){
var bit__4445__auto__ = (G__15124.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4445__auto__) || (G__15124.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__15124.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15124);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15124);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__15125 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15125) : cljs.core.key.call(null,G__15125));
})(),(function (){var G__15126 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15126) : cljs.core.val.call(null,G__15126));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__15130 = cljs.core.next(es);
var G__15131 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__15127 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15127) : cljs.core.key.call(null,G__15127));
})(),(function (){var G__15128 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15128) : cljs.core.val.call(null,G__15128));
})());
es = G__15130;
tcoll__$2 = G__15131;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__15132 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__15133 = (i + (2));
out = G__15132;
i = G__15133;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__15136 = cljs.core.aclone(arr);
(G__15136[i] = a);

return G__15136;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__15137 = cljs.core.aclone(arr);
(G__15137[i] = a);

(G__15137[j] = b);

return G__15137;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__15142 = init__$1;
var G__15143 = k;
var G__15144 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15142,G__15143,G__15144) : f.call(null,G__15142,G__15143,G__15144));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15145 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15145) : cljs.core.deref.call(null,G__15145));
} else {
var G__15146 = (i + (2));
var G__15147 = init__$2;
i = G__15146;
init__$1 = G__15147;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15148 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15148) : cljs.core.create_inode_seq.call(null,G__15148));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_15162 = (0);
var j_15163 = (0);
while(true){
if((i_15162 < (32))){
if((((self__.bitmap >>> i_15162) & (1)) === (0))){
var G__15164 = (i_15162 + (1));
var G__15165 = j_15163;
i_15162 = G__15164;
j_15163 = G__15165;
continue;
} else {
(nodes[i_15162] = ((!(((self__.arr[j_15163]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_15163])),(self__.arr[j_15163]),(self__.arr[(j_15163 + (1))]),added_leaf_QMARK_):(self__.arr[(j_15163 + (1))])));

var G__15166 = (i_15162 + (1));
var G__15167 = (j_15163 + (2));
i_15162 = G__15166;
j_15163 = G__15167;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15149 = edit__$1;
var G__15150 = (shift + (5));
var G__15151 = key_or_nil;
var G__15152 = val_or_node;
var G__15153 = hash;
var G__15154 = key;
var G__15155 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__15149,G__15150,G__15151,G__15152,G__15153,G__15154,G__15155) : cljs.core.create_node.call(null,G__15149,G__15150,G__15151,G__15152,G__15153,G__15154,G__15155));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_15168 = (0);
var j_15169 = (0);
while(true){
if((i_15168 < (32))){
if((((self__.bitmap >>> i_15168) & (1)) === (0))){
var G__15170 = (i_15168 + (1));
var G__15171 = j_15169;
i_15168 = G__15170;
j_15169 = G__15171;
continue;
} else {
(nodes[i_15168] = ((!(((self__.arr[j_15169]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_15169])),(self__.arr[j_15169]),(self__.arr[(j_15169 + (1))]),added_leaf_QMARK_):(self__.arr[(j_15169 + (1))])));

var G__15172 = (i_15168 + (1));
var G__15173 = (j_15169 + (2));
i_15168 = G__15172;
j_15169 = G__15173;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15156 = (shift + (5));
var G__15157 = key_or_nil;
var G__15158 = val_or_node;
var G__15159 = hash;
var G__15160 = key;
var G__15161 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__15156,G__15157,G__15158,G__15159,G__15160,G__15161) : cljs.core.create_node.call(null,G__15156,G__15157,G__15158,G__15159,G__15160,G__15161));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__15174 = (i + (1));
var G__15175 = (j + (2));
var G__15176 = (bitmap | ((1) << i));
i = G__15174;
j = G__15175;
bitmap = G__15176;
continue;
} else {
var G__15177 = (i + (1));
var G__15178 = j;
var G__15179 = bitmap;
i = G__15177;
j = G__15178;
bitmap = G__15179;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15180 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__15180) : cljs.core.create_array_node_seq.call(null,G__15180));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15181 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15181) : cljs.core.deref.call(null,G__15181));
} else {
var G__15182 = (i + (1));
var G__15183 = init__$2;
i = G__15182;
init__$1 = G__15183;
continue;
}
} else {
var G__15184 = (i + (1));
var G__15185 = init__$1;
i = G__15184;
init__$1 = G__15185;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__15186 = (i + (2));
i = G__15186;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15187 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15187) : cljs.core.create_inode_seq.call(null,G__15187));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__15188 = self__.nodes;
var G__15189 = (self__.i + (2));
var G__15190 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15188,G__15189,G__15190) : cljs.core.create_inode_seq.call(null,G__15188,G__15189,G__15190));
} else {
var G__15191 = self__.nodes;
var G__15192 = self__.i;
var G__15193 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15191,G__15192,G__15193) : cljs.core.create_inode_seq.call(null,G__15191,G__15192,G__15193));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__15197 = (j + (2));
j = G__15197;
continue;
}
} else {
var G__15198 = (j + (2));
j = G__15198;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__15199 = null;
var G__15200 = self__.nodes;
var G__15201 = self__.i;
var G__15202 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__15199,G__15200,G__15201,G__15202) : cljs.core.create_array_node_seq.call(null,G__15199,G__15200,G__15201,G__15202));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__15207 = (j + (1));
j = G__15207;
continue;
}
} else {
var G__15208 = (j + (1));
j = G__15208;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15210 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15210) : cljs.core.keys.call(null,G__15210));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15211 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15211) : cljs.core.vals.call(null,G__15211));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15212 = cljs.core.seq(coll);
var chunk__15213 = null;
var count__15214 = (0);
var i__15215 = (0);
while(true){
if((i__15215 < count__15214)){
var vec__15216 = chunk__15213.cljs$core$IIndexed$_nth$arity$2(null,i__15215);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15216,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15216,(1),null);
var G__15217_15228 = v;
var G__15218_15229 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15217_15228,G__15218_15229) : f.call(null,G__15217_15228,G__15218_15229));

var G__15230 = seq__15212;
var G__15231 = chunk__15213;
var G__15232 = count__15214;
var G__15233 = (i__15215 + (1));
seq__15212 = G__15230;
chunk__15213 = G__15231;
count__15214 = G__15232;
i__15215 = G__15233;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15212);
if(temp__4126__auto__){
var seq__15212__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15212__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__15212__$1);
var G__15234 = cljs.core.chunk_rest(seq__15212__$1);
var G__15235 = c__4551__auto__;
var G__15236 = cljs.core.count(c__4551__auto__);
var G__15237 = (0);
seq__15212 = G__15234;
chunk__15213 = G__15235;
count__15214 = G__15236;
i__15215 = G__15237;
continue;
} else {
var vec__15219 = cljs.core.first(seq__15212__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15219,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15219,(1),null);
var G__15220_15238 = v;
var G__15221_15239 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15220_15238,G__15221_15239) : f.call(null,G__15220_15238,G__15221_15239));

var G__15240 = cljs.core.next(seq__15212__$1);
var G__15241 = null;
var G__15242 = (0);
var G__15243 = (0);
seq__15212 = G__15240;
chunk__15213 = G__15241;
count__15214 = G__15242;
i__15215 = G__15243;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__15222 = init;
var G__15223 = null;
var G__15224 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15222,G__15223,G__15224) : f.call(null,G__15222,G__15223,G__15224));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15225 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15225) : cljs.core.deref.call(null,G__15225));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj15227 = {};
return obj15227;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15244 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15245 = cljs.core.next(es);
ret = G__15244;
es = G__15245;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__15246 = null;
var G__15246__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15246__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15246 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15246__2.call(this,self__,k);
case 3:
return G__15246__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15246.cljs$core$IFn$_invoke$arity$2 = G__15246__2;
G__15246.cljs$core$IFn$_invoke$arity$3 = G__15246__3;
return G__15246;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args15209){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15209)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__15247 = (i + (2));
var G__15248 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__15247;
ret = G__15248;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__15249 = (i + (1));
var G__15250 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__15249;
out = G__15250;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__15251 = o;
if(G__15251){
var bit__4445__auto__ = (G__15251.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4445__auto__) || (G__15251.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__15251.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15251);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15251);
}
})()){
return tcoll.assoc_BANG_((function (){var G__15252 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15252) : cljs.core.key.call(null,G__15252));
})(),(function (){var G__15253 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15253) : cljs.core.val.call(null,G__15253));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__15256 = cljs.core.next(es);
var G__15257 = tcoll__$1.assoc_BANG_((function (){var G__15254 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15254) : cljs.core.key.call(null,G__15254));
})(),(function (){var G__15255 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15255) : cljs.core.val.call(null,G__15255));
})());
es = G__15256;
tcoll__$1 = G__15257;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__15258 = ((ascending_QMARK_)?t.left:t.right);
var G__15259 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__15258;
stack__$1 = G__15259;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15272 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15272) : cljs.core.deref.call(null,G__15272));
} else {
var init__$2 = (function (){var G__15273 = init__$1;
var G__15274 = node.key;
var G__15275 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15273,G__15274,G__15275) : f.call(null,G__15273,G__15274,G__15275));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15276 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15276) : cljs.core.deref.call(null,G__15276));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__15277 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15277) : cljs.core.deref.call(null,G__15277));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__15279 = null;
var G__15279__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15279__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15279 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15279__2.call(this,self__,k);
case 3:
return G__15279__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15279.cljs$core$IFn$_invoke$arity$2 = G__15279__2;
G__15279.cljs$core$IFn$_invoke$arity$3 = G__15279__3;
return G__15279;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args15278){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15278)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__15281 = null;
var G__15281__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15281__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15281 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15281__2.call(this,self__,k);
case 3:
return G__15281__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15281.cljs$core$IFn$_invoke$arity$2 = G__15281__2;
G__15281.cljs$core$IFn$_invoke$arity$3 = G__15281__3;
return G__15281;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args15280){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15280)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__15294 = k;
var G__15295 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15294,G__15295) : comp.call(null,G__15294,G__15295));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__15314 = k;
var G__15315 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15314,G__15315) : comp.call(null,G__15314,G__15315));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__15326 = k;
var G__15327 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15326,G__15327) : comp.call(null,G__15326,G__15327));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15329 = cljs.core.seq(coll);
var chunk__15330 = null;
var count__15331 = (0);
var i__15332 = (0);
while(true){
if((i__15332 < count__15331)){
var vec__15333 = chunk__15330.cljs$core$IIndexed$_nth$arity$2(null,i__15332);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15333,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15333,(1),null);
var G__15334_15346 = v;
var G__15335_15347 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15334_15346,G__15335_15347) : f.call(null,G__15334_15346,G__15335_15347));

var G__15348 = seq__15329;
var G__15349 = chunk__15330;
var G__15350 = count__15331;
var G__15351 = (i__15332 + (1));
seq__15329 = G__15348;
chunk__15330 = G__15349;
count__15331 = G__15350;
i__15332 = G__15351;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15329);
if(temp__4126__auto__){
var seq__15329__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15329__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__15329__$1);
var G__15352 = cljs.core.chunk_rest(seq__15329__$1);
var G__15353 = c__4551__auto__;
var G__15354 = cljs.core.count(c__4551__auto__);
var G__15355 = (0);
seq__15329 = G__15352;
chunk__15330 = G__15353;
count__15331 = G__15354;
i__15332 = G__15355;
continue;
} else {
var vec__15336 = cljs.core.first(seq__15329__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15336,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15336,(1),null);
var G__15337_15356 = v;
var G__15338_15357 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15337_15356,G__15338_15357) : f.call(null,G__15337_15356,G__15338_15357));

var G__15358 = cljs.core.next(seq__15329__$1);
var G__15359 = null;
var G__15360 = (0);
var G__15361 = (0);
seq__15329 = G__15358;
chunk__15330 = G__15359;
count__15331 = G__15360;
i__15332 = G__15361;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15339 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15339) : cljs.core.keys.call(null,G__15339));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15340 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15340) : cljs.core.vals.call(null,G__15340));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__15341 = k;
var G__15342 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15341,G__15342) : self__.comp.call(null,G__15341,G__15342));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__15362 = t.left;
t = G__15362;
continue;
} else {
var G__15363 = t.right;
t = G__15363;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15364 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15365 = cljs.core.next(es);
ret = G__15364;
es = G__15365;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__15366 = null;
var G__15366__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15366__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15366 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15366__2.call(this,self__,k);
case 3:
return G__15366__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15366.cljs$core$IFn$_invoke$arity$2 = G__15366__2;
G__15366.cljs$core$IFn$_invoke$arity$3 = G__15366__3;
return G__15366;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args15328){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15328)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__15343 = k;
var G__15344 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15343,G__15344) : self__.comp.call(null,G__15343,G__15344));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__15367 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__15368 = t.left;
stack = G__15367;
t = G__15368;
continue;
} else {
var G__15369 = stack;
var G__15370 = t.right;
stack = G__15369;
t = G__15370;
continue;
}
} else {
if((c > (0))){
var G__15371 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__15372 = t.right;
stack = G__15371;
t = G__15372;
continue;
} else {
var G__15373 = stack;
var G__15374 = t.left;
stack = G__15373;
t = G__15374;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__15345 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15345) : cljs.core.key.call(null,G__15345));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__15375 = cljs.core.nnext(in$);
var G__15376 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15375;
out = G__15376;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15377__i = 0, G__15377__a = new Array(arguments.length -  0);
while (G__15377__i < G__15377__a.length) {G__15377__a[G__15377__i] = arguments[G__15377__i + 0]; ++G__15377__i;}
  keyvals = new cljs.core.IndexedSeq(G__15377__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__15378){
var keyvals = cljs.core.seq(arglist__15378);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15379__i = 0, G__15379__a = new Array(arguments.length -  0);
while (G__15379__i < G__15379__a.length) {G__15379__a[G__15379__i] = arguments[G__15379__i + 0]; ++G__15379__i;}
  keyvals = new cljs.core.IndexedSeq(G__15379__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__15380){
var keyvals = cljs.core.seq(arglist__15380);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj15384 = {};
return obj15384;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__15385 = cljs.core.nnext(kvs);
kvs = G__15385;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15386__i = 0, G__15386__a = new Array(arguments.length -  0);
while (G__15386__i < G__15386__a.length) {G__15386__a[G__15386__i] = arguments[G__15386__i + 0]; ++G__15386__i;}
  keyvals = new cljs.core.IndexedSeq(G__15386__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__15387){
var keyvals = cljs.core.seq(arglist__15387);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__15388 = cljs.core.nnext(in$);
var G__15389 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15388;
out = G__15389;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15390__i = 0, G__15390__a = new Array(arguments.length -  0);
while (G__15390__i < G__15390__a.length) {G__15390__a[G__15390__i] = arguments[G__15390__i + 0]; ++G__15390__i;}
  keyvals = new cljs.core.IndexedSeq(G__15390__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__15391){
var keyvals = cljs.core.seq(arglist__15391);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__15392 = cljs.core.nnext(in$);
var G__15393 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15392;
out = G__15393;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__15394__i = 0, G__15394__a = new Array(arguments.length -  1);
while (G__15394__i < G__15394__a.length) {G__15394__a[G__15394__i] = arguments[G__15394__i + 1]; ++G__15394__i;}
  keyvals = new cljs.core.IndexedSeq(G__15394__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__15395){
var comparator = cljs.core.first(arglist__15395);
var keyvals = cljs.core.rest(arglist__15395);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15396 = self__.mseq;
if(G__15396){
var bit__4445__auto__ = (G__15396.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4445__auto__) || (G__15396.cljs$core$INext$)){
return true;
} else {
if((!G__15396.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15396);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15396);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15397 = self__.mseq;
if(G__15397){
var bit__4445__auto__ = (G__15397.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4445__auto__) || (G__15397.cljs$core$INext$)){
return true;
} else {
if((!G__15397.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15397);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15397);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15398 = self__.mseq;
if(G__15398){
var bit__4445__auto__ = (G__15398.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4445__auto__) || (G__15398.cljs$core$INext$)){
return true;
} else {
if((!G__15398.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15398);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15398);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15399 = self__.mseq;
if(G__15399){
var bit__4445__auto__ = (G__15399.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4445__auto__) || (G__15399.cljs$core$INext$)){
return true;
} else {
if((!G__15399.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15399);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15399);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__15400_SHARP_,p2__15401_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3764__auto__ = p1__15400_SHARP_;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__15401_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__15402__i = 0, G__15402__a = new Array(arguments.length -  0);
while (G__15402__i < G__15402__a.length) {G__15402__a[G__15402__i] = arguments[G__15402__i + 0]; ++G__15402__i;}
  maps = new cljs.core.IndexedSeq(G__15402__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__15403){
var maps = cljs.core.seq(arglist__15403);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15406 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15407 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15406,G__15407) : f.call(null,G__15406,G__15407));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3764__auto__ = m1;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__15408__i = 0, G__15408__a = new Array(arguments.length -  1);
while (G__15408__i < G__15408__a.length) {G__15408__a[G__15408__i] = arguments[G__15408__i + 1]; ++G__15408__i;}
  maps = new cljs.core.IndexedSeq(G__15408__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__15409){
var f = cljs.core.first(arglist__15409);
var maps = cljs.core.rest(arglist__15409);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$14);
var G__15410 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$14))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__15411 = cljs.core.next(keys);
ret = G__15410;
keys = G__15411;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15414 = cljs.core.seq(coll);
var chunk__15415 = null;
var count__15416 = (0);
var i__15417 = (0);
while(true){
if((i__15417 < count__15416)){
var vec__15418 = chunk__15415.cljs$core$IIndexed$_nth$arity$2(null,i__15417);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15418,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15418,(1),null);
var G__15419_15424 = v;
var G__15420_15425 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15419_15424,G__15420_15425) : f.call(null,G__15419_15424,G__15420_15425));

var G__15426 = seq__15414;
var G__15427 = chunk__15415;
var G__15428 = count__15416;
var G__15429 = (i__15417 + (1));
seq__15414 = G__15426;
chunk__15415 = G__15427;
count__15416 = G__15428;
i__15417 = G__15429;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15414);
if(temp__4126__auto__){
var seq__15414__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15414__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__15414__$1);
var G__15430 = cljs.core.chunk_rest(seq__15414__$1);
var G__15431 = c__4551__auto__;
var G__15432 = cljs.core.count(c__4551__auto__);
var G__15433 = (0);
seq__15414 = G__15430;
chunk__15415 = G__15431;
count__15416 = G__15432;
i__15417 = G__15433;
continue;
} else {
var vec__15421 = cljs.core.first(seq__15414__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15421,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15421,(1),null);
var G__15422_15434 = v;
var G__15423_15435 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15422_15434,G__15423_15435) : f.call(null,G__15422_15434,G__15423_15435));

var G__15436 = cljs.core.next(seq__15414__$1);
var G__15437 = null;
var G__15438 = (0);
var G__15439 = (0);
seq__15414 = G__15436;
chunk__15415 = G__15437;
count__15416 = G__15438;
i__15417 = G__15439;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__15412_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__15412_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__15440 = null;
var G__15440__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15440__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15440 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15440__2.call(this,self__,k);
case 3:
return G__15440__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15440.cljs$core$IFn$_invoke$arity$2 = G__15440__2;
G__15440.cljs$core$IFn$_invoke$arity$3 = G__15440__3;
return G__15440;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args15413){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15413)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__15441 = (i + (1));
var G__15442 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__15441;
out = G__15442;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__15443 = (i + (1));
var G__15444 = cljs.core._conj_BANG_(out,(items[i]));
i = G__15443;
out = G__15444;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__15446 = null;
var G__15446__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__15446__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__15446 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15446__2.call(this,self__,k);
case 3:
return G__15446__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15446.cljs$core$IFn$_invoke$arity$2 = G__15446__2;
G__15446.cljs$core$IFn$_invoke$arity$3 = G__15446__3;
return G__15446;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args15445){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15445)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15449 = cljs.core.seq(coll);
var chunk__15450 = null;
var count__15451 = (0);
var i__15452 = (0);
while(true){
if((i__15452 < count__15451)){
var vec__15453 = chunk__15450.cljs$core$IIndexed$_nth$arity$2(null,i__15452);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15453,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15453,(1),null);
var G__15454_15459 = v;
var G__15455_15460 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15454_15459,G__15455_15460) : f.call(null,G__15454_15459,G__15455_15460));

var G__15461 = seq__15449;
var G__15462 = chunk__15450;
var G__15463 = count__15451;
var G__15464 = (i__15452 + (1));
seq__15449 = G__15461;
chunk__15450 = G__15462;
count__15451 = G__15463;
i__15452 = G__15464;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15449);
if(temp__4126__auto__){
var seq__15449__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15449__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__15449__$1);
var G__15465 = cljs.core.chunk_rest(seq__15449__$1);
var G__15466 = c__4551__auto__;
var G__15467 = cljs.core.count(c__4551__auto__);
var G__15468 = (0);
seq__15449 = G__15465;
chunk__15450 = G__15466;
count__15451 = G__15467;
i__15452 = G__15468;
continue;
} else {
var vec__15456 = cljs.core.first(seq__15449__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15456,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15456,(1),null);
var G__15457_15469 = v;
var G__15458_15470 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15457_15469,G__15458_15470) : f.call(null,G__15457_15469,G__15458_15470));

var G__15471 = cljs.core.next(seq__15449__$1);
var G__15472 = null;
var G__15473 = (0);
var G__15474 = (0);
seq__15449 = G__15471;
chunk__15450 = G__15472;
count__15451 = G__15473;
i__15452 = G__15474;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__15447_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__15447_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__15475 = null;
var G__15475__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15475__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15475 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15475__2.call(this,self__,k);
case 3:
return G__15475__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15475.cljs$core$IFn$_invoke$arity$2 = G__15475__2;
G__15475.cljs$core$IFn$_invoke$arity$3 = G__15475__3;
return G__15475;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args15448){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15448)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4645__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4645__auto__.length)){
var G__15476 = (i + (1));
var G__15477 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__15476;
res = G__15477;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__15478 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__15479 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__15478;
out = G__15479;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__15480__delegate = function (keys){
return cljs.core.set(keys);
};
var G__15480 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__15481__i = 0, G__15481__a = new Array(arguments.length -  0);
while (G__15481__i < G__15481__a.length) {G__15481__a[G__15481__i] = arguments[G__15481__i + 0]; ++G__15481__i;}
  keys = new cljs.core.IndexedSeq(G__15481__a,0);
} 
return G__15480__delegate.call(this,keys);};
G__15480.cljs$lang$maxFixedArity = 0;
G__15480.cljs$lang$applyTo = (function (arglist__15482){
var keys = cljs.core.seq(arglist__15482);
return G__15480__delegate(keys);
});
G__15480.cljs$core$IFn$_invoke$arity$variadic = G__15480__delegate;
return G__15480;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__15483 = null;
if (arguments.length > 0) {
var G__15484__i = 0, G__15484__a = new Array(arguments.length -  0);
while (G__15484__i < G__15484__a.length) {G__15484__a[G__15484__i] = arguments[G__15484__i + 0]; ++G__15484__i;}
G__15483 = new cljs.core.IndexedSeq(G__15484__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__15483);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__15485__i = 0, G__15485__a = new Array(arguments.length -  0);
while (G__15485__i < G__15485__a.length) {G__15485__a[G__15485__i] = arguments[G__15485__i + 0]; ++G__15485__i;}
  keys = new cljs.core.IndexedSeq(G__15485__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__15486){
var keys = cljs.core.seq(arglist__15486);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__15487__i = 0, G__15487__a = new Array(arguments.length -  1);
while (G__15487__i < G__15487__a.length) {G__15487__a[G__15487__i] = arguments[G__15487__i + 1]; ++G__15487__i;}
  keys = new cljs.core.IndexedSeq(G__15487__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__15488){
var comparator = cljs.core.first(arglist__15488);
var keys = cljs.core.rest(arglist__15488);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__15489_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__15489_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__15489_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__15490_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__15490_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__15490_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__15511 = null;
var G__15511__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15511__1 = (function (result){
var G__15501 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15501) : rf.call(null,G__15501));
});
var G__15511__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__15502 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15502) : cljs.core.deref.call(null,G__15502));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__15503 = result;
var G__15504 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15503,G__15504) : rf.call(null,G__15503,G__15504));
}
});
G__15511 = function(result,input){
switch(arguments.length){
case 0:
return G__15511__0.call(this);
case 1:
return G__15511__1.call(this,result);
case 2:
return G__15511__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15511.cljs$core$IFn$_invoke$arity$0 = G__15511__0;
G__15511.cljs$core$IFn$_invoke$arity$1 = G__15511__1;
G__15511.cljs$core$IFn$_invoke$arity$2 = G__15511__2;
return G__15511;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__15509,seen__$1){
while(true){
var vec__15510 = p__15509;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15510,(0),null);
var xs__$1 = vec__15510;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__15512 = cljs.core.rest(s);
var G__15513 = seen__$1;
p__15509 = G__15512;
seen__$1 = G__15513;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__15514 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__15515 = cljs.core.next(s__$1);
ret = G__15514;
s__$1 = G__15515;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__15517 = x;
if(G__15517){
var bit__4438__auto__ = (G__15517.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4438__auto__) || (G__15517.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__15518 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__15519 = cljs.core.next(ks);
var G__15520 = cljs.core.next(vs);
map = G__15518;
ks = G__15519;
vs = G__15520;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__15531 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15531) : k.call(null,G__15531));
})() > (function (){var G__15532 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15532) : k.call(null,G__15532));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__15533__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15521_SHARP_,p2__15522_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__15521_SHARP_,p2__15522_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__15533 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__15534__i = 0, G__15534__a = new Array(arguments.length -  3);
while (G__15534__i < G__15534__a.length) {G__15534__a[G__15534__i] = arguments[G__15534__i + 3]; ++G__15534__i;}
  more = new cljs.core.IndexedSeq(G__15534__a,0);
} 
return G__15533__delegate.call(this,k,x,y,more);};
G__15533.cljs$lang$maxFixedArity = 3;
G__15533.cljs$lang$applyTo = (function (arglist__15535){
var k = cljs.core.first(arglist__15535);
arglist__15535 = cljs.core.next(arglist__15535);
var x = cljs.core.first(arglist__15535);
arglist__15535 = cljs.core.next(arglist__15535);
var y = cljs.core.first(arglist__15535);
var more = cljs.core.rest(arglist__15535);
return G__15533__delegate(k,x,y,more);
});
G__15533.cljs$core$IFn$_invoke$arity$variadic = G__15533__delegate;
return G__15533;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__15536 = null;
if (arguments.length > 3) {
var G__15537__i = 0, G__15537__a = new Array(arguments.length -  3);
while (G__15537__i < G__15537__a.length) {G__15537__a[G__15537__i] = arguments[G__15537__i + 3]; ++G__15537__i;}
G__15536 = new cljs.core.IndexedSeq(G__15537__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__15536);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__15548 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15548) : k.call(null,G__15548));
})() < (function (){var G__15549 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15549) : k.call(null,G__15549));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__15550__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15538_SHARP_,p2__15539_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__15538_SHARP_,p2__15539_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__15550 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__15551__i = 0, G__15551__a = new Array(arguments.length -  3);
while (G__15551__i < G__15551__a.length) {G__15551__a[G__15551__i] = arguments[G__15551__i + 3]; ++G__15551__i;}
  more = new cljs.core.IndexedSeq(G__15551__a,0);
} 
return G__15550__delegate.call(this,k,x,y,more);};
G__15550.cljs$lang$maxFixedArity = 3;
G__15550.cljs$lang$applyTo = (function (arglist__15552){
var k = cljs.core.first(arglist__15552);
arglist__15552 = cljs.core.next(arglist__15552);
var x = cljs.core.first(arglist__15552);
arglist__15552 = cljs.core.next(arglist__15552);
var y = cljs.core.first(arglist__15552);
var more = cljs.core.rest(arglist__15552);
return G__15550__delegate(k,x,y,more);
});
G__15550.cljs$core$IFn$_invoke$arity$variadic = G__15550__delegate;
return G__15550;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__15553 = null;
if (arguments.length > 3) {
var G__15554__i = 0, G__15554__a = new Array(arguments.length -  3);
while (G__15554__i < G__15554__a.length) {G__15554__a[G__15554__i] = arguments[G__15554__i + 3]; ++G__15554__i;}
G__15553 = new cljs.core.IndexedSeq(G__15554__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__15553);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__15571 = null;
var G__15571__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15571__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__15566 = result;
var G__15567 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15566,G__15567) : rf.call(null,G__15566,G__15567));
})());
})());
var G__15568 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15568) : rf.call(null,G__15568));
});
var G__15571__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__15569 = result;
var G__15570 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15569,G__15570) : rf.call(null,G__15569,G__15570));
} else {
return result;
}
});
G__15571 = function(result,input){
switch(arguments.length){
case 0:
return G__15571__0.call(this);
case 1:
return G__15571__1.call(this,result);
case 2:
return G__15571__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15571.cljs$core$IFn$_invoke$arity$0 = G__15571__0;
G__15571.cljs$core$IFn$_invoke$arity$1 = G__15571__1;
G__15571.cljs$core$IFn$_invoke$arity$2 = G__15571__2;
return G__15571;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__15584 = null;
var G__15584__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15584__1 = (function (result){
var G__15579 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15579) : rf.call(null,G__15579));
});
var G__15584__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__15580 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15580) : pred.call(null,G__15580));
})())){
var G__15581 = result;
var G__15582 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15581,G__15582) : rf.call(null,G__15581,G__15582));
} else {
return cljs.core.reduced(result);
}
});
G__15584 = function(result,input){
switch(arguments.length){
case 0:
return G__15584__0.call(this);
case 1:
return G__15584__1.call(this,result);
case 2:
return G__15584__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15584.cljs$core$IFn$_invoke$arity$0 = G__15584__0;
G__15584.cljs$core$IFn$_invoke$arity$1 = G__15584__1;
G__15584.cljs$core$IFn$_invoke$arity$2 = G__15584__2;
return G__15584;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__15583 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15583) : pred.call(null,G__15583));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__15589 = (function (){var G__15591 = cljs.core._entry_key(sc,e);
var G__15592 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15591,G__15592) : comp.call(null,G__15591,G__15592));
})();
var G__15590 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__15589,G__15590) : test.call(null,G__15589,G__15590));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15596 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15596,(0),null);
var s = vec__15596;
if(cljs.core.truth_((function (){var G__15597 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15597) : include.call(null,G__15597));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15598 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15598,(0),null);
var s = vec__15598;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15602 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15602,(0),null);
var s = vec__15602;
if(cljs.core.truth_((function (){var G__15603 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15603) : include.call(null,G__15603));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15604 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15604,(0),null);
var s = vec__15604;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__15605 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__15605) : Math.ceil.call(null,G__15605));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4185__auto__ = self__.__hash;
if(!((h__4185__auto__ == null))){
return h__4185__auto__;
} else {
var h__4185__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4185__auto____$1;

return h__4185__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__15606 = ret;
var G__15607 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15606,G__15607) : f.call(null,G__15606,G__15607));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__15608 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15608) : cljs.core.deref.call(null,G__15608));
} else {
var G__15609 = (i + self__.step);
var G__15610 = ret__$1;
i = G__15609;
ret = G__15610;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__15628 = null;
var G__15628__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15628__1 = (function (result){
var G__15625 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15625) : rf.call(null,G__15625));
});
var G__15628__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__15626 = result;
var G__15627 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15626,G__15627) : rf.call(null,G__15626,G__15627));
} else {
return result;
}
});
G__15628 = function(result,input){
switch(arguments.length){
case 0:
return G__15628__0.call(this);
case 1:
return G__15628__1.call(this,result);
case 2:
return G__15628__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15628.cljs$core$IFn$_invoke$arity$0 = G__15628__0;
G__15628.cljs$core$IFn$_invoke$arity$1 = G__15628__1;
G__15628.cljs$core$IFn$_invoke$arity$2 = G__15628__2;
return G__15628;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
return ((function (a,pa){
return (function() {
var G__15650 = null;
var G__15650__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15650__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__15641 = result;
var G__15642 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15641,G__15642) : rf.call(null,G__15641,G__15642));
})());
})());
var G__15643 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15643) : rf.call(null,G__15643));
});
var G__15650__2 = (function (result,input){
var pval = (function (){var G__15644 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15644) : cljs.core.deref.call(null,G__15644));
})();
var val = (function (){var G__15645 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15645) : f.call(null,G__15645));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$15)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__15646 = result;
var G__15647 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15646,G__15647) : rf.call(null,G__15646,G__15647));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__15650 = function(result,input){
switch(arguments.length){
case 0:
return G__15650__0.call(this);
case 1:
return G__15650__1.call(this,result);
case 2:
return G__15650__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15650.cljs$core$IFn$_invoke$arity$0 = G__15650__0;
G__15650.cljs$core$IFn$_invoke$arity$1 = G__15650__1;
G__15650.cljs$core$IFn$_invoke$arity$2 = G__15650__2;
return G__15650;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__15648 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15648) : f.call(null,G__15648));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__15629_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__15649 = p1__15629_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15649) : f.call(null,G__15649));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__15659 = init;
var G__15660 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15659,G__15660) : f.call(null,G__15659,G__15660));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__15755 = null;
var G__15755__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__15755__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15713 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15713) : f.call(null,G__15713));
})()],null));
});
var G__15755__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15714 = x;
var G__15715 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15714,G__15715) : f.call(null,G__15714,G__15715));
})()],null));
});
var G__15755__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15716 = x;
var G__15717 = y;
var G__15718 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15716,G__15717,G__15718) : f.call(null,G__15716,G__15717,G__15718));
})()],null));
});
var G__15755__4 = (function() { 
var G__15756__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__15756 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15757__i = 0, G__15757__a = new Array(arguments.length -  3);
while (G__15757__i < G__15757__a.length) {G__15757__a[G__15757__i] = arguments[G__15757__i + 3]; ++G__15757__i;}
  args = new cljs.core.IndexedSeq(G__15757__a,0);
} 
return G__15756__delegate.call(this,x,y,z,args);};
G__15756.cljs$lang$maxFixedArity = 3;
G__15756.cljs$lang$applyTo = (function (arglist__15758){
var x = cljs.core.first(arglist__15758);
arglist__15758 = cljs.core.next(arglist__15758);
var y = cljs.core.first(arglist__15758);
arglist__15758 = cljs.core.next(arglist__15758);
var z = cljs.core.first(arglist__15758);
var args = cljs.core.rest(arglist__15758);
return G__15756__delegate(x,y,z,args);
});
G__15756.cljs$core$IFn$_invoke$arity$variadic = G__15756__delegate;
return G__15756;
})()
;
G__15755 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15755__0.call(this);
case 1:
return G__15755__1.call(this,x);
case 2:
return G__15755__2.call(this,x,y);
case 3:
return G__15755__3.call(this,x,y,z);
default:
var G__15759 = null;
if (arguments.length > 3) {
var G__15760__i = 0, G__15760__a = new Array(arguments.length -  3);
while (G__15760__i < G__15760__a.length) {G__15760__a[G__15760__i] = arguments[G__15760__i + 3]; ++G__15760__i;}
G__15759 = new cljs.core.IndexedSeq(G__15760__a,0);
}
return G__15755__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15759);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15755.cljs$lang$maxFixedArity = 3;
G__15755.cljs$lang$applyTo = G__15755__4.cljs$lang$applyTo;
G__15755.cljs$core$IFn$_invoke$arity$0 = G__15755__0;
G__15755.cljs$core$IFn$_invoke$arity$1 = G__15755__1;
G__15755.cljs$core$IFn$_invoke$arity$2 = G__15755__2;
G__15755.cljs$core$IFn$_invoke$arity$3 = G__15755__3;
G__15755.cljs$core$IFn$_invoke$arity$variadic = G__15755__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15755;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__15761 = null;
var G__15761__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__15761__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15719 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15719) : f.call(null,G__15719));
})(),(function (){var G__15720 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15720) : g.call(null,G__15720));
})()],null));
});
var G__15761__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15721 = x;
var G__15722 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15721,G__15722) : f.call(null,G__15721,G__15722));
})(),(function (){var G__15723 = x;
var G__15724 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15723,G__15724) : g.call(null,G__15723,G__15724));
})()],null));
});
var G__15761__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15725 = x;
var G__15726 = y;
var G__15727 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15725,G__15726,G__15727) : f.call(null,G__15725,G__15726,G__15727));
})(),(function (){var G__15728 = x;
var G__15729 = y;
var G__15730 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15728,G__15729,G__15730) : g.call(null,G__15728,G__15729,G__15730));
})()],null));
});
var G__15761__4 = (function() { 
var G__15762__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__15762 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15763__i = 0, G__15763__a = new Array(arguments.length -  3);
while (G__15763__i < G__15763__a.length) {G__15763__a[G__15763__i] = arguments[G__15763__i + 3]; ++G__15763__i;}
  args = new cljs.core.IndexedSeq(G__15763__a,0);
} 
return G__15762__delegate.call(this,x,y,z,args);};
G__15762.cljs$lang$maxFixedArity = 3;
G__15762.cljs$lang$applyTo = (function (arglist__15764){
var x = cljs.core.first(arglist__15764);
arglist__15764 = cljs.core.next(arglist__15764);
var y = cljs.core.first(arglist__15764);
arglist__15764 = cljs.core.next(arglist__15764);
var z = cljs.core.first(arglist__15764);
var args = cljs.core.rest(arglist__15764);
return G__15762__delegate(x,y,z,args);
});
G__15762.cljs$core$IFn$_invoke$arity$variadic = G__15762__delegate;
return G__15762;
})()
;
G__15761 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15761__0.call(this);
case 1:
return G__15761__1.call(this,x);
case 2:
return G__15761__2.call(this,x,y);
case 3:
return G__15761__3.call(this,x,y,z);
default:
var G__15765 = null;
if (arguments.length > 3) {
var G__15766__i = 0, G__15766__a = new Array(arguments.length -  3);
while (G__15766__i < G__15766__a.length) {G__15766__a[G__15766__i] = arguments[G__15766__i + 3]; ++G__15766__i;}
G__15765 = new cljs.core.IndexedSeq(G__15766__a,0);
}
return G__15761__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15765);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15761.cljs$lang$maxFixedArity = 3;
G__15761.cljs$lang$applyTo = G__15761__4.cljs$lang$applyTo;
G__15761.cljs$core$IFn$_invoke$arity$0 = G__15761__0;
G__15761.cljs$core$IFn$_invoke$arity$1 = G__15761__1;
G__15761.cljs$core$IFn$_invoke$arity$2 = G__15761__2;
G__15761.cljs$core$IFn$_invoke$arity$3 = G__15761__3;
G__15761.cljs$core$IFn$_invoke$arity$variadic = G__15761__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15761;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__15767 = null;
var G__15767__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__15767__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15731 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15731) : f.call(null,G__15731));
})(),(function (){var G__15732 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15732) : g.call(null,G__15732));
})(),(function (){var G__15733 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15733) : h.call(null,G__15733));
})()],null));
});
var G__15767__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15734 = x;
var G__15735 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15734,G__15735) : f.call(null,G__15734,G__15735));
})(),(function (){var G__15736 = x;
var G__15737 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15736,G__15737) : g.call(null,G__15736,G__15737));
})(),(function (){var G__15738 = x;
var G__15739 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15738,G__15739) : h.call(null,G__15738,G__15739));
})()],null));
});
var G__15767__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15740 = x;
var G__15741 = y;
var G__15742 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15740,G__15741,G__15742) : f.call(null,G__15740,G__15741,G__15742));
})(),(function (){var G__15743 = x;
var G__15744 = y;
var G__15745 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15743,G__15744,G__15745) : g.call(null,G__15743,G__15744,G__15745));
})(),(function (){var G__15746 = x;
var G__15747 = y;
var G__15748 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15746,G__15747,G__15748) : h.call(null,G__15746,G__15747,G__15748));
})()],null));
});
var G__15767__4 = (function() { 
var G__15768__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__15768 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15769__i = 0, G__15769__a = new Array(arguments.length -  3);
while (G__15769__i < G__15769__a.length) {G__15769__a[G__15769__i] = arguments[G__15769__i + 3]; ++G__15769__i;}
  args = new cljs.core.IndexedSeq(G__15769__a,0);
} 
return G__15768__delegate.call(this,x,y,z,args);};
G__15768.cljs$lang$maxFixedArity = 3;
G__15768.cljs$lang$applyTo = (function (arglist__15770){
var x = cljs.core.first(arglist__15770);
arglist__15770 = cljs.core.next(arglist__15770);
var y = cljs.core.first(arglist__15770);
arglist__15770 = cljs.core.next(arglist__15770);
var z = cljs.core.first(arglist__15770);
var args = cljs.core.rest(arglist__15770);
return G__15768__delegate(x,y,z,args);
});
G__15768.cljs$core$IFn$_invoke$arity$variadic = G__15768__delegate;
return G__15768;
})()
;
G__15767 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15767__0.call(this);
case 1:
return G__15767__1.call(this,x);
case 2:
return G__15767__2.call(this,x,y);
case 3:
return G__15767__3.call(this,x,y,z);
default:
var G__15771 = null;
if (arguments.length > 3) {
var G__15772__i = 0, G__15772__a = new Array(arguments.length -  3);
while (G__15772__i < G__15772__a.length) {G__15772__a[G__15772__i] = arguments[G__15772__i + 3]; ++G__15772__i;}
G__15771 = new cljs.core.IndexedSeq(G__15772__a,0);
}
return G__15767__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15771);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15767.cljs$lang$maxFixedArity = 3;
G__15767.cljs$lang$applyTo = G__15767__4.cljs$lang$applyTo;
G__15767.cljs$core$IFn$_invoke$arity$0 = G__15767__0;
G__15767.cljs$core$IFn$_invoke$arity$1 = G__15767__1;
G__15767.cljs$core$IFn$_invoke$arity$2 = G__15767__2;
G__15767.cljs$core$IFn$_invoke$arity$3 = G__15767__3;
G__15767.cljs$core$IFn$_invoke$arity$variadic = G__15767__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15767;
})()
});
var juxt__4 = (function() { 
var G__15773__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__15774 = null;
var G__15774__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15661_SHARP_,p2__15662_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15661_SHARP_,(function (){return (p2__15662_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__15662_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__15662_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15774__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15663_SHARP_,p2__15664_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15663_SHARP_,(function (){var G__15749 = x;
return (p2__15664_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__15664_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15749) : p2__15664_SHARP_.call(null,G__15749));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15774__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15665_SHARP_,p2__15666_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15665_SHARP_,(function (){var G__15750 = x;
var G__15751 = y;
return (p2__15666_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__15666_SHARP_.cljs$core$IFn$_invoke$arity$2(G__15750,G__15751) : p2__15666_SHARP_.call(null,G__15750,G__15751));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15774__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15667_SHARP_,p2__15668_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15667_SHARP_,(function (){var G__15752 = x;
var G__15753 = y;
var G__15754 = z;
return (p2__15668_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__15668_SHARP_.cljs$core$IFn$_invoke$arity$3(G__15752,G__15753,G__15754) : p2__15668_SHARP_.call(null,G__15752,G__15753,G__15754));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15774__4 = (function() { 
var G__15775__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15669_SHARP_,p2__15670_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15669_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__15670_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__15775 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15776__i = 0, G__15776__a = new Array(arguments.length -  3);
while (G__15776__i < G__15776__a.length) {G__15776__a[G__15776__i] = arguments[G__15776__i + 3]; ++G__15776__i;}
  args = new cljs.core.IndexedSeq(G__15776__a,0);
} 
return G__15775__delegate.call(this,x,y,z,args);};
G__15775.cljs$lang$maxFixedArity = 3;
G__15775.cljs$lang$applyTo = (function (arglist__15777){
var x = cljs.core.first(arglist__15777);
arglist__15777 = cljs.core.next(arglist__15777);
var y = cljs.core.first(arglist__15777);
arglist__15777 = cljs.core.next(arglist__15777);
var z = cljs.core.first(arglist__15777);
var args = cljs.core.rest(arglist__15777);
return G__15775__delegate(x,y,z,args);
});
G__15775.cljs$core$IFn$_invoke$arity$variadic = G__15775__delegate;
return G__15775;
})()
;
G__15774 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15774__0.call(this);
case 1:
return G__15774__1.call(this,x);
case 2:
return G__15774__2.call(this,x,y);
case 3:
return G__15774__3.call(this,x,y,z);
default:
var G__15778 = null;
if (arguments.length > 3) {
var G__15779__i = 0, G__15779__a = new Array(arguments.length -  3);
while (G__15779__i < G__15779__a.length) {G__15779__a[G__15779__i] = arguments[G__15779__i + 3]; ++G__15779__i;}
G__15778 = new cljs.core.IndexedSeq(G__15779__a,0);
}
return G__15774__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15778);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15774.cljs$lang$maxFixedArity = 3;
G__15774.cljs$lang$applyTo = G__15774__4.cljs$lang$applyTo;
G__15774.cljs$core$IFn$_invoke$arity$0 = G__15774__0;
G__15774.cljs$core$IFn$_invoke$arity$1 = G__15774__1;
G__15774.cljs$core$IFn$_invoke$arity$2 = G__15774__2;
G__15774.cljs$core$IFn$_invoke$arity$3 = G__15774__3;
G__15774.cljs$core$IFn$_invoke$arity$variadic = G__15774__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15774;
})()
;})(fs__$1))
};
var G__15773 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__15780__i = 0, G__15780__a = new Array(arguments.length -  3);
while (G__15780__i < G__15780__a.length) {G__15780__a[G__15780__i] = arguments[G__15780__i + 3]; ++G__15780__i;}
  fs = new cljs.core.IndexedSeq(G__15780__a,0);
} 
return G__15773__delegate.call(this,f,g,h,fs);};
G__15773.cljs$lang$maxFixedArity = 3;
G__15773.cljs$lang$applyTo = (function (arglist__15781){
var f = cljs.core.first(arglist__15781);
arglist__15781 = cljs.core.next(arglist__15781);
var g = cljs.core.first(arglist__15781);
arglist__15781 = cljs.core.next(arglist__15781);
var h = cljs.core.first(arglist__15781);
var fs = cljs.core.rest(arglist__15781);
return G__15773__delegate(f,g,h,fs);
});
G__15773.cljs$core$IFn$_invoke$arity$variadic = G__15773__delegate;
return G__15773;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__15782 = null;
if (arguments.length > 3) {
var G__15783__i = 0, G__15783__a = new Array(arguments.length -  3);
while (G__15783__i < G__15783__a.length) {G__15783__a[G__15783__i] = arguments[G__15783__i + 3]; ++G__15783__i;}
G__15782 = new cljs.core.IndexedSeq(G__15783__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__15782);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__15784 = cljs.core.next(coll);
coll = G__15784;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__15785 = (n - (1));
var G__15786 = cljs.core.next(coll);
n = G__15785;
coll = G__15786;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__15790 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15790,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15790,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15790,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_15798 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__15799_15805 = cljs.core.first(coll);
var G__15800_15806 = writer;
var G__15801_15807 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15799_15805,G__15800_15806,G__15801_15807) : print_one.call(null,G__15799_15805,G__15800_15806,G__15801_15807));
} else {
}

var coll_15808__$1 = cljs.core.next(coll);
var n_15809 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_15808__$1) && (((n_15809 == null)) || (!((n_15809 === (0)))))){
cljs.core._write(writer,sep);

var G__15802_15810 = cljs.core.first(coll_15808__$1);
var G__15803_15811 = writer;
var G__15804_15812 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15802_15810,G__15803_15811,G__15804_15812) : print_one.call(null,G__15802_15810,G__15803_15811,G__15804_15812));

var G__15813 = cljs.core.next(coll_15808__$1);
var G__15814 = (n_15809 - (1));
coll_15808__$1 = G__15813;
n_15809 = G__15814;
continue;
} else {
if((cljs.core.seq(coll_15808__$1)) && ((n_15809 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_15798;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__15819 = cljs.core.seq(ss);
var chunk__15820 = null;
var count__15821 = (0);
var i__15822 = (0);
while(true){
if((i__15822 < count__15821)){
var s = chunk__15820.cljs$core$IIndexed$_nth$arity$2(null,i__15822);
cljs.core._write(writer,s);

var G__15823 = seq__15819;
var G__15824 = chunk__15820;
var G__15825 = count__15821;
var G__15826 = (i__15822 + (1));
seq__15819 = G__15823;
chunk__15820 = G__15824;
count__15821 = G__15825;
i__15822 = G__15826;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15819);
if(temp__4126__auto__){
var seq__15819__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15819__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__15819__$1);
var G__15827 = cljs.core.chunk_rest(seq__15819__$1);
var G__15828 = c__4551__auto__;
var G__15829 = cljs.core.count(c__4551__auto__);
var G__15830 = (0);
seq__15819 = G__15827;
chunk__15820 = G__15828;
count__15821 = G__15829;
i__15822 = G__15830;
continue;
} else {
var s = cljs.core.first(seq__15819__$1);
cljs.core._write(writer,s);

var G__15831 = cljs.core.next(seq__15819__$1);
var G__15832 = null;
var G__15833 = (0);
var G__15834 = (0);
seq__15819 = G__15831;
chunk__15820 = G__15832;
count__15821 = G__15833;
i__15822 = G__15834;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__15835__i = 0, G__15835__a = new Array(arguments.length -  1);
while (G__15835__i < G__15835__a.length) {G__15835__a[G__15835__i] = arguments[G__15835__i + 1]; ++G__15835__i;}
  ss = new cljs.core.IndexedSeq(G__15835__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__15836){
var writer = cljs.core.first(arglist__15836);
var ss = cljs.core.rest(arglist__15836);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj15838 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj15838;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__15841 = "[\\\\\"\b\f\n\r\t]";
var G__15842 = "g";
return RegExp(G__15841,G__15842);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3752__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__3752__auto__)){
var and__3752__auto____$1 = (function (){var G__15856 = obj;
if(G__15856){
var bit__4445__auto__ = (G__15856.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4445__auto__) || (G__15856.cljs$core$IMeta$)){
return true;
} else {
if((!G__15856.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15856);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15856);
}
})();
if(and__3752__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__15857 = obj;
if(G__15857){
var bit__4438__auto__ = (G__15857.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4438__auto__) || (G__15857.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__15858 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__15859 = pr_writer;
var G__15860 = writer;
var G__15861 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__15858,G__15859,G__15860,G__15861) : cljs.core.print_map.call(null,G__15858,G__15859,G__15860,G__15861));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__15862 = obj;
return goog.isString(G__15862);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__15864 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__15864;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__15863 = obj;
if(G__15863){
var bit__4445__auto__ = (G__15863.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4445__auto__) || (G__15863.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__15863.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__15863);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__15863);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__15869 = cljs.core.seq(cljs.core.next(objs));
var chunk__15870 = null;
var count__15871 = (0);
var i__15872 = (0);
while(true){
if((i__15872 < count__15871)){
var obj = chunk__15870.cljs$core$IIndexed$_nth$arity$2(null,i__15872);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__15873 = seq__15869;
var G__15874 = chunk__15870;
var G__15875 = count__15871;
var G__15876 = (i__15872 + (1));
seq__15869 = G__15873;
chunk__15870 = G__15874;
count__15871 = G__15875;
i__15872 = G__15876;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15869);
if(temp__4126__auto__){
var seq__15869__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15869__$1)){
var c__4551__auto__ = cljs.core.chunk_first(seq__15869__$1);
var G__15877 = cljs.core.chunk_rest(seq__15869__$1);
var G__15878 = c__4551__auto__;
var G__15879 = cljs.core.count(c__4551__auto__);
var G__15880 = (0);
seq__15869 = G__15877;
chunk__15870 = G__15878;
count__15871 = G__15879;
i__15872 = G__15880;
continue;
} else {
var obj = cljs.core.first(seq__15869__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__15881 = cljs.core.next(seq__15869__$1);
var G__15882 = null;
var G__15883 = (0);
var G__15884 = (0);
seq__15869 = G__15881;
chunk__15870 = G__15882;
count__15871 = G__15883;
i__15872 = G__15884;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15885__i = 0, G__15885__a = new Array(arguments.length -  0);
while (G__15885__i < G__15885__a.length) {G__15885__a[G__15885__i] = arguments[G__15885__i + 0]; ++G__15885__i;}
  objs = new cljs.core.IndexedSeq(G__15885__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__15886){
var objs = cljs.core.seq(arglist__15886);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15887__i = 0, G__15887__a = new Array(arguments.length -  0);
while (G__15887__i < G__15887__a.length) {G__15887__a[G__15887__i] = arguments[G__15887__i + 0]; ++G__15887__i;}
  objs = new cljs.core.IndexedSeq(G__15887__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__15888){
var objs = cljs.core.seq(arglist__15888);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15889__i = 0, G__15889__a = new Array(arguments.length -  0);
while (G__15889__i < G__15889__a.length) {G__15889__a[G__15889__i] = arguments[G__15889__i + 0]; ++G__15889__i;}
  objs = new cljs.core.IndexedSeq(G__15889__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__15890){
var objs = cljs.core.seq(arglist__15890);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15891__i = 0, G__15891__a = new Array(arguments.length -  0);
while (G__15891__i < G__15891__a.length) {G__15891__a[G__15891__i] = arguments[G__15891__i + 0]; ++G__15891__i;}
  objs = new cljs.core.IndexedSeq(G__15891__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__15892){
var objs = cljs.core.seq(arglist__15892);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15893__i = 0, G__15893__a = new Array(arguments.length -  0);
while (G__15893__i < G__15893__a.length) {G__15893__a[G__15893__i] = arguments[G__15893__i + 0]; ++G__15893__i;}
  objs = new cljs.core.IndexedSeq(G__15893__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__15894){
var objs = cljs.core.seq(arglist__15894);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15895__i = 0, G__15895__a = new Array(arguments.length -  0);
while (G__15895__i < G__15895__a.length) {G__15895__a[G__15895__i] = arguments[G__15895__i + 0]; ++G__15895__i;}
  objs = new cljs.core.IndexedSeq(G__15895__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__15896){
var objs = cljs.core.seq(arglist__15896);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15897__i = 0, G__15897__a = new Array(arguments.length -  0);
while (G__15897__i < G__15897__a.length) {G__15897__a[G__15897__i] = arguments[G__15897__i + 0]; ++G__15897__i;}
  objs = new cljs.core.IndexedSeq(G__15897__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__15898){
var objs = cljs.core.seq(arglist__15898);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15899__i = 0, G__15899__a = new Array(arguments.length -  0);
while (G__15899__i < G__15899__a.length) {G__15899__a[G__15899__i] = arguments[G__15899__i + 0]; ++G__15899__i;}
  objs = new cljs.core.IndexedSeq(G__15899__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__15900){
var objs = cljs.core.seq(arglist__15900);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__15907_15913 = cljs.core.key(e);
var G__15908_15914 = w;
var G__15909_15915 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15907_15913,G__15908_15914,G__15909_15915) : print_one.call(null,G__15907_15913,G__15908_15914,G__15909_15915));

cljs.core._write(w," ");

var G__15910 = cljs.core.val(e);
var G__15911 = w;
var G__15912 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15910,G__15911,G__15912) : print_one.call(null,G__15910,G__15911,G__15912));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__15916__i = 0, G__15916__a = new Array(arguments.length -  2);
while (G__15916__i < G__15916__a.length) {G__15916__a[G__15916__i] = arguments[G__15916__i + 2]; ++G__15916__i;}
  args = new cljs.core.IndexedSeq(G__15916__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__15917){
var iref = cljs.core.first(arglist__15917);
arglist__15917 = cljs.core.next(arglist__15917);
var f = cljs.core.first(arglist__15917);
var args = cljs.core.rest(arglist__15917);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__15920 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15920) : cljs.core.atom.call(null,G__15920));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__15922 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15922) : cljs.core.deref.call(null,G__15922));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__15923_SHARP_,p2__15924_SHARP_){
var ret = (function (){var G__15927 = p1__15923_SHARP_;
var G__15928 = p2__15924_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15927,G__15928) : rf.call(null,G__15927,G__15928));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__15931 = null;
var G__15931__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15931__1 = (function (result){
var G__15930 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15930) : rf.call(null,G__15930));
});
var G__15931__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__15931 = function(result,input){
switch(arguments.length){
case 0:
return G__15931__0.call(this);
case 1:
return G__15931__1.call(this,result);
case 2:
return G__15931__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15931.cljs$core$IFn$_invoke$arity$0 = G__15931__0;
G__15931.cljs$core$IFn$_invoke$arity$1 = G__15931__1;
G__15931.cljs$core$IFn$_invoke$arity$2 = G__15931__2;
return G__15931;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
return ((function (pa){
return (function() {
var G__15940 = null;
var G__15940__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15940__1 = (function (result){
var G__15936 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15936) : rf.call(null,G__15936));
});
var G__15940__2 = (function (result,input){
var prior = (function (){var G__15937 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15937) : cljs.core.deref.call(null,G__15937));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__15938 = result;
var G__15939 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15938,G__15939) : rf.call(null,G__15938,G__15939));
}
});
G__15940 = function(result,input){
switch(arguments.length){
case 0:
return G__15940__0.call(this);
case 1:
return G__15940__1.call(this,result);
case 2:
return G__15940__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15940.cljs$core$IFn$_invoke$arity$0 = G__15940__0;
G__15940.cljs$core$IFn$_invoke$arity$1 = G__15940__1;
G__15940.cljs$core$IFn$_invoke$arity$2 = G__15940__2;
return G__15940;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4742__auto__ = this;
return cljs.core.es6_iterator(this__4742__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15942_SHARP_,p2__15941_SHARP_){
var G__15944 = p2__15941_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__15944) : proc.call(null,G__15944));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj15946 = {};
return obj15946;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3752__auto__ = x;
if(and__3752__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3752__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4408__auto__ = (((x == null))?null:x);
return (function (){var or__3764__auto__ = (cljs.core._clj__GT_js[(function (){var G__15950 = x__4408__auto__;
return goog.typeOf(G__15950);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3752__auto__ = x;
if(and__3752__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3752__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4408__auto__ = (((x == null))?null:x);
return (function (){var or__3764__auto__ = (cljs.core._key__GT_js[(function (){var G__15954 = x__4408__auto__;
return goog.typeOf(G__15954);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__15957 = k;
if(G__15957){
var bit__4445__auto__ = null;
if(cljs.core.truth_((function (){var or__3764__auto__ = bit__4445__auto__;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return G__15957.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__15957.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15957);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15957);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__15958 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__15958) : cljs.core.clj__GT_js.call(null,G__15958));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__15974 = x;
if(G__15974){
var bit__4445__auto__ = null;
if(cljs.core.truth_((function (){var or__3764__auto__ = bit__4445__auto__;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return G__15974.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__15974.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15974);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15974);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj15976 = {};
return obj15976;
})();
var seq__15977_15987 = cljs.core.seq(x);
var chunk__15978_15988 = null;
var count__15979_15989 = (0);
var i__15980_15990 = (0);
while(true){
if((i__15980_15990 < count__15979_15989)){
var vec__15981_15991 = chunk__15978_15988.cljs$core$IIndexed$_nth$arity$2(null,i__15980_15990);
var k_15992 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15981_15991,(0),null);
var v_15993 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15981_15991,(1),null);
(m[cljs.core.key__GT_js(k_15992)] = clj__GT_js(v_15993));

var G__15994 = seq__15977_15987;
var G__15995 = chunk__15978_15988;
var G__15996 = count__15979_15989;
var G__15997 = (i__15980_15990 + (1));
seq__15977_15987 = G__15994;
chunk__15978_15988 = G__15995;
count__15979_15989 = G__15996;
i__15980_15990 = G__15997;
continue;
} else {
var temp__4126__auto___15998 = cljs.core.seq(seq__15977_15987);
if(temp__4126__auto___15998){
var seq__15977_15999__$1 = temp__4126__auto___15998;
if(cljs.core.chunked_seq_QMARK_(seq__15977_15999__$1)){
var c__4551__auto___16000 = cljs.core.chunk_first(seq__15977_15999__$1);
var G__16001 = cljs.core.chunk_rest(seq__15977_15999__$1);
var G__16002 = c__4551__auto___16000;
var G__16003 = cljs.core.count(c__4551__auto___16000);
var G__16004 = (0);
seq__15977_15987 = G__16001;
chunk__15978_15988 = G__16002;
count__15979_15989 = G__16003;
i__15980_15990 = G__16004;
continue;
} else {
var vec__15982_16005 = cljs.core.first(seq__15977_15999__$1);
var k_16006 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15982_16005,(0),null);
var v_16007 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15982_16005,(1),null);
(m[cljs.core.key__GT_js(k_16006)] = clj__GT_js(v_16007));

var G__16008 = cljs.core.next(seq__15977_15999__$1);
var G__16009 = null;
var G__16010 = (0);
var G__16011 = (0);
seq__15977_15987 = G__16008;
chunk__15978_15988 = G__16009;
count__15979_15989 = G__16010;
i__15980_15990 = G__16011;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__15983_16012 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__15984_16013 = null;
var count__15985_16014 = (0);
var i__15986_16015 = (0);
while(true){
if((i__15986_16015 < count__15985_16014)){
var x_16016__$1 = chunk__15984_16013.cljs$core$IIndexed$_nth$arity$2(null,i__15986_16015);
arr.push(x_16016__$1);

var G__16017 = seq__15983_16012;
var G__16018 = chunk__15984_16013;
var G__16019 = count__15985_16014;
var G__16020 = (i__15986_16015 + (1));
seq__15983_16012 = G__16017;
chunk__15984_16013 = G__16018;
count__15985_16014 = G__16019;
i__15986_16015 = G__16020;
continue;
} else {
var temp__4126__auto___16021 = cljs.core.seq(seq__15983_16012);
if(temp__4126__auto___16021){
var seq__15983_16022__$1 = temp__4126__auto___16021;
if(cljs.core.chunked_seq_QMARK_(seq__15983_16022__$1)){
var c__4551__auto___16023 = cljs.core.chunk_first(seq__15983_16022__$1);
var G__16024 = cljs.core.chunk_rest(seq__15983_16022__$1);
var G__16025 = c__4551__auto___16023;
var G__16026 = cljs.core.count(c__4551__auto___16023);
var G__16027 = (0);
seq__15983_16012 = G__16024;
chunk__15984_16013 = G__16025;
count__15985_16014 = G__16026;
i__15986_16015 = G__16027;
continue;
} else {
var x_16028__$1 = cljs.core.first(seq__15983_16022__$1);
arr.push(x_16028__$1);

var G__16029 = cljs.core.next(seq__15983_16022__$1);
var G__16030 = null;
var G__16031 = (0);
var G__16032 = (0);
seq__15983_16012 = G__16029;
chunk__15984_16013 = G__16030;
count__15985_16014 = G__16031;
i__15986_16015 = G__16032;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj16034 = {};
return obj16034;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3752__auto__ = x;
if(and__3752__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3752__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4408__auto__ = (((x == null))?null:x);
return (function (){var or__3764__auto__ = (cljs.core._js__GT_clj[(function (){var G__16038 = x__4408__auto__;
return goog.typeOf(G__16038);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$16,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__16095__delegate = function (x,opts){
var map__16068 = opts;
var map__16068__$1 = ((cljs.core.seq_QMARK_(map__16068))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__16068):map__16068);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__16068__$1,cljs.core.constant$keyword$16);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__16068,map__16068__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__16084 = x__$1;
if(G__16084){
var bit__4445__auto__ = null;
if(cljs.core.truth_((function (){var or__3764__auto__ = bit__4445__auto__;
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return G__16084.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__16084.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__16084);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__16084);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4520__auto__ = ((function (map__16068,map__16068__$1,keywordize_keys,keyfn){
return (function iter__16085(s__16086){
return (new cljs.core.LazySeq(null,((function (map__16068,map__16068__$1,keywordize_keys,keyfn){
return (function (){
var s__16086__$1 = s__16086;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__16086__$1);
if(temp__4126__auto__){
var s__16086__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__16086__$2)){
var c__4518__auto__ = cljs.core.chunk_first(s__16086__$2);
var size__4519__auto__ = cljs.core.count(c__4518__auto__);
var b__16088 = cljs.core.chunk_buffer(size__4519__auto__);
if((function (){var i__16087 = (0);
while(true){
if((i__16087 < size__4519__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4518__auto__,i__16087);
cljs.core.chunk_append(b__16088,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__16093 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16093) : keyfn.call(null,G__16093));
})(),thisfn((x__$1[k]))], null));

var G__16096 = (i__16087 + (1));
i__16087 = G__16096;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__16088),iter__16085(cljs.core.chunk_rest(s__16086__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__16088),null);
}
} else {
var k = cljs.core.first(s__16086__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__16094 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16094) : keyfn.call(null,G__16094));
})(),thisfn((x__$1[k]))], null),iter__16085(cljs.core.rest(s__16086__$2)));
}
} else {
return null;
}
break;
}
});})(map__16068,map__16068__$1,keywordize_keys,keyfn))
,null,null));
});})(map__16068,map__16068__$1,keywordize_keys,keyfn))
;
return iter__4520__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__16068,map__16068__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__16095 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__16097__i = 0, G__16097__a = new Array(arguments.length -  1);
while (G__16097__i < G__16097__a.length) {G__16097__a[G__16097__i] = arguments[G__16097__i + 1]; ++G__16097__i;}
  opts = new cljs.core.IndexedSeq(G__16097__a,0);
} 
return G__16095__delegate.call(this,x,opts);};
G__16095.cljs$lang$maxFixedArity = 1;
G__16095.cljs$lang$applyTo = (function (arglist__16098){
var x = cljs.core.first(arglist__16098);
var opts = cljs.core.rest(arglist__16098);
return G__16095__delegate(x,opts);
});
G__16095.cljs$core$IFn$_invoke$arity$variadic = G__16095__delegate;
return G__16095;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__16099 = null;
if (arguments.length > 1) {
var G__16100__i = 0, G__16100__a = new Array(arguments.length -  1);
while (G__16100__i < G__16100__a.length) {G__16100__a[G__16100__i] = arguments[G__16100__i + 1]; ++G__16100__i;}
G__16099 = new cljs.core.IndexedSeq(G__16100__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__16099);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__16103 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16103) : cljs.core.atom.call(null,G__16103));
})();
return ((function (mem){
return (function() { 
var G__16105__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__16104 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16104) : cljs.core.deref.call(null,G__16104));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__16105 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__16106__i = 0, G__16106__a = new Array(arguments.length -  0);
while (G__16106__i < G__16106__a.length) {G__16106__a[G__16106__i] = arguments[G__16106__i + 0]; ++G__16106__i;}
  args = new cljs.core.IndexedSeq(G__16106__a,0);
} 
return G__16105__delegate.call(this,args);};
G__16105.cljs$lang$maxFixedArity = 0;
G__16105.cljs$lang$applyTo = (function (arglist__16107){
var args = cljs.core.seq(arglist__16107);
return G__16105__delegate(args);
});
G__16105.cljs$core$IFn$_invoke$arity$variadic = G__16105__delegate;
return G__16105;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__16109 = ret;
f = G__16109;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__16110__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__16110 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__16111__i = 0, G__16111__a = new Array(arguments.length -  1);
while (G__16111__i < G__16111__a.length) {G__16111__a[G__16111__i] = arguments[G__16111__i + 1]; ++G__16111__i;}
  args = new cljs.core.IndexedSeq(G__16111__a,0);
} 
return G__16110__delegate.call(this,f,args);};
G__16110.cljs$lang$maxFixedArity = 1;
G__16110.cljs$lang$applyTo = (function (arglist__16112){
var f = cljs.core.first(arglist__16112);
var args = cljs.core.rest(arglist__16112);
return G__16110__delegate(f,args);
});
G__16110.cljs$core$IFn$_invoke$arity$variadic = G__16110__delegate;
return G__16110;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__16113 = null;
if (arguments.length > 1) {
var G__16114__i = 0, G__16114__a = new Array(arguments.length -  1);
while (G__16114__i < G__16114__a.length) {G__16114__a[G__16114__i] = arguments[G__16114__i + 1]; ++G__16114__i;}
G__16113 = new cljs.core.IndexedSeq(G__16114__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16113);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__16117 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16117) : Math.floor.call(null,G__16117));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__16119 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16119) : f.call(null,G__16119));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$18,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$19,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__16121 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16121) : cljs.core.atom.call(null,G__16121));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__16122__i = 0, G__16122__a = new Array(arguments.length -  1);
while (G__16122__i < G__16122__a.length) {G__16122__a[G__16122__i] = arguments[G__16122__i + 1]; ++G__16122__i;}
  args = new cljs.core.IndexedSeq(G__16122__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__16123){
var f = cljs.core.first(arglist__16123);
var args = cljs.core.rest(arglist__16123);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__16188 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16188) : cljs.core.deref.call(null,G__16188));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3764__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
var and__3752__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3752__auto__){
var and__3752__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3752__auto____$1){
var and__3752__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3752__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__16213 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__16211 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__16211) : child.call(null,G__16211));
})(),(function (){var G__16212 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__16212) : parent.call(null,G__16212));
})());
var G__16214 = (i + (1));
ret = G__16213;
i = G__16214;
continue;
}
break;
}
} else {
return and__3752__auto____$2;
}
} else {
return and__3752__auto____$1;
}
} else {
return and__3752__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__16218 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16218) : cljs.core.deref.call(null,G__16218));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__16222 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16222) : cljs.core.deref.call(null,G__16222));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__16226 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16226) : cljs.core.deref.call(null,G__16226));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){

var tp = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__16235 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__16235) : targets.call(null,G__16235));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__16236 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__16236) : sources.call(null,G__16236));
})()));
});})(tp,td,ta))
;
var or__3764__auto__ = ((cljs.core.contains_QMARK_((function (){var G__16240 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__16240) : tp.call(null,G__16240));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__16241 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16241) : ta.call(null,G__16241));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__16242 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16242) : ta.call(null,G__16242));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$19,tf(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$18,tf(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__16249 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16249) : parentMap.call(null,G__16249));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__16250 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16250) : parentMap.call(null,G__16250));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__16243_SHARP_){
return cljs.core.cons(cljs.core.first(p1__16243_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__16243_SHARP_),cljs.core.second(p1__16243_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__16251 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16251) : parentMap.call(null,G__16251));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__16244_SHARP_,p2__16245_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__16244_SHARP_,p2__16245_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__16254 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16254) : cljs.core.deref.call(null,G__16254));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__16255 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16255) : cljs.core.deref.call(null,G__16255));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__16271 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16271) : cljs.core.deref.call(null,G__16271));
})().call(null,x);
var or__3764__auto__ = (cljs.core.truth_((function (){var and__3752__auto__ = xprefs;
if(cljs.core.truth_(and__3752__auto__)){
var G__16273 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__16273) : xprefs.call(null,G__16273));
} else {
return and__3752__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__16274 = cljs.core.rest(ps);
ps = G__16274;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3764__auto____$1)){
return or__3764__auto____$1;
} else {
var or__3764__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__16275 = cljs.core.rest(ps);
ps = G__16275;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3764__auto____$2)){
return or__3764__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3764__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3764__auto__)){
return or__3764__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__16289){
var vec__16290 = p__16289;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16290,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16290,(1),null);
var e = vec__16290;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__16291 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16291) : cljs.core.deref.call(null,G__16291));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3764__auto__ = (be == null);
if(or__3764__auto__){
return or__3764__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__16292 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16292) : cljs.core.deref.call(null,G__16292));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16293 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16293) : cljs.core.deref.call(null,G__16293));
})(),(function (){var G__16294 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16294) : cljs.core.deref.call(null,G__16294));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj16296 = {};
return obj16296;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3752__auto__ = mf;
if(and__3752__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3752__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4408__auto__ = (((mf == null))?null:mf);
return (function (){var or__3764__auto__ = (cljs.core._reset[(function (){var G__16300 = x__4408__auto__;
return goog.typeOf(G__16300);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._reset["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3752__auto__ = mf;
if(and__3752__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3752__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4408__auto__ = (((mf == null))?null:mf);
return (function (){var or__3764__auto__ = (cljs.core._add_method[(function (){var G__16304 = x__4408__auto__;
return goog.typeOf(G__16304);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._add_method["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3752__auto__ = mf;
if(and__3752__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3752__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4408__auto__ = (((mf == null))?null:mf);
return (function (){var or__3764__auto__ = (cljs.core._remove_method[(function (){var G__16308 = x__4408__auto__;
return goog.typeOf(G__16308);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3752__auto__ = mf;
if(and__3752__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3752__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4408__auto__ = (((mf == null))?null:mf);
return (function (){var or__3764__auto__ = (cljs.core._prefer_method[(function (){var G__16312 = x__4408__auto__;
return goog.typeOf(G__16312);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3752__auto__ = mf;
if(and__3752__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3752__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4408__auto__ = (((mf == null))?null:mf);
return (function (){var or__3764__auto__ = (cljs.core._get_method[(function (){var G__16316 = x__4408__auto__;
return goog.typeOf(G__16316);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._get_method["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3752__auto__ = mf;
if(and__3752__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3752__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4408__auto__ = (((mf == null))?null:mf);
return (function (){var or__3764__auto__ = (cljs.core._methods[(function (){var G__16320 = x__4408__auto__;
return goog.typeOf(G__16320);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._methods["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3752__auto__ = mf;
if(and__3752__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3752__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4408__auto__ = (((mf == null))?null:mf);
return (function (){var or__3764__auto__ = (cljs.core._prefers[(function (){var G__16324 = x__4408__auto__;
return goog.typeOf(G__16324);
})()]);
if(or__3764__auto__){
return or__3764__auto__;
} else {
var or__3764__auto____$1 = (cljs.core._prefers["_"]);
if(or__3764__auto____$1){
return or__3764__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__16326 = this$__$1;
return goog.getUid(G__16326);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16327 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16327) : cljs.core.deref.call(null,G__16327));
})(),(function (){var G__16328 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16328) : cljs.core.deref.call(null,G__16328));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__16329 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16329) : cljs.core.deref.call(null,G__16329));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__16330 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16330) : cljs.core.deref.call(null,G__16330));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16331 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16331) : cljs.core.deref.call(null,G__16331));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16332 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16332) : cljs.core.deref.call(null,G__16332));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__17173 = null;
var G__17173__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__17173__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16333 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16333) : self__.dispatch_fn.call(null,G__16333));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16334 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16334) : target_fn.call(null,G__16334));
});
var G__17173__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16335 = a;
var G__16336 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16335,G__16336) : self__.dispatch_fn.call(null,G__16335,G__16336));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16337 = a;
var G__16338 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16337,G__16338) : target_fn.call(null,G__16337,G__16338));
});
var G__17173__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16339 = a;
var G__16340 = b;
var G__16341 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16339,G__16340,G__16341) : self__.dispatch_fn.call(null,G__16339,G__16340,G__16341));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16342 = a;
var G__16343 = b;
var G__16344 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16342,G__16343,G__16344) : target_fn.call(null,G__16342,G__16343,G__16344));
});
var G__17173__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16345 = a;
var G__16346 = b;
var G__16347 = c;
var G__16348 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16345,G__16346,G__16347,G__16348) : self__.dispatch_fn.call(null,G__16345,G__16346,G__16347,G__16348));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16349 = a;
var G__16350 = b;
var G__16351 = c;
var G__16352 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16349,G__16350,G__16351,G__16352) : target_fn.call(null,G__16349,G__16350,G__16351,G__16352));
});
var G__17173__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16353 = a;
var G__16354 = b;
var G__16355 = c;
var G__16356 = d;
var G__16357 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16353,G__16354,G__16355,G__16356,G__16357) : self__.dispatch_fn.call(null,G__16353,G__16354,G__16355,G__16356,G__16357));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16358 = a;
var G__16359 = b;
var G__16360 = c;
var G__16361 = d;
var G__16362 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16358,G__16359,G__16360,G__16361,G__16362) : target_fn.call(null,G__16358,G__16359,G__16360,G__16361,G__16362));
});
var G__17173__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16363 = a;
var G__16364 = b;
var G__16365 = c;
var G__16366 = d;
var G__16367 = e;
var G__16368 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16363,G__16364,G__16365,G__16366,G__16367,G__16368) : self__.dispatch_fn.call(null,G__16363,G__16364,G__16365,G__16366,G__16367,G__16368));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16369 = a;
var G__16370 = b;
var G__16371 = c;
var G__16372 = d;
var G__16373 = e;
var G__16374 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16369,G__16370,G__16371,G__16372,G__16373,G__16374) : target_fn.call(null,G__16369,G__16370,G__16371,G__16372,G__16373,G__16374));
});
var G__17173__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16375 = a;
var G__16376 = b;
var G__16377 = c;
var G__16378 = d;
var G__16379 = e;
var G__16380 = f;
var G__16381 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16375,G__16376,G__16377,G__16378,G__16379,G__16380,G__16381) : self__.dispatch_fn.call(null,G__16375,G__16376,G__16377,G__16378,G__16379,G__16380,G__16381));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16382 = a;
var G__16383 = b;
var G__16384 = c;
var G__16385 = d;
var G__16386 = e;
var G__16387 = f;
var G__16388 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16382,G__16383,G__16384,G__16385,G__16386,G__16387,G__16388) : target_fn.call(null,G__16382,G__16383,G__16384,G__16385,G__16386,G__16387,G__16388));
});
var G__17173__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16389 = a;
var G__16390 = b;
var G__16391 = c;
var G__16392 = d;
var G__16393 = e;
var G__16394 = f;
var G__16395 = g;
var G__16396 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16389,G__16390,G__16391,G__16392,G__16393,G__16394,G__16395,G__16396) : self__.dispatch_fn.call(null,G__16389,G__16390,G__16391,G__16392,G__16393,G__16394,G__16395,G__16396));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16397 = a;
var G__16398 = b;
var G__16399 = c;
var G__16400 = d;
var G__16401 = e;
var G__16402 = f;
var G__16403 = g;
var G__16404 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16397,G__16398,G__16399,G__16400,G__16401,G__16402,G__16403,G__16404) : target_fn.call(null,G__16397,G__16398,G__16399,G__16400,G__16401,G__16402,G__16403,G__16404));
});
var G__17173__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16405 = a;
var G__16406 = b;
var G__16407 = c;
var G__16408 = d;
var G__16409 = e;
var G__16410 = f;
var G__16411 = g;
var G__16412 = h;
var G__16413 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16405,G__16406,G__16407,G__16408,G__16409,G__16410,G__16411,G__16412,G__16413) : self__.dispatch_fn.call(null,G__16405,G__16406,G__16407,G__16408,G__16409,G__16410,G__16411,G__16412,G__16413));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16414 = a;
var G__16415 = b;
var G__16416 = c;
var G__16417 = d;
var G__16418 = e;
var G__16419 = f;
var G__16420 = g;
var G__16421 = h;
var G__16422 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16414,G__16415,G__16416,G__16417,G__16418,G__16419,G__16420,G__16421,G__16422) : target_fn.call(null,G__16414,G__16415,G__16416,G__16417,G__16418,G__16419,G__16420,G__16421,G__16422));
});
var G__17173__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16423 = a;
var G__16424 = b;
var G__16425 = c;
var G__16426 = d;
var G__16427 = e;
var G__16428 = f;
var G__16429 = g;
var G__16430 = h;
var G__16431 = i;
var G__16432 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16423,G__16424,G__16425,G__16426,G__16427,G__16428,G__16429,G__16430,G__16431,G__16432) : self__.dispatch_fn.call(null,G__16423,G__16424,G__16425,G__16426,G__16427,G__16428,G__16429,G__16430,G__16431,G__16432));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16433 = a;
var G__16434 = b;
var G__16435 = c;
var G__16436 = d;
var G__16437 = e;
var G__16438 = f;
var G__16439 = g;
var G__16440 = h;
var G__16441 = i;
var G__16442 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16433,G__16434,G__16435,G__16436,G__16437,G__16438,G__16439,G__16440,G__16441,G__16442) : target_fn.call(null,G__16433,G__16434,G__16435,G__16436,G__16437,G__16438,G__16439,G__16440,G__16441,G__16442));
});
var G__17173__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16443 = a;
var G__16444 = b;
var G__16445 = c;
var G__16446 = d;
var G__16447 = e;
var G__16448 = f;
var G__16449 = g;
var G__16450 = h;
var G__16451 = i;
var G__16452 = j;
var G__16453 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16443,G__16444,G__16445,G__16446,G__16447,G__16448,G__16449,G__16450,G__16451,G__16452,G__16453) : self__.dispatch_fn.call(null,G__16443,G__16444,G__16445,G__16446,G__16447,G__16448,G__16449,G__16450,G__16451,G__16452,G__16453));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16454 = a;
var G__16455 = b;
var G__16456 = c;
var G__16457 = d;
var G__16458 = e;
var G__16459 = f;
var G__16460 = g;
var G__16461 = h;
var G__16462 = i;
var G__16463 = j;
var G__16464 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16454,G__16455,G__16456,G__16457,G__16458,G__16459,G__16460,G__16461,G__16462,G__16463,G__16464) : target_fn.call(null,G__16454,G__16455,G__16456,G__16457,G__16458,G__16459,G__16460,G__16461,G__16462,G__16463,G__16464));
});
var G__17173__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16465 = a;
var G__16466 = b;
var G__16467 = c;
var G__16468 = d;
var G__16469 = e;
var G__16470 = f;
var G__16471 = g;
var G__16472 = h;
var G__16473 = i;
var G__16474 = j;
var G__16475 = k;
var G__16476 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16465,G__16466,G__16467,G__16468,G__16469,G__16470,G__16471,G__16472,G__16473,G__16474,G__16475,G__16476) : self__.dispatch_fn.call(null,G__16465,G__16466,G__16467,G__16468,G__16469,G__16470,G__16471,G__16472,G__16473,G__16474,G__16475,G__16476));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16477 = a;
var G__16478 = b;
var G__16479 = c;
var G__16480 = d;
var G__16481 = e;
var G__16482 = f;
var G__16483 = g;
var G__16484 = h;
var G__16485 = i;
var G__16486 = j;
var G__16487 = k;
var G__16488 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16477,G__16478,G__16479,G__16480,G__16481,G__16482,G__16483,G__16484,G__16485,G__16486,G__16487,G__16488) : target_fn.call(null,G__16477,G__16478,G__16479,G__16480,G__16481,G__16482,G__16483,G__16484,G__16485,G__16486,G__16487,G__16488));
});
var G__17173__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16489 = a;
var G__16490 = b;
var G__16491 = c;
var G__16492 = d;
var G__16493 = e;
var G__16494 = f;
var G__16495 = g;
var G__16496 = h;
var G__16497 = i;
var G__16498 = j;
var G__16499 = k;
var G__16500 = l;
var G__16501 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16489,G__16490,G__16491,G__16492,G__16493,G__16494,G__16495,G__16496,G__16497,G__16498,G__16499,G__16500,G__16501) : self__.dispatch_fn.call(null,G__16489,G__16490,G__16491,G__16492,G__16493,G__16494,G__16495,G__16496,G__16497,G__16498,G__16499,G__16500,G__16501));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16502 = a;
var G__16503 = b;
var G__16504 = c;
var G__16505 = d;
var G__16506 = e;
var G__16507 = f;
var G__16508 = g;
var G__16509 = h;
var G__16510 = i;
var G__16511 = j;
var G__16512 = k;
var G__16513 = l;
var G__16514 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16502,G__16503,G__16504,G__16505,G__16506,G__16507,G__16508,G__16509,G__16510,G__16511,G__16512,G__16513,G__16514) : target_fn.call(null,G__16502,G__16503,G__16504,G__16505,G__16506,G__16507,G__16508,G__16509,G__16510,G__16511,G__16512,G__16513,G__16514));
});
var G__17173__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16515 = a;
var G__16516 = b;
var G__16517 = c;
var G__16518 = d;
var G__16519 = e;
var G__16520 = f;
var G__16521 = g;
var G__16522 = h;
var G__16523 = i;
var G__16524 = j;
var G__16525 = k;
var G__16526 = l;
var G__16527 = m;
var G__16528 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16515,G__16516,G__16517,G__16518,G__16519,G__16520,G__16521,G__16522,G__16523,G__16524,G__16525,G__16526,G__16527,G__16528) : self__.dispatch_fn.call(null,G__16515,G__16516,G__16517,G__16518,G__16519,G__16520,G__16521,G__16522,G__16523,G__16524,G__16525,G__16526,G__16527,G__16528));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16529 = a;
var G__16530 = b;
var G__16531 = c;
var G__16532 = d;
var G__16533 = e;
var G__16534 = f;
var G__16535 = g;
var G__16536 = h;
var G__16537 = i;
var G__16538 = j;
var G__16539 = k;
var G__16540 = l;
var G__16541 = m;
var G__16542 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16529,G__16530,G__16531,G__16532,G__16533,G__16534,G__16535,G__16536,G__16537,G__16538,G__16539,G__16540,G__16541,G__16542) : target_fn.call(null,G__16529,G__16530,G__16531,G__16532,G__16533,G__16534,G__16535,G__16536,G__16537,G__16538,G__16539,G__16540,G__16541,G__16542));
});
var G__17173__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16543 = a;
var G__16544 = b;
var G__16545 = c;
var G__16546 = d;
var G__16547 = e;
var G__16548 = f;
var G__16549 = g;
var G__16550 = h;
var G__16551 = i;
var G__16552 = j;
var G__16553 = k;
var G__16554 = l;
var G__16555 = m;
var G__16556 = n;
var G__16557 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16543,G__16544,G__16545,G__16546,G__16547,G__16548,G__16549,G__16550,G__16551,G__16552,G__16553,G__16554,G__16555,G__16556,G__16557) : self__.dispatch_fn.call(null,G__16543,G__16544,G__16545,G__16546,G__16547,G__16548,G__16549,G__16550,G__16551,G__16552,G__16553,G__16554,G__16555,G__16556,G__16557));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16558 = a;
var G__16559 = b;
var G__16560 = c;
var G__16561 = d;
var G__16562 = e;
var G__16563 = f;
var G__16564 = g;
var G__16565 = h;
var G__16566 = i;
var G__16567 = j;
var G__16568 = k;
var G__16569 = l;
var G__16570 = m;
var G__16571 = n;
var G__16572 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16558,G__16559,G__16560,G__16561,G__16562,G__16563,G__16564,G__16565,G__16566,G__16567,G__16568,G__16569,G__16570,G__16571,G__16572) : target_fn.call(null,G__16558,G__16559,G__16560,G__16561,G__16562,G__16563,G__16564,G__16565,G__16566,G__16567,G__16568,G__16569,G__16570,G__16571,G__16572));
});
var G__17173__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16573 = a;
var G__16574 = b;
var G__16575 = c;
var G__16576 = d;
var G__16577 = e;
var G__16578 = f;
var G__16579 = g;
var G__16580 = h;
var G__16581 = i;
var G__16582 = j;
var G__16583 = k;
var G__16584 = l;
var G__16585 = m;
var G__16586 = n;
var G__16587 = o;
var G__16588 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16573,G__16574,G__16575,G__16576,G__16577,G__16578,G__16579,G__16580,G__16581,G__16582,G__16583,G__16584,G__16585,G__16586,G__16587,G__16588) : self__.dispatch_fn.call(null,G__16573,G__16574,G__16575,G__16576,G__16577,G__16578,G__16579,G__16580,G__16581,G__16582,G__16583,G__16584,G__16585,G__16586,G__16587,G__16588));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16589 = a;
var G__16590 = b;
var G__16591 = c;
var G__16592 = d;
var G__16593 = e;
var G__16594 = f;
var G__16595 = g;
var G__16596 = h;
var G__16597 = i;
var G__16598 = j;
var G__16599 = k;
var G__16600 = l;
var G__16601 = m;
var G__16602 = n;
var G__16603 = o;
var G__16604 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16589,G__16590,G__16591,G__16592,G__16593,G__16594,G__16595,G__16596,G__16597,G__16598,G__16599,G__16600,G__16601,G__16602,G__16603,G__16604) : target_fn.call(null,G__16589,G__16590,G__16591,G__16592,G__16593,G__16594,G__16595,G__16596,G__16597,G__16598,G__16599,G__16600,G__16601,G__16602,G__16603,G__16604));
});
var G__17173__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16605 = a;
var G__16606 = b;
var G__16607 = c;
var G__16608 = d;
var G__16609 = e;
var G__16610 = f;
var G__16611 = g;
var G__16612 = h;
var G__16613 = i;
var G__16614 = j;
var G__16615 = k;
var G__16616 = l;
var G__16617 = m;
var G__16618 = n;
var G__16619 = o;
var G__16620 = p;
var G__16621 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16605,G__16606,G__16607,G__16608,G__16609,G__16610,G__16611,G__16612,G__16613,G__16614,G__16615,G__16616,G__16617,G__16618,G__16619,G__16620,G__16621) : self__.dispatch_fn.call(null,G__16605,G__16606,G__16607,G__16608,G__16609,G__16610,G__16611,G__16612,G__16613,G__16614,G__16615,G__16616,G__16617,G__16618,G__16619,G__16620,G__16621));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16622 = a;
var G__16623 = b;
var G__16624 = c;
var G__16625 = d;
var G__16626 = e;
var G__16627 = f;
var G__16628 = g;
var G__16629 = h;
var G__16630 = i;
var G__16631 = j;
var G__16632 = k;
var G__16633 = l;
var G__16634 = m;
var G__16635 = n;
var G__16636 = o;
var G__16637 = p;
var G__16638 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16622,G__16623,G__16624,G__16625,G__16626,G__16627,G__16628,G__16629,G__16630,G__16631,G__16632,G__16633,G__16634,G__16635,G__16636,G__16637,G__16638) : target_fn.call(null,G__16622,G__16623,G__16624,G__16625,G__16626,G__16627,G__16628,G__16629,G__16630,G__16631,G__16632,G__16633,G__16634,G__16635,G__16636,G__16637,G__16638));
});
var G__17173__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16639 = a;
var G__16640 = b;
var G__16641 = c;
var G__16642 = d;
var G__16643 = e;
var G__16644 = f;
var G__16645 = g;
var G__16646 = h;
var G__16647 = i;
var G__16648 = j;
var G__16649 = k;
var G__16650 = l;
var G__16651 = m;
var G__16652 = n;
var G__16653 = o;
var G__16654 = p;
var G__16655 = q;
var G__16656 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16639,G__16640,G__16641,G__16642,G__16643,G__16644,G__16645,G__16646,G__16647,G__16648,G__16649,G__16650,G__16651,G__16652,G__16653,G__16654,G__16655,G__16656) : self__.dispatch_fn.call(null,G__16639,G__16640,G__16641,G__16642,G__16643,G__16644,G__16645,G__16646,G__16647,G__16648,G__16649,G__16650,G__16651,G__16652,G__16653,G__16654,G__16655,G__16656));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16657 = a;
var G__16658 = b;
var G__16659 = c;
var G__16660 = d;
var G__16661 = e;
var G__16662 = f;
var G__16663 = g;
var G__16664 = h;
var G__16665 = i;
var G__16666 = j;
var G__16667 = k;
var G__16668 = l;
var G__16669 = m;
var G__16670 = n;
var G__16671 = o;
var G__16672 = p;
var G__16673 = q;
var G__16674 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16657,G__16658,G__16659,G__16660,G__16661,G__16662,G__16663,G__16664,G__16665,G__16666,G__16667,G__16668,G__16669,G__16670,G__16671,G__16672,G__16673,G__16674) : target_fn.call(null,G__16657,G__16658,G__16659,G__16660,G__16661,G__16662,G__16663,G__16664,G__16665,G__16666,G__16667,G__16668,G__16669,G__16670,G__16671,G__16672,G__16673,G__16674));
});
var G__17173__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16675 = a;
var G__16676 = b;
var G__16677 = c;
var G__16678 = d;
var G__16679 = e;
var G__16680 = f;
var G__16681 = g;
var G__16682 = h;
var G__16683 = i;
var G__16684 = j;
var G__16685 = k;
var G__16686 = l;
var G__16687 = m;
var G__16688 = n;
var G__16689 = o;
var G__16690 = p;
var G__16691 = q;
var G__16692 = r;
var G__16693 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16675,G__16676,G__16677,G__16678,G__16679,G__16680,G__16681,G__16682,G__16683,G__16684,G__16685,G__16686,G__16687,G__16688,G__16689,G__16690,G__16691,G__16692,G__16693) : self__.dispatch_fn.call(null,G__16675,G__16676,G__16677,G__16678,G__16679,G__16680,G__16681,G__16682,G__16683,G__16684,G__16685,G__16686,G__16687,G__16688,G__16689,G__16690,G__16691,G__16692,G__16693));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16694 = a;
var G__16695 = b;
var G__16696 = c;
var G__16697 = d;
var G__16698 = e;
var G__16699 = f;
var G__16700 = g;
var G__16701 = h;
var G__16702 = i;
var G__16703 = j;
var G__16704 = k;
var G__16705 = l;
var G__16706 = m;
var G__16707 = n;
var G__16708 = o;
var G__16709 = p;
var G__16710 = q;
var G__16711 = r;
var G__16712 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16694,G__16695,G__16696,G__16697,G__16698,G__16699,G__16700,G__16701,G__16702,G__16703,G__16704,G__16705,G__16706,G__16707,G__16708,G__16709,G__16710,G__16711,G__16712) : target_fn.call(null,G__16694,G__16695,G__16696,G__16697,G__16698,G__16699,G__16700,G__16701,G__16702,G__16703,G__16704,G__16705,G__16706,G__16707,G__16708,G__16709,G__16710,G__16711,G__16712));
});
var G__17173__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16713 = a;
var G__16714 = b;
var G__16715 = c;
var G__16716 = d;
var G__16717 = e;
var G__16718 = f;
var G__16719 = g;
var G__16720 = h;
var G__16721 = i;
var G__16722 = j;
var G__16723 = k;
var G__16724 = l;
var G__16725 = m;
var G__16726 = n;
var G__16727 = o;
var G__16728 = p;
var G__16729 = q;
var G__16730 = r;
var G__16731 = s;
var G__16732 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16713,G__16714,G__16715,G__16716,G__16717,G__16718,G__16719,G__16720,G__16721,G__16722,G__16723,G__16724,G__16725,G__16726,G__16727,G__16728,G__16729,G__16730,G__16731,G__16732) : self__.dispatch_fn.call(null,G__16713,G__16714,G__16715,G__16716,G__16717,G__16718,G__16719,G__16720,G__16721,G__16722,G__16723,G__16724,G__16725,G__16726,G__16727,G__16728,G__16729,G__16730,G__16731,G__16732));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16733 = a;
var G__16734 = b;
var G__16735 = c;
var G__16736 = d;
var G__16737 = e;
var G__16738 = f;
var G__16739 = g;
var G__16740 = h;
var G__16741 = i;
var G__16742 = j;
var G__16743 = k;
var G__16744 = l;
var G__16745 = m;
var G__16746 = n;
var G__16747 = o;
var G__16748 = p;
var G__16749 = q;
var G__16750 = r;
var G__16751 = s;
var G__16752 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16733,G__16734,G__16735,G__16736,G__16737,G__16738,G__16739,G__16740,G__16741,G__16742,G__16743,G__16744,G__16745,G__16746,G__16747,G__16748,G__16749,G__16750,G__16751,G__16752) : target_fn.call(null,G__16733,G__16734,G__16735,G__16736,G__16737,G__16738,G__16739,G__16740,G__16741,G__16742,G__16743,G__16744,G__16745,G__16746,G__16747,G__16748,G__16749,G__16750,G__16751,G__16752));
});
var G__17173__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__17173 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__17173__1.call(this,self__);
case 2:
return G__17173__2.call(this,self__,a);
case 3:
return G__17173__3.call(this,self__,a,b);
case 4:
return G__17173__4.call(this,self__,a,b,c);
case 5:
return G__17173__5.call(this,self__,a,b,c,d);
case 6:
return G__17173__6.call(this,self__,a,b,c,d,e);
case 7:
return G__17173__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__17173__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__17173__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__17173__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__17173__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__17173__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__17173__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__17173__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__17173__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__17173__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__17173__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__17173__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__17173__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__17173__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__17173__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__17173__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17173.cljs$core$IFn$_invoke$arity$1 = G__17173__1;
G__17173.cljs$core$IFn$_invoke$arity$2 = G__17173__2;
G__17173.cljs$core$IFn$_invoke$arity$3 = G__17173__3;
G__17173.cljs$core$IFn$_invoke$arity$4 = G__17173__4;
G__17173.cljs$core$IFn$_invoke$arity$5 = G__17173__5;
G__17173.cljs$core$IFn$_invoke$arity$6 = G__17173__6;
G__17173.cljs$core$IFn$_invoke$arity$7 = G__17173__7;
G__17173.cljs$core$IFn$_invoke$arity$8 = G__17173__8;
G__17173.cljs$core$IFn$_invoke$arity$9 = G__17173__9;
G__17173.cljs$core$IFn$_invoke$arity$10 = G__17173__10;
G__17173.cljs$core$IFn$_invoke$arity$11 = G__17173__11;
G__17173.cljs$core$IFn$_invoke$arity$12 = G__17173__12;
G__17173.cljs$core$IFn$_invoke$arity$13 = G__17173__13;
G__17173.cljs$core$IFn$_invoke$arity$14 = G__17173__14;
G__17173.cljs$core$IFn$_invoke$arity$15 = G__17173__15;
G__17173.cljs$core$IFn$_invoke$arity$16 = G__17173__16;
G__17173.cljs$core$IFn$_invoke$arity$17 = G__17173__17;
G__17173.cljs$core$IFn$_invoke$arity$18 = G__17173__18;
G__17173.cljs$core$IFn$_invoke$arity$19 = G__17173__19;
G__17173.cljs$core$IFn$_invoke$arity$20 = G__17173__20;
G__17173.cljs$core$IFn$_invoke$arity$21 = G__17173__21;
G__17173.cljs$core$IFn$_invoke$arity$22 = G__17173__22;
return G__17173;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args16325){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16325)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16753 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16753) : self__.dispatch_fn.call(null,G__16753));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16754 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16754) : target_fn.call(null,G__16754));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16755 = a;
var G__16756 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16755,G__16756) : self__.dispatch_fn.call(null,G__16755,G__16756));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16757 = a;
var G__16758 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16757,G__16758) : target_fn.call(null,G__16757,G__16758));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16759 = a;
var G__16760 = b;
var G__16761 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16759,G__16760,G__16761) : self__.dispatch_fn.call(null,G__16759,G__16760,G__16761));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16762 = a;
var G__16763 = b;
var G__16764 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16762,G__16763,G__16764) : target_fn.call(null,G__16762,G__16763,G__16764));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16765 = a;
var G__16766 = b;
var G__16767 = c;
var G__16768 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16765,G__16766,G__16767,G__16768) : self__.dispatch_fn.call(null,G__16765,G__16766,G__16767,G__16768));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16769 = a;
var G__16770 = b;
var G__16771 = c;
var G__16772 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16769,G__16770,G__16771,G__16772) : target_fn.call(null,G__16769,G__16770,G__16771,G__16772));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16773 = a;
var G__16774 = b;
var G__16775 = c;
var G__16776 = d;
var G__16777 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16773,G__16774,G__16775,G__16776,G__16777) : self__.dispatch_fn.call(null,G__16773,G__16774,G__16775,G__16776,G__16777));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16778 = a;
var G__16779 = b;
var G__16780 = c;
var G__16781 = d;
var G__16782 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16778,G__16779,G__16780,G__16781,G__16782) : target_fn.call(null,G__16778,G__16779,G__16780,G__16781,G__16782));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16783 = a;
var G__16784 = b;
var G__16785 = c;
var G__16786 = d;
var G__16787 = e;
var G__16788 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16783,G__16784,G__16785,G__16786,G__16787,G__16788) : self__.dispatch_fn.call(null,G__16783,G__16784,G__16785,G__16786,G__16787,G__16788));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16789 = a;
var G__16790 = b;
var G__16791 = c;
var G__16792 = d;
var G__16793 = e;
var G__16794 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16789,G__16790,G__16791,G__16792,G__16793,G__16794) : target_fn.call(null,G__16789,G__16790,G__16791,G__16792,G__16793,G__16794));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16795 = a;
var G__16796 = b;
var G__16797 = c;
var G__16798 = d;
var G__16799 = e;
var G__16800 = f;
var G__16801 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16795,G__16796,G__16797,G__16798,G__16799,G__16800,G__16801) : self__.dispatch_fn.call(null,G__16795,G__16796,G__16797,G__16798,G__16799,G__16800,G__16801));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16802 = a;
var G__16803 = b;
var G__16804 = c;
var G__16805 = d;
var G__16806 = e;
var G__16807 = f;
var G__16808 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16802,G__16803,G__16804,G__16805,G__16806,G__16807,G__16808) : target_fn.call(null,G__16802,G__16803,G__16804,G__16805,G__16806,G__16807,G__16808));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16809 = a;
var G__16810 = b;
var G__16811 = c;
var G__16812 = d;
var G__16813 = e;
var G__16814 = f;
var G__16815 = g;
var G__16816 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16809,G__16810,G__16811,G__16812,G__16813,G__16814,G__16815,G__16816) : self__.dispatch_fn.call(null,G__16809,G__16810,G__16811,G__16812,G__16813,G__16814,G__16815,G__16816));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16817 = a;
var G__16818 = b;
var G__16819 = c;
var G__16820 = d;
var G__16821 = e;
var G__16822 = f;
var G__16823 = g;
var G__16824 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16817,G__16818,G__16819,G__16820,G__16821,G__16822,G__16823,G__16824) : target_fn.call(null,G__16817,G__16818,G__16819,G__16820,G__16821,G__16822,G__16823,G__16824));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16825 = a;
var G__16826 = b;
var G__16827 = c;
var G__16828 = d;
var G__16829 = e;
var G__16830 = f;
var G__16831 = g;
var G__16832 = h;
var G__16833 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16825,G__16826,G__16827,G__16828,G__16829,G__16830,G__16831,G__16832,G__16833) : self__.dispatch_fn.call(null,G__16825,G__16826,G__16827,G__16828,G__16829,G__16830,G__16831,G__16832,G__16833));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16834 = a;
var G__16835 = b;
var G__16836 = c;
var G__16837 = d;
var G__16838 = e;
var G__16839 = f;
var G__16840 = g;
var G__16841 = h;
var G__16842 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16834,G__16835,G__16836,G__16837,G__16838,G__16839,G__16840,G__16841,G__16842) : target_fn.call(null,G__16834,G__16835,G__16836,G__16837,G__16838,G__16839,G__16840,G__16841,G__16842));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16843 = a;
var G__16844 = b;
var G__16845 = c;
var G__16846 = d;
var G__16847 = e;
var G__16848 = f;
var G__16849 = g;
var G__16850 = h;
var G__16851 = i;
var G__16852 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16843,G__16844,G__16845,G__16846,G__16847,G__16848,G__16849,G__16850,G__16851,G__16852) : self__.dispatch_fn.call(null,G__16843,G__16844,G__16845,G__16846,G__16847,G__16848,G__16849,G__16850,G__16851,G__16852));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16853 = a;
var G__16854 = b;
var G__16855 = c;
var G__16856 = d;
var G__16857 = e;
var G__16858 = f;
var G__16859 = g;
var G__16860 = h;
var G__16861 = i;
var G__16862 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16853,G__16854,G__16855,G__16856,G__16857,G__16858,G__16859,G__16860,G__16861,G__16862) : target_fn.call(null,G__16853,G__16854,G__16855,G__16856,G__16857,G__16858,G__16859,G__16860,G__16861,G__16862));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16863 = a;
var G__16864 = b;
var G__16865 = c;
var G__16866 = d;
var G__16867 = e;
var G__16868 = f;
var G__16869 = g;
var G__16870 = h;
var G__16871 = i;
var G__16872 = j;
var G__16873 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16863,G__16864,G__16865,G__16866,G__16867,G__16868,G__16869,G__16870,G__16871,G__16872,G__16873) : self__.dispatch_fn.call(null,G__16863,G__16864,G__16865,G__16866,G__16867,G__16868,G__16869,G__16870,G__16871,G__16872,G__16873));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16874 = a;
var G__16875 = b;
var G__16876 = c;
var G__16877 = d;
var G__16878 = e;
var G__16879 = f;
var G__16880 = g;
var G__16881 = h;
var G__16882 = i;
var G__16883 = j;
var G__16884 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16874,G__16875,G__16876,G__16877,G__16878,G__16879,G__16880,G__16881,G__16882,G__16883,G__16884) : target_fn.call(null,G__16874,G__16875,G__16876,G__16877,G__16878,G__16879,G__16880,G__16881,G__16882,G__16883,G__16884));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16885 = a;
var G__16886 = b;
var G__16887 = c;
var G__16888 = d;
var G__16889 = e;
var G__16890 = f;
var G__16891 = g;
var G__16892 = h;
var G__16893 = i;
var G__16894 = j;
var G__16895 = k;
var G__16896 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16885,G__16886,G__16887,G__16888,G__16889,G__16890,G__16891,G__16892,G__16893,G__16894,G__16895,G__16896) : self__.dispatch_fn.call(null,G__16885,G__16886,G__16887,G__16888,G__16889,G__16890,G__16891,G__16892,G__16893,G__16894,G__16895,G__16896));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16897 = a;
var G__16898 = b;
var G__16899 = c;
var G__16900 = d;
var G__16901 = e;
var G__16902 = f;
var G__16903 = g;
var G__16904 = h;
var G__16905 = i;
var G__16906 = j;
var G__16907 = k;
var G__16908 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16897,G__16898,G__16899,G__16900,G__16901,G__16902,G__16903,G__16904,G__16905,G__16906,G__16907,G__16908) : target_fn.call(null,G__16897,G__16898,G__16899,G__16900,G__16901,G__16902,G__16903,G__16904,G__16905,G__16906,G__16907,G__16908));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16909 = a;
var G__16910 = b;
var G__16911 = c;
var G__16912 = d;
var G__16913 = e;
var G__16914 = f;
var G__16915 = g;
var G__16916 = h;
var G__16917 = i;
var G__16918 = j;
var G__16919 = k;
var G__16920 = l;
var G__16921 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16909,G__16910,G__16911,G__16912,G__16913,G__16914,G__16915,G__16916,G__16917,G__16918,G__16919,G__16920,G__16921) : self__.dispatch_fn.call(null,G__16909,G__16910,G__16911,G__16912,G__16913,G__16914,G__16915,G__16916,G__16917,G__16918,G__16919,G__16920,G__16921));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16922 = a;
var G__16923 = b;
var G__16924 = c;
var G__16925 = d;
var G__16926 = e;
var G__16927 = f;
var G__16928 = g;
var G__16929 = h;
var G__16930 = i;
var G__16931 = j;
var G__16932 = k;
var G__16933 = l;
var G__16934 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16922,G__16923,G__16924,G__16925,G__16926,G__16927,G__16928,G__16929,G__16930,G__16931,G__16932,G__16933,G__16934) : target_fn.call(null,G__16922,G__16923,G__16924,G__16925,G__16926,G__16927,G__16928,G__16929,G__16930,G__16931,G__16932,G__16933,G__16934));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16935 = a;
var G__16936 = b;
var G__16937 = c;
var G__16938 = d;
var G__16939 = e;
var G__16940 = f;
var G__16941 = g;
var G__16942 = h;
var G__16943 = i;
var G__16944 = j;
var G__16945 = k;
var G__16946 = l;
var G__16947 = m;
var G__16948 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16935,G__16936,G__16937,G__16938,G__16939,G__16940,G__16941,G__16942,G__16943,G__16944,G__16945,G__16946,G__16947,G__16948) : self__.dispatch_fn.call(null,G__16935,G__16936,G__16937,G__16938,G__16939,G__16940,G__16941,G__16942,G__16943,G__16944,G__16945,G__16946,G__16947,G__16948));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16949 = a;
var G__16950 = b;
var G__16951 = c;
var G__16952 = d;
var G__16953 = e;
var G__16954 = f;
var G__16955 = g;
var G__16956 = h;
var G__16957 = i;
var G__16958 = j;
var G__16959 = k;
var G__16960 = l;
var G__16961 = m;
var G__16962 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16949,G__16950,G__16951,G__16952,G__16953,G__16954,G__16955,G__16956,G__16957,G__16958,G__16959,G__16960,G__16961,G__16962) : target_fn.call(null,G__16949,G__16950,G__16951,G__16952,G__16953,G__16954,G__16955,G__16956,G__16957,G__16958,G__16959,G__16960,G__16961,G__16962));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16963 = a;
var G__16964 = b;
var G__16965 = c;
var G__16966 = d;
var G__16967 = e;
var G__16968 = f;
var G__16969 = g;
var G__16970 = h;
var G__16971 = i;
var G__16972 = j;
var G__16973 = k;
var G__16974 = l;
var G__16975 = m;
var G__16976 = n;
var G__16977 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16963,G__16964,G__16965,G__16966,G__16967,G__16968,G__16969,G__16970,G__16971,G__16972,G__16973,G__16974,G__16975,G__16976,G__16977) : self__.dispatch_fn.call(null,G__16963,G__16964,G__16965,G__16966,G__16967,G__16968,G__16969,G__16970,G__16971,G__16972,G__16973,G__16974,G__16975,G__16976,G__16977));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16978 = a;
var G__16979 = b;
var G__16980 = c;
var G__16981 = d;
var G__16982 = e;
var G__16983 = f;
var G__16984 = g;
var G__16985 = h;
var G__16986 = i;
var G__16987 = j;
var G__16988 = k;
var G__16989 = l;
var G__16990 = m;
var G__16991 = n;
var G__16992 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16978,G__16979,G__16980,G__16981,G__16982,G__16983,G__16984,G__16985,G__16986,G__16987,G__16988,G__16989,G__16990,G__16991,G__16992) : target_fn.call(null,G__16978,G__16979,G__16980,G__16981,G__16982,G__16983,G__16984,G__16985,G__16986,G__16987,G__16988,G__16989,G__16990,G__16991,G__16992));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16993 = a;
var G__16994 = b;
var G__16995 = c;
var G__16996 = d;
var G__16997 = e;
var G__16998 = f;
var G__16999 = g;
var G__17000 = h;
var G__17001 = i;
var G__17002 = j;
var G__17003 = k;
var G__17004 = l;
var G__17005 = m;
var G__17006 = n;
var G__17007 = o;
var G__17008 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16993,G__16994,G__16995,G__16996,G__16997,G__16998,G__16999,G__17000,G__17001,G__17002,G__17003,G__17004,G__17005,G__17006,G__17007,G__17008) : self__.dispatch_fn.call(null,G__16993,G__16994,G__16995,G__16996,G__16997,G__16998,G__16999,G__17000,G__17001,G__17002,G__17003,G__17004,G__17005,G__17006,G__17007,G__17008));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17009 = a;
var G__17010 = b;
var G__17011 = c;
var G__17012 = d;
var G__17013 = e;
var G__17014 = f;
var G__17015 = g;
var G__17016 = h;
var G__17017 = i;
var G__17018 = j;
var G__17019 = k;
var G__17020 = l;
var G__17021 = m;
var G__17022 = n;
var G__17023 = o;
var G__17024 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17009,G__17010,G__17011,G__17012,G__17013,G__17014,G__17015,G__17016,G__17017,G__17018,G__17019,G__17020,G__17021,G__17022,G__17023,G__17024) : target_fn.call(null,G__17009,G__17010,G__17011,G__17012,G__17013,G__17014,G__17015,G__17016,G__17017,G__17018,G__17019,G__17020,G__17021,G__17022,G__17023,G__17024));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17025 = a;
var G__17026 = b;
var G__17027 = c;
var G__17028 = d;
var G__17029 = e;
var G__17030 = f;
var G__17031 = g;
var G__17032 = h;
var G__17033 = i;
var G__17034 = j;
var G__17035 = k;
var G__17036 = l;
var G__17037 = m;
var G__17038 = n;
var G__17039 = o;
var G__17040 = p;
var G__17041 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17025,G__17026,G__17027,G__17028,G__17029,G__17030,G__17031,G__17032,G__17033,G__17034,G__17035,G__17036,G__17037,G__17038,G__17039,G__17040,G__17041) : self__.dispatch_fn.call(null,G__17025,G__17026,G__17027,G__17028,G__17029,G__17030,G__17031,G__17032,G__17033,G__17034,G__17035,G__17036,G__17037,G__17038,G__17039,G__17040,G__17041));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17042 = a;
var G__17043 = b;
var G__17044 = c;
var G__17045 = d;
var G__17046 = e;
var G__17047 = f;
var G__17048 = g;
var G__17049 = h;
var G__17050 = i;
var G__17051 = j;
var G__17052 = k;
var G__17053 = l;
var G__17054 = m;
var G__17055 = n;
var G__17056 = o;
var G__17057 = p;
var G__17058 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17042,G__17043,G__17044,G__17045,G__17046,G__17047,G__17048,G__17049,G__17050,G__17051,G__17052,G__17053,G__17054,G__17055,G__17056,G__17057,G__17058) : target_fn.call(null,G__17042,G__17043,G__17044,G__17045,G__17046,G__17047,G__17048,G__17049,G__17050,G__17051,G__17052,G__17053,G__17054,G__17055,G__17056,G__17057,G__17058));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17059 = a;
var G__17060 = b;
var G__17061 = c;
var G__17062 = d;
var G__17063 = e;
var G__17064 = f;
var G__17065 = g;
var G__17066 = h;
var G__17067 = i;
var G__17068 = j;
var G__17069 = k;
var G__17070 = l;
var G__17071 = m;
var G__17072 = n;
var G__17073 = o;
var G__17074 = p;
var G__17075 = q;
var G__17076 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17059,G__17060,G__17061,G__17062,G__17063,G__17064,G__17065,G__17066,G__17067,G__17068,G__17069,G__17070,G__17071,G__17072,G__17073,G__17074,G__17075,G__17076) : self__.dispatch_fn.call(null,G__17059,G__17060,G__17061,G__17062,G__17063,G__17064,G__17065,G__17066,G__17067,G__17068,G__17069,G__17070,G__17071,G__17072,G__17073,G__17074,G__17075,G__17076));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17077 = a;
var G__17078 = b;
var G__17079 = c;
var G__17080 = d;
var G__17081 = e;
var G__17082 = f;
var G__17083 = g;
var G__17084 = h;
var G__17085 = i;
var G__17086 = j;
var G__17087 = k;
var G__17088 = l;
var G__17089 = m;
var G__17090 = n;
var G__17091 = o;
var G__17092 = p;
var G__17093 = q;
var G__17094 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17077,G__17078,G__17079,G__17080,G__17081,G__17082,G__17083,G__17084,G__17085,G__17086,G__17087,G__17088,G__17089,G__17090,G__17091,G__17092,G__17093,G__17094) : target_fn.call(null,G__17077,G__17078,G__17079,G__17080,G__17081,G__17082,G__17083,G__17084,G__17085,G__17086,G__17087,G__17088,G__17089,G__17090,G__17091,G__17092,G__17093,G__17094));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17095 = a;
var G__17096 = b;
var G__17097 = c;
var G__17098 = d;
var G__17099 = e;
var G__17100 = f;
var G__17101 = g;
var G__17102 = h;
var G__17103 = i;
var G__17104 = j;
var G__17105 = k;
var G__17106 = l;
var G__17107 = m;
var G__17108 = n;
var G__17109 = o;
var G__17110 = p;
var G__17111 = q;
var G__17112 = r;
var G__17113 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17095,G__17096,G__17097,G__17098,G__17099,G__17100,G__17101,G__17102,G__17103,G__17104,G__17105,G__17106,G__17107,G__17108,G__17109,G__17110,G__17111,G__17112,G__17113) : self__.dispatch_fn.call(null,G__17095,G__17096,G__17097,G__17098,G__17099,G__17100,G__17101,G__17102,G__17103,G__17104,G__17105,G__17106,G__17107,G__17108,G__17109,G__17110,G__17111,G__17112,G__17113));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17114 = a;
var G__17115 = b;
var G__17116 = c;
var G__17117 = d;
var G__17118 = e;
var G__17119 = f;
var G__17120 = g;
var G__17121 = h;
var G__17122 = i;
var G__17123 = j;
var G__17124 = k;
var G__17125 = l;
var G__17126 = m;
var G__17127 = n;
var G__17128 = o;
var G__17129 = p;
var G__17130 = q;
var G__17131 = r;
var G__17132 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17114,G__17115,G__17116,G__17117,G__17118,G__17119,G__17120,G__17121,G__17122,G__17123,G__17124,G__17125,G__17126,G__17127,G__17128,G__17129,G__17130,G__17131,G__17132) : target_fn.call(null,G__17114,G__17115,G__17116,G__17117,G__17118,G__17119,G__17120,G__17121,G__17122,G__17123,G__17124,G__17125,G__17126,G__17127,G__17128,G__17129,G__17130,G__17131,G__17132));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17133 = a;
var G__17134 = b;
var G__17135 = c;
var G__17136 = d;
var G__17137 = e;
var G__17138 = f;
var G__17139 = g;
var G__17140 = h;
var G__17141 = i;
var G__17142 = j;
var G__17143 = k;
var G__17144 = l;
var G__17145 = m;
var G__17146 = n;
var G__17147 = o;
var G__17148 = p;
var G__17149 = q;
var G__17150 = r;
var G__17151 = s;
var G__17152 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17133,G__17134,G__17135,G__17136,G__17137,G__17138,G__17139,G__17140,G__17141,G__17142,G__17143,G__17144,G__17145,G__17146,G__17147,G__17148,G__17149,G__17150,G__17151,G__17152) : self__.dispatch_fn.call(null,G__17133,G__17134,G__17135,G__17136,G__17137,G__17138,G__17139,G__17140,G__17141,G__17142,G__17143,G__17144,G__17145,G__17146,G__17147,G__17148,G__17149,G__17150,G__17151,G__17152));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17153 = a;
var G__17154 = b;
var G__17155 = c;
var G__17156 = d;
var G__17157 = e;
var G__17158 = f;
var G__17159 = g;
var G__17160 = h;
var G__17161 = i;
var G__17162 = j;
var G__17163 = k;
var G__17164 = l;
var G__17165 = m;
var G__17166 = n;
var G__17167 = o;
var G__17168 = p;
var G__17169 = q;
var G__17170 = r;
var G__17171 = s;
var G__17172 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17153,G__17154,G__17155,G__17156,G__17157,G__17158,G__17159,G__17160,G__17161,G__17162,G__17163,G__17164,G__17165,G__17166,G__17167,G__17168,G__17169,G__17170,G__17171,G__17172) : target_fn.call(null,G__17153,G__17154,G__17155,G__17156,G__17157,G__17158,G__17159,G__17160,G__17161,G__17162,G__17163,G__17164,G__17165,G__17166,G__17167,G__17168,G__17169,G__17170,G__17171,G__17172));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__17174 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__17174);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4351__auto__,writer__4352__auto__,opt__4353__auto__){
return cljs.core._write(writer__4352__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__17179 = msg;
return Error(G__17179);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__17184 = x;
var G__17185 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17184,G__17185) : pred.call(null,G__17184,G__17185));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__17186 = y;
var G__17187 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17186,G__17187) : pred.call(null,G__17186,G__17187));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$20;
} else {
return cljs.core.constant$keyword$21;
}
});
